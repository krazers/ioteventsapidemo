{"version":3,"sources":["../../../src/I18n/I18n.ts","../../../src/I18n/index.ts","../node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-radio-button_2.entry.js","../node_modules/@aws-amplify/ui-components/dist/esm-es5/constants-206817b9.js","../node_modules/@aws-amplify/ui-components/dist/esm-es5/auth-types-78df304e.js","../node_modules/@aws-amplify/ui-components/dist/esm-es5/helpers-5e56336b.js","../node_modules/@aws-amplify/ui-components/dist/esm-es5/Translations-203f8a2f.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","AmplifyRadioButton","hostRef","registerInstance","placeholder","checked","disabled","prototype","render","h","class","type","name","onInput","handleInputChange","id","fieldId","htmlFor","style","canPromise","toString","isarray","Array","isArray","arr","Buffer","TYPED_ARRAY_SUPPORT","Uint8Array","__proto__","foo","typedArraySupport","K_MAX_LENGTH","arg","offset","allocUnsafe","that","ArrayBuffer","array","byteOffset","byteLength","RangeError","buf","undefined","fromArrayLike","fromArrayBuffer","string","createBuffer","actual","write","slice","fromString","obj","isBuffer","len","copy","buffer","val","data","fromObject","from","size","i","utf8ToBytes","units","codePoint","Infinity","leadSurrogate","bytes","charCodeAt","Error","isView","species","Object","defineProperty","configurable","enumerable","writable","isFinite","remaining","src","dst","blitBuffer","utf8Write","start","end","newBuf","subarray","sliceLen","target","targetStart","set","fill","code","concat","list","pos","_isBuffer","b","toSJISFunction","typedarrayBuffer","CODEWORDS_COUNT","utils","version","digit","kanji","createCommonjsModule","fn","module","exports","errorCorrectionLevel","L","bit","M","Q","H","isValid","level","defaultValue","toLowerCase","BitBuffer","get","index","bufIndex","Math","floor","put","num","putBit","getLengthInBits","bitBuffer","BitMatrix","reservedBit","row","col","reserved","xor","isReserved","bitMatrix","alignmentPattern","getSymbolSize","getRowColCoords","posCount","intervals","ceil","positions","reverse","getPositions","coords","posLength","j","getSymbolSize$1","finderPattern","maskPattern","Patterns","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PenaltyScores","getMaskAt","mask","isNaN","parseInt","getPenaltyN1","points","sameCountCol","sameCountRow","lastCol","lastRow","getPenaltyN2","last","getPenaltyN3","bitsCol","bitsRow","getPenaltyN4","darkCount","modulesCount","abs","applyMask","pattern","getBestMask","setupFormatFunc","numPatterns","keys","bestPattern","lowerPenalty","p","penalty","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","errorCorrectionCode","errorCorrectionLevel$1","EXP_TABLE","LOG_TABLE","x","galoisField","polynomial","mul","p1","p2","coeff","mod","divident","divisor","generateECPolynomial","degree","poly","Buffer$1","ReedSolomonEncoder","genPoly","initialize","encode","pad","paddedData","remainder","buff","reedSolomonEncoder","versionCheck","byte","replace","KANJI","RegExp","BYTE_KANJI","BYTE","NUMERIC","ALPHANUMERIC","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","regex","testKanji","str","test","testNumeric","testAlphanumeric","mode","ccBits","MIXED","getCharCountIndicator","getBestModeForData","dataStr","G18_BCH","getReservedBitsCount","mode$1","getTotalBitsFromDataArray","segments","totalBits","forEach","reservedBits","getBitsLength","getCapacity","dataTotalCodewordsBits","usableBits","getBestVersionForData","seg","ecl","currentVersion","getBestVersionForMixedData","getBestVersionForDataLength","getLength","getEncodedBits","d","G15_BCH","formatInfo","NumericData","group","substr","remainingNum","numericData","ALPHA_NUM_CHARS","AlphanumericData","indexOf","alphanumericData","ByteData","l","byteData","KanjiData","kanjiData","dijkstra_1","dijkstra","single_source_shortest_paths","graph","s","predecessors","costs","closest","u","cost_of_s_to_u","adjacent_nodes","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","open","PriorityQueue","make","empty","cost","hasOwnProperty","msg","join","extract_shortest_path_from_predecessor_list","nodes","find_path","opts","key","T","queue","sorter","default_sorter","a","item","sort","shift","getStringByteLength","unescape","encodeURIComponent","getSegments","exec","getSegmentsFromString","byteSegs","kanjiSegs","numSegs","alphaNumSegs","s1","s2","map","getSegmentBitsLength","buildSingleSegment","modesHint","bestMode","fromArray","reduce","acc","table","prevNodeIds","nodeGroup","currentNodeIds","node","lastCount","prevNodeId","buildGraph","segs","buildNodes","path","optimizedSegs","curr","prevSeg","mergeSegments","rawSplit","setupFormatInfo","matrix","bits","createData","remainingByte","totalCodewords","ecTotalCodewords","dataTotalCodewords","ecTotalBlocks","blocksInGroup1","totalCodewordsInGroup1","dataCodewordsInGroup1","dataCodewordsInGroup2","ecCount","rs","dcData","ecData","maxDataSize","dataSize","max","r","createCodewords","createSymbol","version$1","maskPattern$1","segments$1","estimatedVersion","rawSegments","bestVersion","dataBits","moduleCount","modules","c","setupFinderPattern","setupTimingPattern","setupAlignmentPattern","setupVersionInfo","inc","bitIndex","byteIndex","dark","setupData","bind","qrcode","options","toSJISFunc","utils$1","hex2rgba","hex","hexCode","split","hexValue","getOptions","color","margin","width","scale","light","rendererOpts","getScale","qrSize","getImageWidth","qrToImageData","imgData","qr","symbolSize","scaledMargin","palette","posDst","pxColor","canvas","qrData","canvasEl","getContext","document","createElement","getCanvasElement","ctx","image","createImageData","clearRect","height","clearCanvas","putImageData","renderToDataURL","toDataURL","quality","getColorAttrib","attrib","alpha","toFixed","svgCmd","cmd","svgTag","cb","qrcodesize","bg","moveBy","newRow","lineLength","qrToPath","viewBox","renderCanvas","renderFunc","text","args","arguments","argsNum","isLastArgCb","browser","create","toCanvas","logger","Logger","AmplifyTOTPSetup","class_1","inputProps","autoFocus","handleAuthStateChange","dispatchAuthStateChangeEvent","setupMessage","qrCodeInput","loading","componentWillLoad","setup","buildOtpAuthPath","user","issuer","secretKey","username","checkContact","dataVerifed","newUser","error_1","_a","Auth","verifiedContact","NO_AUTH_MODULE_FOUND","isEmpty","assign","AuthState","VerifyContact","SignedIn","dispatchToastHubEvent","onTOTPEvent","event","debug","SETUP_TOTP","SUCCESS","handleTotpInputChange","generateQRCode","codeFromTotp","error_2","_b","qrCodeImageSource","error_3","encodeURI","setupTOTP","I18n","Translations","TOTP_SETUP_FAILURE","verifyTotpToken","error_4","preventDefault","setPreferredMFA","MfaOption","TOTP","TOTP_SUCCESS_MESSAGE","error","_this","headerText","TOTP_HEADER_TEXT","submitButtonText","TOTP_SUBMIT_BUTTON_TEXT","handleSubmit","alt","QR_CODE_ALT","TOTP_LABEL","USERNAME_SUFFIX","EMAIL_SUFFIX","CODE_SUFFIX","PHONE_SUFFIX","PASSWORD_SUFFIX","COUNTRY_DIAL_CODE_SUFFIX","COUNTRY_DIAL_CODE_DEFAULT","AUTH_SOURCE_KEY","SIGNING_IN_WITH_HOSTEDUI_KEY","AUTHENTICATOR_AUTHSTATE","PHONE_EMPTY_ERROR_MESSAGE","USER_NOT_SETUP_SOFTWARE_TOKEN_MFA","USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA","AUTH_CHANNEL","UI_AUTH_CHANNEL","TOAST_AUTH_ERROR_EVENT","AUTH_STATE_CHANGE_EVENT","ChallengeName","AuthFormField","UsernameAlias","hasShadowDom","el","shadowRoot","attachShadow","Hub","dispatch","message","nextAuthState","composePhoneNumberInput","phoneNumber","phoneNumberValue","sanitizedPhoneNumberValue","countryDialCodeValue","checkUsernameAlias","usernameAlias","values"],"mappings":"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","file":"static/js/7.079bc3bb.chunk.js","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nvar logger = new Logger('I18n');\n/**\n * Language transition class\n */\nvar I18n = /** @class */ (function () {\n    /**\n     * @constructor\n     * Initialize with configurations\n     * @param {Object} options\n     */\n    function I18n(options) {\n        /**\n         * @private\n         */\n        this._options = null;\n        /**\n         * @private\n         */\n        this._lang = null;\n        /**\n         * @private\n         */\n        this._dict = {};\n        this._options = Object.assign({}, options);\n        this._lang = this._options.language;\n        if (!this._lang &&\n            typeof window !== 'undefined' &&\n            window &&\n            window.navigator) {\n            this._lang = window.navigator.language;\n        }\n        logger.debug(this._lang);\n    }\n    /**\n     * @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    I18n.prototype.setLanguage = function (lang) {\n        this._lang = lang;\n    };\n    /**\n     * @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    I18n.prototype.get = function (key, defVal) {\n        if (defVal === void 0) { defVal = undefined; }\n        if (!this._lang) {\n            return typeof defVal !== 'undefined' ? defVal : key;\n        }\n        var lang = this._lang;\n        var val = this.getByLanguage(key, lang);\n        if (val) {\n            return val;\n        }\n        if (lang.indexOf('-') > 0) {\n            val = this.getByLanguage(key, lang.split('-')[0]);\n        }\n        if (val) {\n            return val;\n        }\n        return typeof defVal !== 'undefined' ? defVal : key;\n    };\n    /**\n     * @method\n     * Get value according to specified language\n     * @param {String} key\n     * @param {String} language - Specified langurage to be used\n     * @param {String} defVal - Default value\n     */\n    I18n.prototype.getByLanguage = function (key, language, defVal) {\n        if (defVal === void 0) { defVal = null; }\n        if (!language) {\n            return defVal;\n        }\n        var lang_dict = this._dict[language];\n        if (!lang_dict) {\n            return defVal;\n        }\n        return lang_dict[key];\n    };\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {String} language - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    I18n.prototype.putVocabulariesForLanguage = function (language, vocabularies) {\n        var lang_dict = this._dict[language];\n        if (!lang_dict) {\n            lang_dict = this._dict[language] = {};\n        }\n        Object.assign(lang_dict, vocabularies);\n    };\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    I18n.prototype.putVocabularies = function (vocabularies) {\n        var _this = this;\n        Object.keys(vocabularies).map(function (key) {\n            _this.putVocabulariesForLanguage(key, vocabularies[key]);\n        });\n    };\n    return I18n;\n}());\nexport { I18n };\n//# sourceMappingURL=I18n.js.map","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { I18n as I18nClass } from './I18n';\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { Amplify } from '../Amplify';\nvar logger = new Logger('I18n');\nvar _config = null;\nvar _i18n = null;\n/**\n * Export I18n APIs\n */\nvar I18n = /** @class */ (function () {\n    function I18n() {\n    }\n    /**\n     * @static\n     * @method\n     * Configure I18n part\n     * @param {Object} config - Configuration of the I18n\n     */\n    I18n.configure = function (config) {\n        logger.debug('configure I18n');\n        if (!config) {\n            return _config;\n        }\n        _config = Object.assign({}, _config, config.I18n || config);\n        I18n.createInstance();\n        return _config;\n    };\n    I18n.getModuleName = function () {\n        return 'I18n';\n    };\n    /**\n     * @static\n     * @method\n     * Create an instance of I18n for the library\n     */\n    I18n.createInstance = function () {\n        logger.debug('create I18n instance');\n        if (_i18n) {\n            return;\n        }\n        _i18n = new I18nClass(_config);\n    };\n    /**\n     * @static @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    I18n.setLanguage = function (lang) {\n        I18n.checkConfig();\n        return _i18n.setLanguage(lang);\n    };\n    /**\n     * @static @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    I18n.get = function (key, defVal) {\n        if (!I18n.checkConfig()) {\n            return typeof defVal === 'undefined' ? key : defVal;\n        }\n        return _i18n.get(key, defVal);\n    };\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {String} langurage - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    I18n.putVocabulariesForLanguage = function (language, vocabularies) {\n        I18n.checkConfig();\n        return _i18n.putVocabulariesForLanguage(language, vocabularies);\n    };\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    I18n.putVocabularies = function (vocabularies) {\n        I18n.checkConfig();\n        return _i18n.putVocabularies(vocabularies);\n    };\n    I18n.checkConfig = function () {\n        if (!_i18n) {\n            _i18n = new I18nClass(_config);\n        }\n        return true;\n    };\n    return I18n;\n}());\nexport { I18n };\nAmplify.register(I18n);\n/**\n * @deprecated use named import\n */\nexport default I18n;\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { r as registerInstance, h } from './index-aae9287b.js';\nimport { Logger, isEmpty, I18n } from '@aws-amplify/core';\nimport { A as AuthState, M as MfaOption } from './auth-types-78df304e.js';\nimport { T as Translations } from './Translations-203f8a2f.js';\nimport { N as NO_AUTH_MODULE_FOUND, g as SETUP_TOTP, h as SUCCESS } from './constants-206817b9.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { d as dispatchAuthStateChangeEvent, a as dispatchToastHubEvent } from './helpers-5e56336b.js';\nimport buffer from 'buffer';\nvar amplifyRadioButtonCss = \":host{--font-family:var(--amplify-font-family)}.radio-button{display:block;width:100%;padding:16px;font-size:var(--amplify-text-sm);font-family:var(--font-family)}.radio-button input{margin-right:12px}\";\nvar AmplifyRadioButton = /** @class */ (function () {\n    function AmplifyRadioButton(hostRef) {\n        registerInstance(this, hostRef);\n        /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\n        this.placeholder = '';\n        /** If `true`, the radio button is selected. */\n        this.checked = false;\n        /** If `true`, the checkbox is disabled */\n        this.disabled = false;\n    }\n    AmplifyRadioButton.prototype.render = function () {\n        return (h(\"span\", { class: \"radio-button\" }, h(\"input\", { type: \"radio\", name: this.name, value: this.value, onInput: this.handleInputChange, placeholder: this.placeholder, id: this.fieldId, checked: this.checked, disabled: this.disabled }), h(\"amplify-label\", { htmlFor: this.fieldId }, this.label)));\n    };\n    return AmplifyRadioButton;\n}());\nAmplifyRadioButton.style = amplifyRadioButtonCss;\n// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\nvar canPromise = function () {\n    return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then;\n};\nvar toString = {}.toString;\nvar isarray = Array.isArray || function (arr) {\n    return toString.call(arr) == '[object Array]';\n};\nfunction typedArraySupport() {\n    // Can typed array instances be augmented?\n    try {\n        var arr = new Uint8Array(1);\n        arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42; } };\n        return arr.foo() === 42;\n    }\n    catch (e) {\n        return false;\n    }\n}\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\nvar K_MAX_LENGTH = Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff;\nfunction Buffer(arg, offset, length) {\n    if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n        return new Buffer(arg, offset, length);\n    }\n    if (typeof arg === 'number') {\n        return allocUnsafe(this, arg);\n    }\n    return from(this, arg, offset, length);\n}\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n    Buffer.prototype.__proto__ = Uint8Array.prototype;\n    Buffer.__proto__ = Uint8Array;\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    if (typeof Symbol !== 'undefined' && Symbol.species &&\n        Buffer[Symbol.species] === Buffer) {\n        Object.defineProperty(Buffer, Symbol.species, {\n            value: null,\n            configurable: true,\n            enumerable: false,\n            writable: false\n        });\n    }\n}\nfunction checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n        throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n            'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n    }\n    return length | 0;\n}\nfunction isnan(val) {\n    return val !== val; // eslint-disable-line no-self-compare\n}\nfunction createBuffer(that, length) {\n    var buf;\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        buf = new Uint8Array(length);\n        buf.__proto__ = Buffer.prototype;\n    }\n    else {\n        // Fallback: Return an object instance of the Buffer class\n        buf = that;\n        if (buf === null) {\n            buf = new Buffer(length);\n        }\n        buf.length = length;\n    }\n    return buf;\n}\nfunction allocUnsafe(that, size) {\n    var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n    if (!Buffer.TYPED_ARRAY_SUPPORT) {\n        for (var i = 0; i < size; ++i) {\n            buf[i] = 0;\n        }\n    }\n    return buf;\n}\nfunction fromString(that, string) {\n    var length = byteLength(string) | 0;\n    var buf = createBuffer(that, length);\n    var actual = buf.write(string);\n    if (actual !== length) {\n        // Writing a hex string, for example, that contains invalid characters will\n        // cause everything after the first invalid character to be ignored. (e.g.\n        // 'abxxcd' will be treated as 'ab')\n        buf = buf.slice(0, actual);\n    }\n    return buf;\n}\nfunction fromArrayLike(that, array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0;\n    var buf = createBuffer(that, length);\n    for (var i = 0; i < length; i += 1) {\n        buf[i] = array[i] & 255;\n    }\n    return buf;\n}\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError('\\'offset\\' is out of bounds');\n    }\n    if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError('\\'length\\' is out of bounds');\n    }\n    var buf;\n    if (byteOffset === undefined && length === undefined) {\n        buf = new Uint8Array(array);\n    }\n    else if (length === undefined) {\n        buf = new Uint8Array(array, byteOffset);\n    }\n    else {\n        buf = new Uint8Array(array, byteOffset, length);\n    }\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        buf.__proto__ = Buffer.prototype;\n    }\n    else {\n        // Fallback: Return an object instance of the Buffer class\n        buf = fromArrayLike(that, buf);\n    }\n    return buf;\n}\nfunction fromObject(that, obj) {\n    if (Buffer.isBuffer(obj)) {\n        var len = checked(obj.length) | 0;\n        var buf = createBuffer(that, len);\n        if (buf.length === 0) {\n            return buf;\n        }\n        obj.copy(buf, 0, 0, len);\n        return buf;\n    }\n    if (obj) {\n        if ((typeof ArrayBuffer !== 'undefined' &&\n            obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n            if (typeof obj.length !== 'number' || isnan(obj.length)) {\n                return createBuffer(that, 0);\n            }\n            return fromArrayLike(that, obj);\n        }\n        if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n            return fromArrayLike(that, obj.data);\n        }\n    }\n    throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\nfunction utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n    for (var i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i);\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xDBFF) {\n                    // unexpected trail\n                    if ((units -= 3) > -1)\n                        bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1)\n                        bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                // valid lead\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // 2 leads in a row\n            if (codePoint < 0xDC00) {\n                if ((units -= 3) > -1)\n                    bytes.push(0xEF, 0xBF, 0xBD);\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // valid surrogate pair\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        }\n        else if (leadSurrogate) {\n            // valid bmp char, but last char was a lead\n            if ((units -= 3) > -1)\n                bytes.push(0xEF, 0xBF, 0xBD);\n        }\n        leadSurrogate = null;\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0)\n                break;\n            bytes.push(codePoint);\n        }\n        else if (codePoint < 0x800) {\n            if ((units -= 2) < 0)\n                break;\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        }\n        else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0)\n                break;\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        }\n        else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0)\n                break;\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        }\n        else {\n            throw new Error('Invalid code point');\n        }\n    }\n    return bytes;\n}\nfunction byteLength(string) {\n    if (Buffer.isBuffer(string)) {\n        return string.length;\n    }\n    if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n        (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n        return string.byteLength;\n    }\n    if (typeof string !== 'string') {\n        string = '' + string;\n    }\n    var len = string.length;\n    if (len === 0)\n        return 0;\n    return utf8ToBytes(string).length;\n}\nfunction blitBuffer(src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n        if ((i + offset >= dst.length) || (i >= src.length))\n            break;\n        dst[i + offset] = src[i];\n    }\n    return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction from(that, value, offset, length) {\n    if (typeof value === 'number') {\n        throw new TypeError('\"value\" argument must not be a number');\n    }\n    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n        return fromArrayBuffer(that, value, offset, length);\n    }\n    if (typeof value === 'string') {\n        return fromString(that, value);\n    }\n    return fromObject(that, value);\n}\nBuffer.prototype.write = function write(string, offset, length) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, encoding)\n    }\n    else if (length === undefined && typeof offset === 'string') {\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, offset[, length])\n    }\n    else if (isFinite(offset)) {\n        offset = offset | 0;\n        if (isFinite(length)) {\n            length = length | 0;\n        }\n        else {\n            length = undefined;\n        }\n    }\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining)\n        length = remaining;\n    if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n        throw new RangeError('Attempt to write outside buffer bounds');\n    }\n    return utf8Write(this, string, offset, length);\n};\nBuffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n    if (start < 0) {\n        start += len;\n        if (start < 0)\n            start = 0;\n    }\n    else if (start > len) {\n        start = len;\n    }\n    if (end < 0) {\n        end += len;\n        if (end < 0)\n            end = 0;\n    }\n    else if (end > len) {\n        end = len;\n    }\n    if (end < start)\n        end = start;\n    var newBuf;\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        newBuf = this.subarray(start, end);\n        // Return an augmented `Uint8Array` instance\n        newBuf.__proto__ = Buffer.prototype;\n    }\n    else {\n        var sliceLen = end - start;\n        newBuf = new Buffer(sliceLen, undefined);\n        for (var i = 0; i < sliceLen; ++i) {\n            newBuf[i] = this[i + start];\n        }\n    }\n    return newBuf;\n};\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!start)\n        start = 0;\n    if (!end && end !== 0)\n        end = this.length;\n    if (targetStart >= target.length)\n        targetStart = target.length;\n    if (!targetStart)\n        targetStart = 0;\n    if (end > 0 && end < start)\n        end = start;\n    // Copy 0 bytes; we're done\n    if (end === start)\n        return 0;\n    if (target.length === 0 || this.length === 0)\n        return 0;\n    // Fatal error conditions\n    if (targetStart < 0) {\n        throw new RangeError('targetStart out of bounds');\n    }\n    if (start < 0 || start >= this.length)\n        throw new RangeError('sourceStart out of bounds');\n    if (end < 0)\n        throw new RangeError('sourceEnd out of bounds');\n    // Are we oob?\n    if (end > this.length)\n        end = this.length;\n    if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start;\n    }\n    var len = end - start;\n    var i;\n    if (this === target && start < targetStart && targetStart < end) {\n        // descending copy from end\n        for (i = len - 1; i >= 0; --i) {\n            target[i + targetStart] = this[i + start];\n        }\n    }\n    else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n        // ascending copy from start\n        for (i = 0; i < len; ++i) {\n            target[i + targetStart] = this[i + start];\n        }\n    }\n    else {\n        Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n    }\n    return len;\n};\nBuffer.prototype.fill = function fill(val, start, end) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n        if (typeof start === 'string') {\n            start = 0;\n            end = this.length;\n        }\n        else if (typeof end === 'string') {\n            end = this.length;\n        }\n        if (val.length === 1) {\n            var code = val.charCodeAt(0);\n            if (code < 256) {\n                val = code;\n            }\n        }\n    }\n    else if (typeof val === 'number') {\n        val = val & 255;\n    }\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError('Out of range index');\n    }\n    if (end <= start) {\n        return this;\n    }\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val)\n        val = 0;\n    var i;\n    if (typeof val === 'number') {\n        for (i = start; i < end; ++i) {\n            this[i] = val;\n        }\n    }\n    else {\n        var bytes = Buffer.isBuffer(val)\n            ? val\n            : new Buffer(val);\n        var len = bytes.length;\n        for (i = 0; i < end - start; ++i) {\n            this[i + start] = bytes[i % len];\n        }\n    }\n    return this;\n};\nBuffer.concat = function concat(list, length) {\n    if (!isarray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n    if (list.length === 0) {\n        return createBuffer(null, 0);\n    }\n    var i;\n    if (length === undefined) {\n        length = 0;\n        for (i = 0; i < list.length; ++i) {\n            length += list[i].length;\n        }\n    }\n    var buffer = allocUnsafe(null, length);\n    var pos = 0;\n    for (i = 0; i < list.length; ++i) {\n        var buf = list[i];\n        if (!Buffer.isBuffer(buf)) {\n            throw new TypeError('\"list\" argument must be an Array of Buffers');\n        }\n        buf.copy(buffer, pos);\n        pos += buf.length;\n    }\n    return buffer;\n};\nBuffer.byteLength = byteLength;\nBuffer.prototype._isBuffer = true;\nBuffer.isBuffer = function isBuffer(b) {\n    return !!(b != null && b._isBuffer);\n};\nvar alloc = function (size) {\n    var buffer = new Buffer(size);\n    buffer.fill(0);\n    return buffer;\n};\nvar from_1 = function (data) {\n    return new Buffer(data);\n};\nvar typedarrayBuffer = {\n    alloc: alloc,\n    from: from_1\n};\nvar toSJISFunction;\nvar CODEWORDS_COUNT = [\n    0,\n    26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n    404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n    1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n    2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n];\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nvar getSymbolSize = function getSymbolSize(version) {\n    if (!version)\n        throw new Error('\"version\" cannot be null or undefined');\n    if (version < 1 || version > 40)\n        throw new Error('\"version\" should be in range from 1 to 40');\n    return version * 4 + 17;\n};\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nvar getSymbolTotalCodewords = function getSymbolTotalCodewords(version) {\n    return CODEWORDS_COUNT[version];\n};\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nvar getBCHDigit = function (data) {\n    var digit = 0;\n    while (data !== 0) {\n        digit++;\n        data >>>= 1;\n    }\n    return digit;\n};\nvar setToSJISFunction = function setToSJISFunction(f) {\n    if (typeof f !== 'function') {\n        throw new Error('\"toSJISFunc\" is not a valid function.');\n    }\n    toSJISFunction = f;\n};\nvar isKanjiModeEnabled = function () {\n    return typeof toSJISFunction !== 'undefined';\n};\nvar toSJIS = function toSJIS(kanji) {\n    return toSJISFunction(kanji);\n};\nvar utils = {\n    getSymbolSize: getSymbolSize,\n    getSymbolTotalCodewords: getSymbolTotalCodewords,\n    getBCHDigit: getBCHDigit,\n    setToSJISFunction: setToSJISFunction,\n    isKanjiModeEnabled: isKanjiModeEnabled,\n    toSJIS: toSJIS\n};\nfunction createCommonjsModule(fn, module) {\n    return module = { exports: {} }, fn(module, module.exports), module.exports;\n}\nvar errorCorrectionLevel = createCommonjsModule(function (module, exports) {\n    exports.L = { bit: 1 };\n    exports.M = { bit: 0 };\n    exports.Q = { bit: 3 };\n    exports.H = { bit: 2 };\n    function fromString(string) {\n        if (typeof string !== 'string') {\n            throw new Error('Param is not a string');\n        }\n        var lcStr = string.toLowerCase();\n        switch (lcStr) {\n            case 'l':\n            case 'low':\n                return exports.L;\n            case 'm':\n            case 'medium':\n                return exports.M;\n            case 'q':\n            case 'quartile':\n                return exports.Q;\n            case 'h':\n            case 'high':\n                return exports.H;\n            default:\n                throw new Error('Unknown EC Level: ' + string);\n        }\n    }\n    exports.isValid = function isValid(level) {\n        return level && typeof level.bit !== 'undefined' &&\n            level.bit >= 0 && level.bit < 4;\n    };\n    exports.from = function from(value, defaultValue) {\n        if (exports.isValid(value)) {\n            return value;\n        }\n        try {\n            return fromString(value);\n        }\n        catch (e) {\n            return defaultValue;\n        }\n    };\n});\nfunction BitBuffer() {\n    this.buffer = [];\n    this.length = 0;\n}\nBitBuffer.prototype = {\n    get: function (index) {\n        var bufIndex = Math.floor(index / 8);\n        return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1;\n    },\n    put: function (num, length) {\n        for (var i = 0; i < length; i++) {\n            this.putBit(((num >>> (length - i - 1)) & 1) === 1);\n        }\n    },\n    getLengthInBits: function () {\n        return this.length;\n    },\n    putBit: function (bit) {\n        var bufIndex = Math.floor(this.length / 8);\n        if (this.buffer.length <= bufIndex) {\n            this.buffer.push(0);\n        }\n        if (bit) {\n            this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\n        }\n        this.length++;\n    }\n};\nvar bitBuffer = BitBuffer;\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix(size) {\n    if (!size || size < 1) {\n        throw new Error('BitMatrix size must be defined and greater than 0');\n    }\n    this.size = size;\n    this.data = typedarrayBuffer.alloc(size * size);\n    this.reservedBit = typedarrayBuffer.alloc(size * size);\n}\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n    var index = row * this.size + col;\n    this.data[index] = value;\n    if (reserved)\n        this.reservedBit[index] = true;\n};\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n    return this.data[row * this.size + col];\n};\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n    this.data[row * this.size + col] ^= value;\n};\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n    return this.reservedBit[row * this.size + col];\n};\nvar bitMatrix = BitMatrix;\nvar alignmentPattern = createCommonjsModule(function (module, exports) {\n    /**\n     * Alignment pattern are fixed reference pattern in defined positions\n     * in a matrix symbology, which enables the decode software to re-synchronise\n     * the coordinate mapping of the image modules in the event of moderate amounts\n     * of distortion of the image.\n     *\n     * Alignment patterns are present only in QR Code symbols of version 2 or larger\n     * and their number depends on the symbol version.\n     */\n    var getSymbolSize = utils.getSymbolSize;\n    /**\n     * Calculate the row/column coordinates of the center module of each alignment pattern\n     * for the specified QR Code version.\n     *\n     * The alignment patterns are positioned symmetrically on either side of the diagonal\n     * running from the top left corner of the symbol to the bottom right corner.\n     *\n     * Since positions are simmetrical only half of the coordinates are returned.\n     * Each item of the array will represent in turn the x and y coordinate.\n     * @see {@link getPositions}\n     *\n     * @param  {Number} version QR Code version\n     * @return {Array}          Array of coordinate\n     */\n    exports.getRowColCoords = function getRowColCoords(version) {\n        if (version === 1)\n            return [];\n        var posCount = Math.floor(version / 7) + 2;\n        var size = getSymbolSize(version);\n        var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;\n        var positions = [size - 7]; // Last coord is always (size - 7)\n        for (var i = 1; i < posCount - 1; i++) {\n            positions[i] = positions[i - 1] - intervals;\n        }\n        positions.push(6); // First coord is always 6\n        return positions.reverse();\n    };\n    /**\n     * Returns an array containing the positions of each alignment pattern.\n     * Each array's element represent the center point of the pattern as (x, y) coordinates\n     *\n     * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n     * and filtering out the items that overlaps with finder pattern\n     *\n     * @example\n     * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n     * The alignment patterns, therefore, are to be centered on (row, column)\n     * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n     * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n     * and are not therefore used for alignment patterns.\n     *\n     * var pos = getPositions(7)\n     * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n     *\n     * @param  {Number} version QR Code version\n     * @return {Array}          Array of coordinates\n     */\n    exports.getPositions = function getPositions(version) {\n        var coords = [];\n        var pos = exports.getRowColCoords(version);\n        var posLength = pos.length;\n        for (var i = 0; i < posLength; i++) {\n            for (var j = 0; j < posLength; j++) {\n                // Skip if position is occupied by finder patterns\n                if ((i === 0 && j === 0) || // top-left\n                    (i === 0 && j === posLength - 1) || // bottom-left\n                    (i === posLength - 1 && j === 0)) { // top-right\n                    continue;\n                }\n                coords.push([pos[i], pos[j]]);\n            }\n        }\n        return coords;\n    };\n});\nvar getSymbolSize$1 = utils.getSymbolSize;\nvar FINDER_PATTERN_SIZE = 7;\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nvar getPositions = function getPositions(version) {\n    var size = getSymbolSize$1(version);\n    return [\n        // top-left\n        [0, 0],\n        // top-right\n        [size - FINDER_PATTERN_SIZE, 0],\n        // bottom-left\n        [0, size - FINDER_PATTERN_SIZE]\n    ];\n};\nvar finderPattern = {\n    getPositions: getPositions\n};\nvar maskPattern = createCommonjsModule(function (module, exports) {\n    /**\n     * Data mask pattern reference\n     * @type {Object}\n     */\n    exports.Patterns = {\n        PATTERN000: 0,\n        PATTERN001: 1,\n        PATTERN010: 2,\n        PATTERN011: 3,\n        PATTERN100: 4,\n        PATTERN101: 5,\n        PATTERN110: 6,\n        PATTERN111: 7\n    };\n    /**\n     * Weighted penalty scores for the undesirable features\n     * @type {Object}\n     */\n    var PenaltyScores = {\n        N1: 3,\n        N2: 3,\n        N3: 40,\n        N4: 10\n    };\n    /**\n     * Check if mask pattern value is valid\n     *\n     * @param  {Number}  mask    Mask pattern\n     * @return {Boolean}         true if valid, false otherwise\n     */\n    exports.isValid = function isValid(mask) {\n        return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7;\n    };\n    /**\n     * Returns mask pattern from a value.\n     * If value is not valid, returns undefined\n     *\n     * @param  {Number|String} value        Mask pattern value\n     * @return {Number}                     Valid mask pattern or undefined\n     */\n    exports.from = function from(value) {\n        return exports.isValid(value) ? parseInt(value, 10) : undefined;\n    };\n    /**\n    * Find adjacent modules in row/column with the same color\n    * and assign a penalty value.\n    *\n    * Points: N1 + i\n    * i is the amount by which the number of adjacent modules of the same color exceeds 5\n    */\n    exports.getPenaltyN1 = function getPenaltyN1(data) {\n        var size = data.size;\n        var points = 0;\n        var sameCountCol = 0;\n        var sameCountRow = 0;\n        var lastCol = null;\n        var lastRow = null;\n        for (var row = 0; row < size; row++) {\n            sameCountCol = sameCountRow = 0;\n            lastCol = lastRow = null;\n            for (var col = 0; col < size; col++) {\n                var module = data.get(row, col);\n                if (module === lastCol) {\n                    sameCountCol++;\n                }\n                else {\n                    if (sameCountCol >= 5)\n                        points += PenaltyScores.N1 + (sameCountCol - 5);\n                    lastCol = module;\n                    sameCountCol = 1;\n                }\n                module = data.get(col, row);\n                if (module === lastRow) {\n                    sameCountRow++;\n                }\n                else {\n                    if (sameCountRow >= 5)\n                        points += PenaltyScores.N1 + (sameCountRow - 5);\n                    lastRow = module;\n                    sameCountRow = 1;\n                }\n            }\n            if (sameCountCol >= 5)\n                points += PenaltyScores.N1 + (sameCountCol - 5);\n            if (sameCountRow >= 5)\n                points += PenaltyScores.N1 + (sameCountRow - 5);\n        }\n        return points;\n    };\n    /**\n     * Find 2x2 blocks with the same color and assign a penalty value\n     *\n     * Points: N2 * (m - 1) * (n - 1)\n     */\n    exports.getPenaltyN2 = function getPenaltyN2(data) {\n        var size = data.size;\n        var points = 0;\n        for (var row = 0; row < size - 1; row++) {\n            for (var col = 0; col < size - 1; col++) {\n                var last = data.get(row, col) +\n                    data.get(row, col + 1) +\n                    data.get(row + 1, col) +\n                    data.get(row + 1, col + 1);\n                if (last === 4 || last === 0)\n                    points++;\n            }\n        }\n        return points * PenaltyScores.N2;\n    };\n    /**\n     * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n     * preceded or followed by light area 4 modules wide\n     *\n     * Points: N3 * number of pattern found\n     */\n    exports.getPenaltyN3 = function getPenaltyN3(data) {\n        var size = data.size;\n        var points = 0;\n        var bitsCol = 0;\n        var bitsRow = 0;\n        for (var row = 0; row < size; row++) {\n            bitsCol = bitsRow = 0;\n            for (var col = 0; col < size; col++) {\n                bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col);\n                if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D))\n                    points++;\n                bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row);\n                if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D))\n                    points++;\n            }\n        }\n        return points * PenaltyScores.N3;\n    };\n    /**\n     * Calculate proportion of dark modules in entire symbol\n     *\n     * Points: N4 * k\n     *\n     * k is the rating of the deviation of the proportion of dark modules\n     * in the symbol from 50% in steps of 5%\n     */\n    exports.getPenaltyN4 = function getPenaltyN4(data) {\n        var darkCount = 0;\n        var modulesCount = data.data.length;\n        for (var i = 0; i < modulesCount; i++)\n            darkCount += data.data[i];\n        var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10);\n        return k * PenaltyScores.N4;\n    };\n    /**\n     * Return mask value at given position\n     *\n     * @param  {Number} maskPattern Pattern reference value\n     * @param  {Number} i           Row\n     * @param  {Number} j           Column\n     * @return {Boolean}            Mask value\n     */\n    function getMaskAt(maskPattern, i, j) {\n        switch (maskPattern) {\n            case exports.Patterns.PATTERN000: return (i + j) % 2 === 0;\n            case exports.Patterns.PATTERN001: return i % 2 === 0;\n            case exports.Patterns.PATTERN010: return j % 3 === 0;\n            case exports.Patterns.PATTERN011: return (i + j) % 3 === 0;\n            case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n            case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0;\n            case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0;\n            case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0;\n            default: throw new Error('bad maskPattern:' + maskPattern);\n        }\n    }\n    /**\n     * Apply a mask pattern to a BitMatrix\n     *\n     * @param  {Number}    pattern Pattern reference number\n     * @param  {BitMatrix} data    BitMatrix data\n     */\n    exports.applyMask = function applyMask(pattern, data) {\n        var size = data.size;\n        for (var col = 0; col < size; col++) {\n            for (var row = 0; row < size; row++) {\n                if (data.isReserved(row, col))\n                    continue;\n                data.xor(row, col, getMaskAt(pattern, row, col));\n            }\n        }\n    };\n    /**\n     * Returns the best mask pattern for data\n     *\n     * @param  {BitMatrix} data\n     * @return {Number} Mask pattern reference number\n     */\n    exports.getBestMask = function getBestMask(data, setupFormatFunc) {\n        var numPatterns = Object.keys(exports.Patterns).length;\n        var bestPattern = 0;\n        var lowerPenalty = Infinity;\n        for (var p = 0; p < numPatterns; p++) {\n            setupFormatFunc(p);\n            exports.applyMask(p, data);\n            // Calculate penalty\n            var penalty = exports.getPenaltyN1(data) +\n                exports.getPenaltyN2(data) +\n                exports.getPenaltyN3(data) +\n                exports.getPenaltyN4(data);\n            // Undo previously applied mask\n            exports.applyMask(p, data);\n            if (penalty < lowerPenalty) {\n                lowerPenalty = penalty;\n                bestPattern = p;\n            }\n        }\n        return bestPattern;\n    };\n});\nvar EC_BLOCKS_TABLE = [\n    // L  M  Q  H\n    1, 1, 1, 1,\n    1, 1, 1, 1,\n    1, 1, 2, 2,\n    1, 2, 2, 4,\n    1, 2, 4, 4,\n    2, 4, 4, 4,\n    2, 4, 6, 5,\n    2, 4, 6, 6,\n    2, 5, 8, 8,\n    4, 5, 8, 8,\n    4, 5, 8, 11,\n    4, 8, 10, 11,\n    4, 9, 12, 16,\n    4, 9, 16, 16,\n    6, 10, 12, 18,\n    6, 10, 17, 16,\n    6, 11, 16, 19,\n    6, 13, 18, 21,\n    7, 14, 21, 25,\n    8, 16, 20, 25,\n    8, 17, 23, 25,\n    9, 17, 23, 34,\n    9, 18, 25, 30,\n    10, 20, 27, 32,\n    12, 21, 29, 35,\n    12, 23, 34, 37,\n    12, 25, 34, 40,\n    13, 26, 35, 42,\n    14, 28, 38, 45,\n    15, 29, 40, 48,\n    16, 31, 43, 51,\n    17, 33, 45, 54,\n    18, 35, 48, 57,\n    19, 37, 51, 60,\n    19, 38, 53, 63,\n    20, 40, 56, 66,\n    21, 43, 59, 70,\n    22, 45, 62, 74,\n    24, 47, 65, 77,\n    25, 49, 68, 81\n];\nvar EC_CODEWORDS_TABLE = [\n    // L  M  Q  H\n    7, 10, 13, 17,\n    10, 16, 22, 28,\n    15, 26, 36, 44,\n    20, 36, 52, 64,\n    26, 48, 72, 88,\n    36, 64, 96, 112,\n    40, 72, 108, 130,\n    48, 88, 132, 156,\n    60, 110, 160, 192,\n    72, 130, 192, 224,\n    80, 150, 224, 264,\n    96, 176, 260, 308,\n    104, 198, 288, 352,\n    120, 216, 320, 384,\n    132, 240, 360, 432,\n    144, 280, 408, 480,\n    168, 308, 448, 532,\n    180, 338, 504, 588,\n    196, 364, 546, 650,\n    224, 416, 600, 700,\n    224, 442, 644, 750,\n    252, 476, 690, 816,\n    270, 504, 750, 900,\n    300, 560, 810, 960,\n    312, 588, 870, 1050,\n    336, 644, 952, 1110,\n    360, 700, 1020, 1200,\n    390, 728, 1050, 1260,\n    420, 784, 1140, 1350,\n    450, 812, 1200, 1440,\n    480, 868, 1290, 1530,\n    510, 924, 1350, 1620,\n    540, 980, 1440, 1710,\n    570, 1036, 1530, 1800,\n    570, 1064, 1590, 1890,\n    600, 1120, 1680, 1980,\n    630, 1204, 1770, 2100,\n    660, 1260, 1860, 2220,\n    720, 1316, 1950, 2310,\n    750, 1372, 2040, 2430\n];\n/**\n * Returns the number of error correction block that the QR Code should contain\n * for the specified version and error correction level.\n *\n * @param  {Number} version              QR Code version\n * @param  {Number} errorCorrectionLevel Error correction level\n * @return {Number}                      Number of error correction blocks\n */\nvar getBlocksCount = function getBlocksCount(version, errorCorrectionLevel$1) {\n    switch (errorCorrectionLevel$1) {\n        case errorCorrectionLevel.L:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];\n        case errorCorrectionLevel.M:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];\n        case errorCorrectionLevel.Q:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];\n        case errorCorrectionLevel.H:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\n/**\n * Returns the number of error correction codewords to use for the specified\n * version and error correction level.\n *\n * @param  {Number} version              QR Code version\n * @param  {Number} errorCorrectionLevel Error correction level\n * @return {Number}                      Number of error correction codewords\n */\nvar getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel$1) {\n    switch (errorCorrectionLevel$1) {\n        case errorCorrectionLevel.L:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];\n        case errorCorrectionLevel.M:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];\n        case errorCorrectionLevel.Q:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];\n        case errorCorrectionLevel.H:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\nvar errorCorrectionCode = {\n    getBlocksCount: getBlocksCount,\n    getTotalCodewordsCount: getTotalCodewordsCount\n};\nvar EXP_TABLE = typedarrayBuffer.alloc(512);\nvar LOG_TABLE = typedarrayBuffer.alloc(256);\n(function initTables() {\n    var x = 1;\n    for (var i = 0; i < 255; i++) {\n        EXP_TABLE[i] = x;\n        LOG_TABLE[x] = i;\n        x <<= 1; // multiply by 2\n        // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n        // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n        if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n            x ^= 0x11D;\n        }\n    }\n    // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n    // stay inside the bounds (because we will mainly use this table for the multiplication of\n    // two GF numbers, no more).\n    // @see {@link mul}\n    for (i = 255; i < 512; i++) {\n        EXP_TABLE[i] = EXP_TABLE[i - 255];\n    }\n}());\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nvar log = function log(n) {\n    if (n < 1)\n        throw new Error('log(' + n + ')');\n    return LOG_TABLE[n];\n};\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nvar exp = function exp(n) {\n    return EXP_TABLE[n];\n};\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nvar mul = function mul(x, y) {\n    if (x === 0 || y === 0)\n        return 0;\n    // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n    // @see {@link initTables}\n    return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]];\n};\nvar galoisField = {\n    log: log,\n    exp: exp,\n    mul: mul\n};\nvar polynomial = createCommonjsModule(function (module, exports) {\n    /**\n     * Multiplies two polynomials inside Galois Field\n     *\n     * @param  {Buffer} p1 Polynomial\n     * @param  {Buffer} p2 Polynomial\n     * @return {Buffer}    Product of p1 and p2\n     */\n    exports.mul = function mul(p1, p2) {\n        var coeff = typedarrayBuffer.alloc(p1.length + p2.length - 1);\n        for (var i = 0; i < p1.length; i++) {\n            for (var j = 0; j < p2.length; j++) {\n                coeff[i + j] ^= galoisField.mul(p1[i], p2[j]);\n            }\n        }\n        return coeff;\n    };\n    /**\n     * Calculate the remainder of polynomials division\n     *\n     * @param  {Buffer} divident Polynomial\n     * @param  {Buffer} divisor  Polynomial\n     * @return {Buffer}          Remainder\n     */\n    exports.mod = function mod(divident, divisor) {\n        var result = typedarrayBuffer.from(divident);\n        while ((result.length - divisor.length) >= 0) {\n            var coeff = result[0];\n            for (var i = 0; i < divisor.length; i++) {\n                result[i] ^= galoisField.mul(divisor[i], coeff);\n            }\n            // remove all zeros from buffer head\n            var offset = 0;\n            while (offset < result.length && result[offset] === 0)\n                offset++;\n            result = result.slice(offset);\n        }\n        return result;\n    };\n    /**\n     * Generate an irreducible generator polynomial of specified degree\n     * (used by Reed-Solomon encoder)\n     *\n     * @param  {Number} degree Degree of the generator polynomial\n     * @return {Buffer}        Buffer containing polynomial coefficients\n     */\n    exports.generateECPolynomial = function generateECPolynomial(degree) {\n        var poly = typedarrayBuffer.from([1]);\n        for (var i = 0; i < degree; i++) {\n            poly = exports.mul(poly, [1, galoisField.exp(i)]);\n        }\n        return poly;\n    };\n});\nvar Buffer$1 = buffer.Buffer;\nfunction ReedSolomonEncoder(degree) {\n    this.genPoly = undefined;\n    this.degree = degree;\n    if (this.degree)\n        this.initialize(this.degree);\n}\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize(degree) {\n    // create an irreducible generator polynomial\n    this.degree = degree;\n    this.genPoly = polynomial.generateECPolynomial(this.degree);\n};\n/**\n * Encodes a chunk of data\n *\n * @param  {Buffer} data Buffer containing input data\n * @return {Buffer}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode(data) {\n    if (!this.genPoly) {\n        throw new Error('Encoder not initialized');\n    }\n    // Calculate EC for this data block\n    // extends data size to data+genPoly size\n    var pad = typedarrayBuffer.alloc(this.degree);\n    var paddedData = Buffer$1.concat([data, pad], data.length + this.degree);\n    // The error correction codewords are the remainder after dividing the data codewords\n    // by a generator polynomial\n    var remainder = polynomial.mod(paddedData, this.genPoly);\n    // return EC data blocks (last n byte, where n is the degree of genPoly)\n    // If coefficients number in remainder are less than genPoly degree,\n    // pad with 0s to the left to reach the needed number of coefficients\n    var start = this.degree - remainder.length;\n    if (start > 0) {\n        var buff = typedarrayBuffer.alloc(this.degree);\n        remainder.copy(buff, start);\n        return buff;\n    }\n    return remainder;\n};\nvar reedSolomonEncoder = ReedSolomonEncoder;\n/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nvar isValid = function isValid(version) {\n    return !isNaN(version) && version >= 1 && version <= 40;\n};\nvar versionCheck = {\n    isValid: isValid\n};\nvar numeric = '[0-9]+';\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+';\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n    '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n    '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n    '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+';\nkanji = kanji.replace(/u/g, '\\\\u');\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+';\nvar KANJI = new RegExp(kanji, 'g');\nvar BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g');\nvar BYTE = new RegExp(byte, 'g');\nvar NUMERIC = new RegExp(numeric, 'g');\nvar ALPHANUMERIC = new RegExp(alphanumeric, 'g');\nvar TEST_KANJI = new RegExp('^' + kanji + '$');\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$');\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$');\nvar testKanji = function testKanji(str) {\n    return TEST_KANJI.test(str);\n};\nvar testNumeric = function testNumeric(str) {\n    return TEST_NUMERIC.test(str);\n};\nvar testAlphanumeric = function testAlphanumeric(str) {\n    return TEST_ALPHANUMERIC.test(str);\n};\nvar regex = {\n    KANJI: KANJI,\n    BYTE_KANJI: BYTE_KANJI,\n    BYTE: BYTE,\n    NUMERIC: NUMERIC,\n    ALPHANUMERIC: ALPHANUMERIC,\n    testKanji: testKanji,\n    testNumeric: testNumeric,\n    testAlphanumeric: testAlphanumeric\n};\nvar mode = createCommonjsModule(function (module, exports) {\n    /**\n     * Numeric mode encodes data from the decimal digit set (0 - 9)\n     * (byte values 30HEX to 39HEX).\n     * Normally, 3 data characters are represented by 10 bits.\n     *\n     * @type {Object}\n     */\n    exports.NUMERIC = {\n        id: 'Numeric',\n        bit: 1 << 0,\n        ccBits: [10, 12, 14]\n    };\n    /**\n     * Alphanumeric mode encodes data from a set of 45 characters,\n     * i.e. 10 numeric digits (0 - 9),\n     *      26 alphabetic characters (A - Z),\n     *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n     * Normally, two input characters are represented by 11 bits.\n     *\n     * @type {Object}\n     */\n    exports.ALPHANUMERIC = {\n        id: 'Alphanumeric',\n        bit: 1 << 1,\n        ccBits: [9, 11, 13]\n    };\n    /**\n     * In byte mode, data is encoded at 8 bits per character.\n     *\n     * @type {Object}\n     */\n    exports.BYTE = {\n        id: 'Byte',\n        bit: 1 << 2,\n        ccBits: [8, 16, 16]\n    };\n    /**\n     * The Kanji mode efficiently encodes Kanji characters in accordance with\n     * the Shift JIS system based on JIS X 0208.\n     * The Shift JIS values are shifted from the JIS X 0208 values.\n     * JIS X 0208 gives details of the shift coded representation.\n     * Each two-byte character value is compacted to a 13-bit binary codeword.\n     *\n     * @type {Object}\n     */\n    exports.KANJI = {\n        id: 'Kanji',\n        bit: 1 << 3,\n        ccBits: [8, 10, 12]\n    };\n    /**\n     * Mixed mode will contain a sequences of data in a combination of any of\n     * the modes described above\n     *\n     * @type {Object}\n     */\n    exports.MIXED = {\n        bit: -1\n    };\n    /**\n     * Returns the number of bits needed to store the data length\n     * according to QR Code specifications.\n     *\n     * @param  {Mode}   mode    Data mode\n     * @param  {Number} version QR Code version\n     * @return {Number}         Number of bits\n     */\n    exports.getCharCountIndicator = function getCharCountIndicator(mode, version) {\n        if (!mode.ccBits)\n            throw new Error('Invalid mode: ' + mode);\n        if (!versionCheck.isValid(version)) {\n            throw new Error('Invalid version: ' + version);\n        }\n        if (version >= 1 && version < 10)\n            return mode.ccBits[0];\n        else if (version < 27)\n            return mode.ccBits[1];\n        return mode.ccBits[2];\n    };\n    /**\n     * Returns the most efficient mode to store the specified data\n     *\n     * @param  {String} dataStr Input data string\n     * @return {Mode}           Best mode\n     */\n    exports.getBestModeForData = function getBestModeForData(dataStr) {\n        if (regex.testNumeric(dataStr))\n            return exports.NUMERIC;\n        else if (regex.testAlphanumeric(dataStr))\n            return exports.ALPHANUMERIC;\n        else if (regex.testKanji(dataStr))\n            return exports.KANJI;\n        else\n            return exports.BYTE;\n    };\n    /**\n     * Return mode name as string\n     *\n     * @param {Mode} mode Mode object\n     * @returns {String}  Mode name\n     */\n    exports.toString = function toString(mode) {\n        if (mode && mode.id)\n            return mode.id;\n        throw new Error('Invalid mode');\n    };\n    /**\n     * Check if input param is a valid mode object\n     *\n     * @param   {Mode}    mode Mode object\n     * @returns {Boolean} True if valid mode, false otherwise\n     */\n    exports.isValid = function isValid(mode) {\n        return mode && mode.bit && mode.ccBits;\n    };\n    /**\n     * Get mode object from its name\n     *\n     * @param   {String} string Mode name\n     * @returns {Mode}          Mode object\n     */\n    function fromString(string) {\n        if (typeof string !== 'string') {\n            throw new Error('Param is not a string');\n        }\n        var lcStr = string.toLowerCase();\n        switch (lcStr) {\n            case 'numeric':\n                return exports.NUMERIC;\n            case 'alphanumeric':\n                return exports.ALPHANUMERIC;\n            case 'kanji':\n                return exports.KANJI;\n            case 'byte':\n                return exports.BYTE;\n            default:\n                throw new Error('Unknown mode: ' + string);\n        }\n    }\n    /**\n     * Returns mode from a value.\n     * If value is not a valid mode, returns defaultValue\n     *\n     * @param  {Mode|String} value        Encoding mode\n     * @param  {Mode}        defaultValue Fallback value\n     * @return {Mode}                     Encoding mode\n     */\n    exports.from = function from(value, defaultValue) {\n        if (exports.isValid(value)) {\n            return value;\n        }\n        try {\n            return fromString(value);\n        }\n        catch (e) {\n            return defaultValue;\n        }\n    };\n});\nvar version = createCommonjsModule(function (module, exports) {\n    // Generator polynomial used to encode version information\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G18_BCH = utils.getBCHDigit(G18);\n    function getBestVersionForDataLength(mode, length, errorCorrectionLevel) {\n        for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n            if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n                return currentVersion;\n            }\n        }\n        return undefined;\n    }\n    function getReservedBitsCount(mode$1, version) {\n        // Character count indicator + mode indicator bits\n        return mode.getCharCountIndicator(mode$1, version) + 4;\n    }\n    function getTotalBitsFromDataArray(segments, version) {\n        var totalBits = 0;\n        segments.forEach(function (data) {\n            var reservedBits = getReservedBitsCount(data.mode, version);\n            totalBits += reservedBits + data.getBitsLength();\n        });\n        return totalBits;\n    }\n    function getBestVersionForMixedData(segments, errorCorrectionLevel) {\n        for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n            var length = getTotalBitsFromDataArray(segments, currentVersion);\n            if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode.MIXED)) {\n                return currentVersion;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns version number from a value.\n     * If value is not a valid version, returns defaultValue\n     *\n     * @param  {Number|String} value        QR Code version\n     * @param  {Number}        defaultValue Fallback value\n     * @return {Number}                     QR Code version number\n     */\n    exports.from = function from(value, defaultValue) {\n        if (versionCheck.isValid(value)) {\n            return parseInt(value, 10);\n        }\n        return defaultValue;\n    };\n    /**\n     * Returns how much data can be stored with the specified QR code version\n     * and error correction level\n     *\n     * @param  {Number} version              QR Code version (1-40)\n     * @param  {Number} errorCorrectionLevel Error correction level\n     * @param  {Mode}   mode                 Data mode\n     * @return {Number}                      Quantity of storable data\n     */\n    exports.getCapacity = function getCapacity(version, errorCorrectionLevel, mode$1) {\n        if (!versionCheck.isValid(version)) {\n            throw new Error('Invalid QR Code version');\n        }\n        // Use Byte mode as default\n        if (typeof mode$1 === 'undefined')\n            mode$1 = mode.BYTE;\n        // Total codewords for this QR code version (Data + Error correction)\n        var totalCodewords = utils.getSymbolTotalCodewords(version);\n        // Total number of error correction codewords\n        var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n        // Total number of data codewords\n        var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n        if (mode$1 === mode.MIXED)\n            return dataTotalCodewordsBits;\n        var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode$1, version);\n        // Return max number of storable codewords\n        switch (mode$1) {\n            case mode.NUMERIC:\n                return Math.floor((usableBits / 10) * 3);\n            case mode.ALPHANUMERIC:\n                return Math.floor((usableBits / 11) * 2);\n            case mode.KANJI:\n                return Math.floor(usableBits / 13);\n            case mode.BYTE:\n            default:\n                return Math.floor(usableBits / 8);\n        }\n    };\n    /**\n     * Returns the minimum version needed to contain the amount of data\n     *\n     * @param  {Segment} data                    Segment of data\n     * @param  {Number} [errorCorrectionLevel=H] Error correction level\n     * @param  {Mode} mode                       Data mode\n     * @return {Number}                          QR Code version\n     */\n    exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel$1) {\n        var seg;\n        var ecl = errorCorrectionLevel.from(errorCorrectionLevel$1, errorCorrectionLevel.M);\n        if (isarray(data)) {\n            if (data.length > 1) {\n                return getBestVersionForMixedData(data, ecl);\n            }\n            if (data.length === 0) {\n                return 1;\n            }\n            seg = data[0];\n        }\n        else {\n            seg = data;\n        }\n        return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);\n    };\n    /**\n     * Returns version information with relative error correction bits\n     *\n     * The version information is included in QR Code symbols of version 7 or larger.\n     * It consists of an 18-bit sequence containing 6 data bits,\n     * with 12 error correction bits calculated using the (18, 6) Golay code.\n     *\n     * @param  {Number} version QR Code version\n     * @return {Number}         Encoded version info bits\n     */\n    exports.getEncodedBits = function getEncodedBits(version) {\n        if (!versionCheck.isValid(version) || version < 7) {\n            throw new Error('Invalid QR Code version');\n        }\n        var d = version << 12;\n        while (utils.getBCHDigit(d) - G18_BCH >= 0) {\n            d ^= (G18 << (utils.getBCHDigit(d) - G18_BCH));\n        }\n        return (version << 12) | d;\n    };\n});\nvar G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\nvar G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\nvar G15_BCH = utils.getBCHDigit(G15);\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nvar getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {\n    var data = ((errorCorrectionLevel.bit << 3) | mask);\n    var d = data << 10;\n    while (utils.getBCHDigit(d) - G15_BCH >= 0) {\n        d ^= (G15 << (utils.getBCHDigit(d) - G15_BCH));\n    }\n    // xor final data with mask pattern in order to ensure that\n    // no combination of Error Correction Level and data mask pattern\n    // will result in an all-zero data string\n    return ((data << 10) | d) ^ G15_MASK;\n};\nvar formatInfo = {\n    getEncodedBits: getEncodedBits\n};\nfunction NumericData(data) {\n    this.mode = mode.NUMERIC;\n    this.data = data.toString();\n}\nNumericData.getBitsLength = function getBitsLength(length) {\n    return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0);\n};\nNumericData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nNumericData.prototype.getBitsLength = function getBitsLength() {\n    return NumericData.getBitsLength(this.data.length);\n};\nNumericData.prototype.write = function write(bitBuffer) {\n    var i, group, value;\n    // The input data string is divided into groups of three digits,\n    // and each group is converted to its 10-bit binary equivalent.\n    for (i = 0; i + 3 <= this.data.length; i += 3) {\n        group = this.data.substr(i, 3);\n        value = parseInt(group, 10);\n        bitBuffer.put(value, 10);\n    }\n    // If the number of input digits is not an exact multiple of three,\n    // the final one or two digits are converted to 4 or 7 bits respectively.\n    var remainingNum = this.data.length - i;\n    if (remainingNum > 0) {\n        group = this.data.substr(i);\n        value = parseInt(group, 10);\n        bitBuffer.put(value, remainingNum * 3 + 1);\n    }\n};\nvar numericData = NumericData;\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nvar ALPHA_NUM_CHARS = [\n    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n    'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n    ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n];\nfunction AlphanumericData(data) {\n    this.mode = mode.ALPHANUMERIC;\n    this.data = data;\n}\nAlphanumericData.getBitsLength = function getBitsLength(length) {\n    return 11 * Math.floor(length / 2) + 6 * (length % 2);\n};\nAlphanumericData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nAlphanumericData.prototype.getBitsLength = function getBitsLength() {\n    return AlphanumericData.getBitsLength(this.data.length);\n};\nAlphanumericData.prototype.write = function write(bitBuffer) {\n    var i;\n    // Input data characters are divided into groups of two characters\n    // and encoded as 11-bit binary codes.\n    for (i = 0; i + 2 <= this.data.length; i += 2) {\n        // The character value of the first character is multiplied by 45\n        var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45;\n        // The character value of the second digit is added to the product\n        value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]);\n        // The sum is then stored as 11-bit binary number\n        bitBuffer.put(value, 11);\n    }\n    // If the number of input data characters is not a multiple of two,\n    // the character value of the final character is encoded as a 6-bit binary number.\n    if (this.data.length % 2) {\n        bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);\n    }\n};\nvar alphanumericData = AlphanumericData;\nfunction ByteData(data) {\n    this.mode = mode.BYTE;\n    this.data = typedarrayBuffer.from(data);\n}\nByteData.getBitsLength = function getBitsLength(length) {\n    return length * 8;\n};\nByteData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nByteData.prototype.getBitsLength = function getBitsLength() {\n    return ByteData.getBitsLength(this.data.length);\n};\nByteData.prototype.write = function (bitBuffer) {\n    for (var i = 0, l = this.data.length; i < l; i++) {\n        bitBuffer.put(this.data[i], 8);\n    }\n};\nvar byteData = ByteData;\nfunction KanjiData(data) {\n    this.mode = mode.KANJI;\n    this.data = data;\n}\nKanjiData.getBitsLength = function getBitsLength(length) {\n    return length * 13;\n};\nKanjiData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nKanjiData.prototype.getBitsLength = function getBitsLength() {\n    return KanjiData.getBitsLength(this.data.length);\n};\nKanjiData.prototype.write = function (bitBuffer) {\n    var i;\n    // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n    // These byte values are shifted from the JIS X 0208 values.\n    // JIS X 0208 gives details of the shift coded representation.\n    for (i = 0; i < this.data.length; i++) {\n        var value = utils.toSJIS(this.data[i]);\n        // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n        if (value >= 0x8140 && value <= 0x9FFC) {\n            // Subtract 0x8140 from Shift JIS value\n            value -= 0x8140;\n            // For characters with Shift JIS values from 0xE040 to 0xEBBF\n        }\n        else if (value >= 0xE040 && value <= 0xEBBF) {\n            // Subtract 0xC140 from Shift JIS value\n            value -= 0xC140;\n        }\n        else {\n            throw new Error('Invalid SJIS character: ' + this.data[i] + '\\n' +\n                'Make sure your charset is UTF-8');\n        }\n        // Multiply most significant byte of result by 0xC0\n        // and add least significant byte to product\n        value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff);\n        // Convert result to a 13-bit binary string\n        bitBuffer.put(value, 13);\n    }\n};\nvar kanjiData = KanjiData;\nvar dijkstra_1 = createCommonjsModule(function (module) {\n    /******************************************************************************\n     * Created 2008-08-19.\n     *\n     * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n     *\n     * Copyright (C) 2008\n     *   Wyatt Baldwin <self@wyattbaldwin.com>\n     *   All rights reserved\n     *\n     * Licensed under the MIT license.\n     *\n     *   http://www.opensource.org/licenses/mit-license.php\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n     * THE SOFTWARE.\n     *****************************************************************************/\n    var dijkstra = {\n        single_source_shortest_paths: function (graph, s, d) {\n            // Predecessor map for each node that has been encountered.\n            // node ID => predecessor node ID\n            var predecessors = {};\n            // Costs of shortest paths from s to all nodes encountered.\n            // node ID => cost\n            var costs = {};\n            costs[s] = 0;\n            // Costs of shortest paths from s to all nodes encountered; differs from\n            // `costs` in that it provides easy access to the node that currently has\n            // the known shortest path from s.\n            // XXX: Do we actually need both `costs` and `open`?\n            var open = dijkstra.PriorityQueue.make();\n            open.push(s, 0);\n            var closest, u, v, cost_of_s_to_u, adjacent_nodes, cost_of_e, cost_of_s_to_u_plus_cost_of_e, cost_of_s_to_v, first_visit;\n            while (!open.empty()) {\n                // In the nodes remaining in graph that have a known cost from s,\n                // find the node, u, that currently has the shortest path from s.\n                closest = open.pop();\n                u = closest.value;\n                cost_of_s_to_u = closest.cost;\n                // Get nodes adjacent to u...\n                adjacent_nodes = graph[u] || {};\n                // ...and explore the edges that connect u to those nodes, updating\n                // the cost of the shortest paths to any or all of those nodes as\n                // necessary. v is the node across the current edge from u.\n                for (v in adjacent_nodes) {\n                    if (adjacent_nodes.hasOwnProperty(v)) {\n                        // Get the cost of the edge running from u to v.\n                        cost_of_e = adjacent_nodes[v];\n                        // Cost of s to u plus the cost of u to v across e--this is *a*\n                        // cost from s to v that may or may not be less than the current\n                        // known cost to v.\n                        cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n                        // If we haven't visited v yet OR if the current known cost from s to\n                        // v is greater than the new cost we just found (cost of s to u plus\n                        // cost of u to v across e), update v's cost in the cost list and\n                        // update v's predecessor in the predecessor list (it's now u).\n                        cost_of_s_to_v = costs[v];\n                        first_visit = (typeof costs[v] === 'undefined');\n                        if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n                            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n                            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n                            predecessors[v] = u;\n                        }\n                    }\n                }\n            }\n            if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n                var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n                throw new Error(msg);\n            }\n            return predecessors;\n        },\n        extract_shortest_path_from_predecessor_list: function (predecessors, d) {\n            var nodes = [];\n            var u = d;\n            while (u) {\n                nodes.push(u);\n                u = predecessors[u];\n            }\n            nodes.reverse();\n            return nodes;\n        },\n        find_path: function (graph, s, d) {\n            var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n            return dijkstra.extract_shortest_path_from_predecessor_list(predecessors, d);\n        },\n        /**\n         * A very naive priority queue implementation.\n         */\n        PriorityQueue: {\n            make: function (opts) {\n                var T = dijkstra.PriorityQueue, t = {}, key;\n                opts = opts || {};\n                for (key in T) {\n                    if (T.hasOwnProperty(key)) {\n                        t[key] = T[key];\n                    }\n                }\n                t.queue = [];\n                t.sorter = opts.sorter || T.default_sorter;\n                return t;\n            },\n            default_sorter: function (a, b) {\n                return a.cost - b.cost;\n            },\n            /**\n             * Add a new item to the queue and ensure the highest priority element\n             * is at the front of the queue.\n             */\n            push: function (value, cost) {\n                var item = { value: value, cost: cost };\n                this.queue.push(item);\n                this.queue.sort(this.sorter);\n            },\n            /**\n             * Return the highest priority element in the queue.\n             */\n            pop: function () {\n                return this.queue.shift();\n            },\n            empty: function () {\n                return this.queue.length === 0;\n            }\n        }\n    };\n    // node.js module exports\n    {\n        module.exports = dijkstra;\n    }\n});\nvar segments = createCommonjsModule(function (module, exports) {\n    /**\n     * Returns UTF8 byte length\n     *\n     * @param  {String} str Input string\n     * @return {Number}     Number of byte\n     */\n    function getStringByteLength(str) {\n        return unescape(encodeURIComponent(str)).length;\n    }\n    /**\n     * Get a list of segments of the specified mode\n     * from a string\n     *\n     * @param  {Mode}   mode Segment mode\n     * @param  {String} str  String to process\n     * @return {Array}       Array of object with segments data\n     */\n    function getSegments(regex, mode, str) {\n        var segments = [];\n        var result;\n        while ((result = regex.exec(str)) !== null) {\n            segments.push({\n                data: result[0],\n                index: result.index,\n                mode: mode,\n                length: result[0].length\n            });\n        }\n        return segments;\n    }\n    /**\n     * Extracts a series of segments with the appropriate\n     * modes from a string\n     *\n     * @param  {String} dataStr Input string\n     * @return {Array}          Array of object with segments data\n     */\n    function getSegmentsFromString(dataStr) {\n        var numSegs = getSegments(regex.NUMERIC, mode.NUMERIC, dataStr);\n        var alphaNumSegs = getSegments(regex.ALPHANUMERIC, mode.ALPHANUMERIC, dataStr);\n        var byteSegs;\n        var kanjiSegs;\n        if (utils.isKanjiModeEnabled()) {\n            byteSegs = getSegments(regex.BYTE, mode.BYTE, dataStr);\n            kanjiSegs = getSegments(regex.KANJI, mode.KANJI, dataStr);\n        }\n        else {\n            byteSegs = getSegments(regex.BYTE_KANJI, mode.BYTE, dataStr);\n            kanjiSegs = [];\n        }\n        var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);\n        return segs\n            .sort(function (s1, s2) {\n            return s1.index - s2.index;\n        })\n            .map(function (obj) {\n            return {\n                data: obj.data,\n                mode: obj.mode,\n                length: obj.length\n            };\n        });\n    }\n    /**\n     * Returns how many bits are needed to encode a string of\n     * specified length with the specified mode\n     *\n     * @param  {Number} length String length\n     * @param  {Mode} mode     Segment mode\n     * @return {Number}        Bit length\n     */\n    function getSegmentBitsLength(length, mode$1) {\n        switch (mode$1) {\n            case mode.NUMERIC:\n                return numericData.getBitsLength(length);\n            case mode.ALPHANUMERIC:\n                return alphanumericData.getBitsLength(length);\n            case mode.KANJI:\n                return kanjiData.getBitsLength(length);\n            case mode.BYTE:\n                return byteData.getBitsLength(length);\n        }\n    }\n    /**\n     * Merges adjacent segments which have the same mode\n     *\n     * @param  {Array} segs Array of object with segments data\n     * @return {Array}      Array of object with segments data\n     */\n    function mergeSegments(segs) {\n        return segs.reduce(function (acc, curr) {\n            var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;\n            if (prevSeg && prevSeg.mode === curr.mode) {\n                acc[acc.length - 1].data += curr.data;\n                return acc;\n            }\n            acc.push(curr);\n            return acc;\n        }, []);\n    }\n    /**\n     * Generates a list of all possible nodes combination which\n     * will be used to build a segments graph.\n     *\n     * Nodes are divided by groups. Each group will contain a list of all the modes\n     * in which is possible to encode the given text.\n     *\n     * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n     * The group for '12345' will contain then 3 objects, one for each\n     * possible encoding mode.\n     *\n     * Each node represents a possible segment.\n     *\n     * @param  {Array} segs Array of object with segments data\n     * @return {Array}      Array of object with segments data\n     */\n    function buildNodes(segs) {\n        var nodes = [];\n        for (var i = 0; i < segs.length; i++) {\n            var seg = segs[i];\n            switch (seg.mode) {\n                case mode.NUMERIC:\n                    nodes.push([seg,\n                        { data: seg.data, mode: mode.ALPHANUMERIC, length: seg.length },\n                        { data: seg.data, mode: mode.BYTE, length: seg.length }\n                    ]);\n                    break;\n                case mode.ALPHANUMERIC:\n                    nodes.push([seg,\n                        { data: seg.data, mode: mode.BYTE, length: seg.length }\n                    ]);\n                    break;\n                case mode.KANJI:\n                    nodes.push([seg,\n                        { data: seg.data, mode: mode.BYTE, length: getStringByteLength(seg.data) }\n                    ]);\n                    break;\n                case mode.BYTE:\n                    nodes.push([\n                        { data: seg.data, mode: mode.BYTE, length: getStringByteLength(seg.data) }\n                    ]);\n            }\n        }\n        return nodes;\n    }\n    /**\n     * Builds a graph from a list of nodes.\n     * All segments in each node group will be connected with all the segments of\n     * the next group and so on.\n     *\n     * At each connection will be assigned a weight depending on the\n     * segment's byte length.\n     *\n     * @param  {Array} nodes    Array of object with segments data\n     * @param  {Number} version QR Code version\n     * @return {Object}         Graph of all possible segments\n     */\n    function buildGraph(nodes, version) {\n        var table = {};\n        var graph = { 'start': {} };\n        var prevNodeIds = ['start'];\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeGroup = nodes[i];\n            var currentNodeIds = [];\n            for (var j = 0; j < nodeGroup.length; j++) {\n                var node = nodeGroup[j];\n                var key = '' + i + j;\n                currentNodeIds.push(key);\n                table[key] = { node: node, lastCount: 0 };\n                graph[key] = {};\n                for (var n = 0; n < prevNodeIds.length; n++) {\n                    var prevNodeId = prevNodeIds[n];\n                    if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n                        graph[prevNodeId][key] =\n                            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n                                getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);\n                        table[prevNodeId].lastCount += node.length;\n                    }\n                    else {\n                        if (table[prevNodeId])\n                            table[prevNodeId].lastCount = node.length;\n                        graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n                            4 + mode.getCharCountIndicator(node.mode, version); // switch cost\n                    }\n                }\n            }\n            prevNodeIds = currentNodeIds;\n        }\n        for (n = 0; n < prevNodeIds.length; n++) {\n            graph[prevNodeIds[n]]['end'] = 0;\n        }\n        return { map: graph, table: table };\n    }\n    /**\n     * Builds a segment from a specified data and mode.\n     * If a mode is not specified, the more suitable will be used.\n     *\n     * @param  {String} data             Input data\n     * @param  {Mode | String} modesHint Data mode\n     * @return {Segment}                 Segment\n     */\n    function buildSingleSegment(data, modesHint) {\n        var mode$1;\n        var bestMode = mode.getBestModeForData(data);\n        mode$1 = mode.from(modesHint, bestMode);\n        // Make sure data can be encoded\n        if (mode$1 !== mode.BYTE && mode$1.bit < bestMode.bit) {\n            throw new Error('\"' + data + '\"' +\n                ' cannot be encoded with mode ' + mode.toString(mode$1) +\n                '.\\n Suggested mode is: ' + mode.toString(bestMode));\n        }\n        // Use Mode.BYTE if Kanji support is disabled\n        if (mode$1 === mode.KANJI && !utils.isKanjiModeEnabled()) {\n            mode$1 = mode.BYTE;\n        }\n        switch (mode$1) {\n            case mode.NUMERIC:\n                return new numericData(data);\n            case mode.ALPHANUMERIC:\n                return new alphanumericData(data);\n            case mode.KANJI:\n                return new kanjiData(data);\n            case mode.BYTE:\n                return new byteData(data);\n        }\n    }\n    /**\n     * Builds a list of segments from an array.\n     * Array can contain Strings or Objects with segment's info.\n     *\n     * For each item which is a string, will be generated a segment with the given\n     * string and the more appropriate encoding mode.\n     *\n     * For each item which is an object, will be generated a segment with the given\n     * data and mode.\n     * Objects must contain at least the property \"data\".\n     * If property \"mode\" is not present, the more suitable mode will be used.\n     *\n     * @param  {Array} array Array of objects with segments data\n     * @return {Array}       Array of Segments\n     */\n    exports.fromArray = function fromArray(array) {\n        return array.reduce(function (acc, seg) {\n            if (typeof seg === 'string') {\n                acc.push(buildSingleSegment(seg, null));\n            }\n            else if (seg.data) {\n                acc.push(buildSingleSegment(seg.data, seg.mode));\n            }\n            return acc;\n        }, []);\n    };\n    /**\n     * Builds an optimized sequence of segments from a string,\n     * which will produce the shortest possible bitstream.\n     *\n     * @param  {String} data    Input string\n     * @param  {Number} version QR Code version\n     * @return {Array}          Array of segments\n     */\n    exports.fromString = function fromString(data, version) {\n        var segs = getSegmentsFromString(data, utils.isKanjiModeEnabled());\n        var nodes = buildNodes(segs);\n        var graph = buildGraph(nodes, version);\n        var path = dijkstra_1.find_path(graph.map, 'start', 'end');\n        var optimizedSegs = [];\n        for (var i = 1; i < path.length - 1; i++) {\n            optimizedSegs.push(graph.table[path[i]].node);\n        }\n        return exports.fromArray(mergeSegments(optimizedSegs));\n    };\n    /**\n     * Splits a string in various segments with the modes which\n     * best represent their content.\n     * The produced segments are far from being optimized.\n     * The output of this function is only used to estimate a QR Code version\n     * which may contain the data.\n     *\n     * @param  {string} data Input string\n     * @return {Array}       Array of segments\n     */\n    exports.rawSplit = function rawSplit(data) {\n        return exports.fromArray(getSegmentsFromString(data, utils.isKanjiModeEnabled()));\n    };\n});\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern(matrix, version) {\n    var size = matrix.size;\n    var pos = finderPattern.getPositions(version);\n    for (var i = 0; i < pos.length; i++) {\n        var row = pos[i][0];\n        var col = pos[i][1];\n        for (var r = -1; r <= 7; r++) {\n            if (row + r <= -1 || size <= row + r)\n                continue;\n            for (var c = -1; c <= 7; c++) {\n                if (col + c <= -1 || size <= col + c)\n                    continue;\n                if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n                    (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n                    (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n                    matrix.set(row + r, col + c, true, true);\n                }\n                else {\n                    matrix.set(row + r, col + c, false, true);\n                }\n            }\n        }\n    }\n}\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern(matrix) {\n    var size = matrix.size;\n    for (var r = 8; r < size - 8; r++) {\n        var value = r % 2 === 0;\n        matrix.set(r, 6, value, true);\n        matrix.set(6, r, value, true);\n    }\n}\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern(matrix, version) {\n    var pos = alignmentPattern.getPositions(version);\n    for (var i = 0; i < pos.length; i++) {\n        var row = pos[i][0];\n        var col = pos[i][1];\n        for (var r = -2; r <= 2; r++) {\n            for (var c = -2; c <= 2; c++) {\n                if (r === -2 || r === 2 || c === -2 || c === 2 ||\n                    (r === 0 && c === 0)) {\n                    matrix.set(row + r, col + c, true, true);\n                }\n                else {\n                    matrix.set(row + r, col + c, false, true);\n                }\n            }\n        }\n    }\n}\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo(matrix, version$1) {\n    var size = matrix.size;\n    var bits = version.getEncodedBits(version$1);\n    var row, col, mod;\n    for (var i = 0; i < 18; i++) {\n        row = Math.floor(i / 3);\n        col = i % 3 + size - 8 - 3;\n        mod = ((bits >> i) & 1) === 1;\n        matrix.set(row, col, mod, true);\n        matrix.set(col, row, mod, true);\n    }\n}\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {\n    var size = matrix.size;\n    var bits = formatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);\n    var i, mod;\n    for (i = 0; i < 15; i++) {\n        mod = ((bits >> i) & 1) === 1;\n        // vertical\n        if (i < 6) {\n            matrix.set(i, 8, mod, true);\n        }\n        else if (i < 8) {\n            matrix.set(i + 1, 8, mod, true);\n        }\n        else {\n            matrix.set(size - 15 + i, 8, mod, true);\n        }\n        // horizontal\n        if (i < 8) {\n            matrix.set(8, size - i - 1, mod, true);\n        }\n        else if (i < 9) {\n            matrix.set(8, 15 - i - 1 + 1, mod, true);\n        }\n        else {\n            matrix.set(8, 15 - i - 1, mod, true);\n        }\n    }\n    // fixed module\n    matrix.set(size - 8, 8, 1, true);\n}\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix} matrix Modules matrix\n * @param  {Buffer}    data   Data codewords\n */\nfunction setupData(matrix, data) {\n    var size = matrix.size;\n    var inc = -1;\n    var row = size - 1;\n    var bitIndex = 7;\n    var byteIndex = 0;\n    for (var col = size - 1; col > 0; col -= 2) {\n        if (col === 6)\n            col--;\n        while (true) {\n            for (var c = 0; c < 2; c++) {\n                if (!matrix.isReserved(row, col - c)) {\n                    var dark = false;\n                    if (byteIndex < data.length) {\n                        dark = (((data[byteIndex] >>> bitIndex) & 1) === 1);\n                    }\n                    matrix.set(row, col - c, dark);\n                    bitIndex--;\n                    if (bitIndex === -1) {\n                        byteIndex++;\n                        bitIndex = 7;\n                    }\n                }\n            }\n            row += inc;\n            if (row < 0 || size <= row) {\n                row -= inc;\n                inc = -inc;\n                break;\n            }\n        }\n    }\n}\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Buffer}                        Buffer containing encoded codewords\n */\nfunction createData(version, errorCorrectionLevel, segments) {\n    // Prepare data buffer\n    var buffer = new bitBuffer();\n    segments.forEach(function (data) {\n        // prefix data with mode indicator (4 bits)\n        buffer.put(data.mode.bit, 4);\n        // Prefix data with character count indicator.\n        // The character count indicator is a string of bits that represents the\n        // number of characters that are being encoded.\n        // The character count indicator must be placed after the mode indicator\n        // and must be a certain number of bits long, depending on the QR version\n        // and data mode\n        // @see {@link Mode.getCharCountIndicator}.\n        buffer.put(data.getLength(), mode.getCharCountIndicator(data.mode, version));\n        // add binary data sequence to buffer\n        data.write(buffer);\n    });\n    // Calculate required number of bits\n    var totalCodewords = utils.getSymbolTotalCodewords(version);\n    var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n    var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n    // Add a terminator.\n    // If the bit string is shorter than the total number of required bits,\n    // a terminator of up to four 0s must be added to the right side of the string.\n    // If the bit string is more than four bits shorter than the required number of bits,\n    // add four 0s to the end.\n    if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n        buffer.put(0, 4);\n    }\n    // If the bit string is fewer than four bits shorter, add only the number of 0s that\n    // are needed to reach the required number of bits.\n    // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n    // pad the string on the right with 0s to make the string's length a multiple of 8.\n    while (buffer.getLengthInBits() % 8 !== 0) {\n        buffer.putBit(0);\n    }\n    // Add pad bytes if the string is still shorter than the total number of required bits.\n    // Extend the buffer to fill the data capacity of the symbol corresponding to\n    // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n    // and 00010001 (0x11) alternately.\n    var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;\n    for (var i = 0; i < remainingByte; i++) {\n        buffer.put(i % 2 ? 0x11 : 0xEC, 8);\n    }\n    return createCodewords(buffer, version, errorCorrectionLevel);\n}\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Buffer}                         Buffer containing encoded codewords\n */\nfunction createCodewords(bitBuffer, version, errorCorrectionLevel) {\n    // Total codewords for this QR code version (Data + Error correction)\n    var totalCodewords = utils.getSymbolTotalCodewords(version);\n    // Total number of error correction codewords\n    var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n    // Total number of data codewords\n    var dataTotalCodewords = totalCodewords - ecTotalCodewords;\n    // Total number of blocks\n    var ecTotalBlocks = errorCorrectionCode.getBlocksCount(version, errorCorrectionLevel);\n    // Calculate how many blocks each group should contain\n    var blocksInGroup2 = totalCodewords % ecTotalBlocks;\n    var blocksInGroup1 = ecTotalBlocks - blocksInGroup2;\n    var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);\n    var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);\n    var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;\n    // Number of EC codewords is the same for both groups\n    var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;\n    // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n    var rs = new reedSolomonEncoder(ecCount);\n    var offset = 0;\n    var dcData = new Array(ecTotalBlocks);\n    var ecData = new Array(ecTotalBlocks);\n    var maxDataSize = 0;\n    var buffer = typedarrayBuffer.from(bitBuffer.buffer);\n    // Divide the buffer into the required number of blocks\n    for (var b = 0; b < ecTotalBlocks; b++) {\n        var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;\n        // extract a block of data from buffer\n        dcData[b] = buffer.slice(offset, offset + dataSize);\n        // Calculate EC codewords for this data block\n        ecData[b] = rs.encode(dcData[b]);\n        offset += dataSize;\n        maxDataSize = Math.max(maxDataSize, dataSize);\n    }\n    // Create final data\n    // Interleave the data and error correction codewords from each block\n    var data = typedarrayBuffer.alloc(totalCodewords);\n    var index = 0;\n    var i, r;\n    // Add data codewords\n    for (i = 0; i < maxDataSize; i++) {\n        for (r = 0; r < ecTotalBlocks; r++) {\n            if (i < dcData[r].length) {\n                data[index++] = dcData[r][i];\n            }\n        }\n    }\n    // Apped EC codewords\n    for (i = 0; i < ecCount; i++) {\n        for (r = 0; r < ecTotalBlocks; r++) {\n            data[index++] = ecData[r][i];\n        }\n    }\n    return data;\n}\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol(data, version$1, errorCorrectionLevel, maskPattern$1) {\n    var segments$1;\n    if (isarray(data)) {\n        segments$1 = segments.fromArray(data);\n    }\n    else if (typeof data === 'string') {\n        var estimatedVersion = version$1;\n        if (!estimatedVersion) {\n            var rawSegments = segments.rawSplit(data);\n            // Estimate best version that can contain raw splitted segments\n            estimatedVersion = version.getBestVersionForData(rawSegments, errorCorrectionLevel);\n        }\n        // Build optimized segments\n        // If estimated version is undefined, try with the highest version\n        segments$1 = segments.fromString(data, estimatedVersion || 40);\n    }\n    else {\n        throw new Error('Invalid data');\n    }\n    // Get the min version that can contain data\n    var bestVersion = version.getBestVersionForData(segments$1, errorCorrectionLevel);\n    // If no version is found, data cannot be stored\n    if (!bestVersion) {\n        throw new Error('The amount of data is too big to be stored in a QR Code');\n    }\n    // If not specified, use min version as default\n    if (!version$1) {\n        version$1 = bestVersion;\n        // Check if the specified version can contain the data\n    }\n    else if (version$1 < bestVersion) {\n        throw new Error('\\n' +\n            'The chosen QR Code version cannot contain this amount of data.\\n' +\n            'Minimum version required to store current data is: ' + bestVersion + '.\\n');\n    }\n    var dataBits = createData(version$1, errorCorrectionLevel, segments$1);\n    // Allocate matrix buffer\n    var moduleCount = utils.getSymbolSize(version$1);\n    var modules = new bitMatrix(moduleCount);\n    // Add function modules\n    setupFinderPattern(modules, version$1);\n    setupTimingPattern(modules);\n    setupAlignmentPattern(modules, version$1);\n    // Add temporary dummy bits for format info just to set them as reserved.\n    // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n    // since the masking operation must be performed only on the encoding region.\n    // These blocks will be replaced with correct values later in code.\n    setupFormatInfo(modules, errorCorrectionLevel, 0);\n    if (version$1 >= 7) {\n        setupVersionInfo(modules, version$1);\n    }\n    // Add data codewords\n    setupData(modules, dataBits);\n    if (isNaN(maskPattern$1)) {\n        // Find best mask pattern\n        maskPattern$1 = maskPattern.getBestMask(modules, setupFormatInfo.bind(null, modules, errorCorrectionLevel));\n    }\n    // Apply mask pattern\n    maskPattern.applyMask(maskPattern$1, modules);\n    // Replace format info bits with correct values\n    setupFormatInfo(modules, errorCorrectionLevel, maskPattern$1);\n    return {\n        modules: modules,\n        version: version$1,\n        errorCorrectionLevel: errorCorrectionLevel,\n        maskPattern: maskPattern$1,\n        segments: segments$1\n    };\n}\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nvar create = function create(data, options) {\n    if (typeof data === 'undefined' || data === '') {\n        throw new Error('No input text');\n    }\n    var errorCorrectionLevel$1 = errorCorrectionLevel.M;\n    var version$1;\n    var mask;\n    if (typeof options !== 'undefined') {\n        // Use higher error correction level as default\n        errorCorrectionLevel$1 = errorCorrectionLevel.from(options.errorCorrectionLevel, errorCorrectionLevel.M);\n        version$1 = version.from(options.version);\n        mask = maskPattern.from(options.maskPattern);\n        if (options.toSJISFunc) {\n            utils.setToSJISFunction(options.toSJISFunc);\n        }\n    }\n    return createSymbol(data, version$1, errorCorrectionLevel$1, mask);\n};\nvar qrcode = {\n    create: create\n};\nvar utils$1 = createCommonjsModule(function (module, exports) {\n    function hex2rgba(hex) {\n        if (typeof hex === 'number') {\n            hex = hex.toString();\n        }\n        if (typeof hex !== 'string') {\n            throw new Error('Color should be defined as hex string');\n        }\n        var hexCode = hex.slice().replace('#', '').split('');\n        if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n            throw new Error('Invalid hex color: ' + hex);\n        }\n        // Convert from short to long form (fff -> ffffff)\n        if (hexCode.length === 3 || hexCode.length === 4) {\n            hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n                return [c, c];\n            }));\n        }\n        // Add default alpha value\n        if (hexCode.length === 6)\n            hexCode.push('F', 'F');\n        var hexValue = parseInt(hexCode.join(''), 16);\n        return {\n            r: (hexValue >> 24) & 255,\n            g: (hexValue >> 16) & 255,\n            b: (hexValue >> 8) & 255,\n            a: hexValue & 255,\n            hex: '#' + hexCode.slice(0, 6).join('')\n        };\n    }\n    exports.getOptions = function getOptions(options) {\n        if (!options)\n            options = {};\n        if (!options.color)\n            options.color = {};\n        var margin = typeof options.margin === 'undefined' ||\n            options.margin === null ||\n            options.margin < 0 ? 4 : options.margin;\n        var width = options.width && options.width >= 21 ? options.width : undefined;\n        var scale = options.scale || 4;\n        return {\n            width: width,\n            scale: width ? 4 : scale,\n            margin: margin,\n            color: {\n                dark: hex2rgba(options.color.dark || '#000000ff'),\n                light: hex2rgba(options.color.light || '#ffffffff')\n            },\n            type: options.type,\n            rendererOpts: options.rendererOpts || {}\n        };\n    };\n    exports.getScale = function getScale(qrSize, opts) {\n        return opts.width && opts.width >= qrSize + opts.margin * 2\n            ? opts.width / (qrSize + opts.margin * 2)\n            : opts.scale;\n    };\n    exports.getImageWidth = function getImageWidth(qrSize, opts) {\n        var scale = exports.getScale(qrSize, opts);\n        return Math.floor((qrSize + opts.margin * 2) * scale);\n    };\n    exports.qrToImageData = function qrToImageData(imgData, qr, opts) {\n        var size = qr.modules.size;\n        var data = qr.modules.data;\n        var scale = exports.getScale(size, opts);\n        var symbolSize = Math.floor((size + opts.margin * 2) * scale);\n        var scaledMargin = opts.margin * scale;\n        var palette = [opts.color.light, opts.color.dark];\n        for (var i = 0; i < symbolSize; i++) {\n            for (var j = 0; j < symbolSize; j++) {\n                var posDst = (i * symbolSize + j) * 4;\n                var pxColor = opts.color.light;\n                if (i >= scaledMargin && j >= scaledMargin &&\n                    i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n                    var iSrc = Math.floor((i - scaledMargin) / scale);\n                    var jSrc = Math.floor((j - scaledMargin) / scale);\n                    pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];\n                }\n                imgData[posDst++] = pxColor.r;\n                imgData[posDst++] = pxColor.g;\n                imgData[posDst++] = pxColor.b;\n                imgData[posDst] = pxColor.a;\n            }\n        }\n    };\n});\nvar canvas = createCommonjsModule(function (module, exports) {\n    function clearCanvas(ctx, canvas, size) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        if (!canvas.style)\n            canvas.style = {};\n        canvas.height = size;\n        canvas.width = size;\n        canvas.style.height = size + 'px';\n        canvas.style.width = size + 'px';\n    }\n    function getCanvasElement() {\n        try {\n            return document.createElement('canvas');\n        }\n        catch (e) {\n            throw new Error('You need to specify a canvas element');\n        }\n    }\n    exports.render = function render(qrData, canvas, options) {\n        var opts = options;\n        var canvasEl = canvas;\n        if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n            opts = canvas;\n            canvas = undefined;\n        }\n        if (!canvas) {\n            canvasEl = getCanvasElement();\n        }\n        opts = utils$1.getOptions(opts);\n        var size = utils$1.getImageWidth(qrData.modules.size, opts);\n        var ctx = canvasEl.getContext('2d');\n        var image = ctx.createImageData(size, size);\n        utils$1.qrToImageData(image.data, qrData, opts);\n        clearCanvas(ctx, canvasEl, size);\n        ctx.putImageData(image, 0, 0);\n        return canvasEl;\n    };\n    exports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {\n        var opts = options;\n        if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n            opts = canvas;\n            canvas = undefined;\n        }\n        if (!opts)\n            opts = {};\n        var canvasEl = exports.render(qrData, canvas, opts);\n        var type = opts.type || 'image/png';\n        var rendererOpts = opts.rendererOpts || {};\n        return canvasEl.toDataURL(type, rendererOpts.quality);\n    };\n});\nfunction getColorAttrib(color, attrib) {\n    var alpha = color.a / 255;\n    var str = attrib + '=\"' + color.hex + '\"';\n    return alpha < 1\n        ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n        : str;\n}\nfunction svgCmd(cmd, x, y) {\n    var str = cmd + x;\n    if (typeof y !== 'undefined')\n        str += ' ' + y;\n    return str;\n}\nfunction qrToPath(data, size, margin) {\n    var path = '';\n    var moveBy = 0;\n    var newRow = false;\n    var lineLength = 0;\n    for (var i = 0; i < data.length; i++) {\n        var col = Math.floor(i % size);\n        var row = Math.floor(i / size);\n        if (!col && !newRow)\n            newRow = true;\n        if (data[i]) {\n            lineLength++;\n            if (!(i > 0 && col > 0 && data[i - 1])) {\n                path += newRow\n                    ? svgCmd('M', col + margin, 0.5 + row + margin)\n                    : svgCmd('m', moveBy, 0);\n                moveBy = 0;\n                newRow = false;\n            }\n            if (!(col + 1 < size && data[i + 1])) {\n                path += svgCmd('h', lineLength);\n                lineLength = 0;\n            }\n        }\n        else {\n            moveBy++;\n        }\n    }\n    return path;\n}\nvar render = function render(qrData, options, cb) {\n    var opts = utils$1.getOptions(options);\n    var size = qrData.modules.size;\n    var data = qrData.modules.data;\n    var qrcodesize = size + opts.margin * 2;\n    var bg = !opts.color.light.a\n        ? ''\n        : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n            ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>';\n    var path = '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n        ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>';\n    var viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"';\n    var width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" ';\n    var svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n';\n    if (typeof cb === 'function') {\n        cb(null, svgTag);\n    }\n    return svgTag;\n};\nvar svgTag = {\n    render: render\n};\nfunction renderCanvas(renderFunc, canvas, text, opts, cb) {\n    var args = [].slice.call(arguments, 1);\n    var argsNum = args.length;\n    var isLastArgCb = typeof args[argsNum - 1] === 'function';\n    if (!isLastArgCb && !canPromise()) {\n        throw new Error('Callback required as last argument');\n    }\n    if (isLastArgCb) {\n        if (argsNum < 2) {\n            throw new Error('Too few arguments provided');\n        }\n        if (argsNum === 2) {\n            cb = text;\n            text = canvas;\n            canvas = opts = undefined;\n        }\n        else if (argsNum === 3) {\n            if (canvas.getContext && typeof cb === 'undefined') {\n                cb = opts;\n                opts = undefined;\n            }\n            else {\n                cb = opts;\n                opts = text;\n                text = canvas;\n                canvas = undefined;\n            }\n        }\n    }\n    else {\n        if (argsNum < 1) {\n            throw new Error('Too few arguments provided');\n        }\n        if (argsNum === 1) {\n            text = canvas;\n            canvas = opts = undefined;\n        }\n        else if (argsNum === 2 && !canvas.getContext) {\n            opts = text;\n            text = canvas;\n            canvas = undefined;\n        }\n        return new Promise(function (resolve, reject) {\n            try {\n                var data = qrcode.create(text, opts);\n                resolve(renderFunc(data, canvas, opts));\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    try {\n        var data = qrcode.create(text, opts);\n        cb(null, renderFunc(data, canvas, opts));\n    }\n    catch (e) {\n        cb(e);\n    }\n}\nvar create$1 = qrcode.create;\nvar toCanvas = renderCanvas.bind(null, canvas.render);\nvar toDataURL = renderCanvas.bind(null, canvas.renderToDataURL);\n// only svg for now.\nvar toString_1 = renderCanvas.bind(null, function (data, _, opts) {\n    return svgTag.render(data, opts);\n});\nvar browser = {\n    create: create$1,\n    toCanvas: toCanvas,\n    toDataURL: toDataURL,\n    toString: toString_1\n};\nvar amplifyTotpSetupCss = \".totp-setup{text-align:center;margin-bottom:30px}.totp-setup img{height:128px;width:128px}\";\nvar logger = new Logger('TOTP');\nvar AmplifyTOTPSetup = /** @class */ (function () {\n    function class_1(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputProps = {\n            autoFocus: true,\n        };\n        /** Auth state change handler for this component */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        this.code = null;\n        this.setupMessage = null;\n        this.qrCodeInput = null;\n        this.loading = false;\n    }\n    class_1.prototype.componentWillLoad = function () {\n        this.setup();\n    };\n    class_1.prototype.buildOtpAuthPath = function (user, issuer, secretKey) {\n        return \"otpauth://totp/\" + issuer + \":\" + user.username + \"?secret=\" + secretKey + \"&issuer=\" + issuer;\n    };\n    class_1.prototype.checkContact = function (user) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dataVerifed, newUser, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!Auth || typeof Auth.verifiedContact !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, Auth.verifiedContact(user)];\n                    case 2:\n                        dataVerifed = _a.sent();\n                        if (!isEmpty(dataVerifed)) {\n                            this.handleAuthStateChange(AuthState.SignedIn, user);\n                        }\n                        else {\n                            newUser = Object.assign(user, dataVerifed);\n                            this.handleAuthStateChange(AuthState.VerifyContact, newUser);\n                        }\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_1 = _a.sent();\n                        dispatchToastHubEvent(error_1);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.onTOTPEvent = function (event, data, user) {\n        logger.debug('on totp event', event, data);\n        if (event === SETUP_TOTP && data === SUCCESS) {\n            this.checkContact(user);\n        }\n    };\n    class_1.prototype.handleTotpInputChange = function (event) {\n        this.setupMessage = null;\n        this.qrCodeInput = event.target.value;\n    };\n    class_1.prototype.generateQRCode = function (codeFromTotp) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, error_2;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        _a = this;\n                        return [4 /*yield*/, browser.toDataURL(codeFromTotp)];\n                    case 1:\n                        _a.qrCodeImageSource = _b.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_2 = _b.sent();\n                        dispatchToastHubEvent(error_2);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.setup = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var issuer, secretKey, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.setupMessage = null;\n                        issuer = encodeURI('AWSCognito');\n                        if (!Auth || typeof Auth.setupTOTP !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        this.loading = true;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, 4, 5]);\n                        return [4 /*yield*/, Auth.setupTOTP(this.user)];\n                    case 2:\n                        secretKey = _a.sent();\n                        logger.debug('secret key', secretKey);\n                        this.code = this.buildOtpAuthPath(this.user, issuer, secretKey);\n                        this.generateQRCode(this.code);\n                        return [3 /*break*/, 5];\n                    case 3:\n                        error_3 = _a.sent();\n                        dispatchToastHubEvent(error_3);\n                        logger.debug(I18n.get(Translations.TOTP_SETUP_FAILURE), error_3);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.loading = false;\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.verifyTotpToken = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            var user, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event) {\n                            event.preventDefault();\n                        }\n                        if (!this.qrCodeInput) {\n                            logger.debug('No TOTP Code provided');\n                            return [2 /*return*/];\n                        }\n                        user = this.user;\n                        if (!Auth || typeof Auth.verifyTotpToken !== 'function' || typeof Auth.setPreferredMFA !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, Auth.verifyTotpToken(user, this.qrCodeInput)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, Auth.setPreferredMFA(user, MfaOption.TOTP)];\n                    case 3:\n                        _a.sent();\n                        this.setupMessage = I18n.get(Translations.TOTP_SUCCESS_MESSAGE);\n                        logger.debug(I18n.get(Translations.TOTP_SUCCESS_MESSAGE));\n                        this.onTOTPEvent(SETUP_TOTP, SUCCESS, user);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        error_4 = _a.sent();\n                        this.setupMessage = I18n.get(Translations.TOTP_SETUP_FAILURE);\n                        logger.error(error_4);\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // TODO add Toast component to the Top of the form section\n    class_1.prototype.render = function () {\n        var _this = this;\n        return (h(\"amplify-form-section\", { headerText: I18n.get(Translations.TOTP_HEADER_TEXT), submitButtonText: I18n.get(Translations.TOTP_SUBMIT_BUTTON_TEXT), handleSubmit: function (event) { return _this.verifyTotpToken(event); }, loading: this.loading }, h(\"div\", { class: \"totp-setup\" }, h(\"img\", { src: this.qrCodeImageSource, alt: I18n.get(Translations.QR_CODE_ALT) }), h(\"amplify-form-field\", { label: I18n.get(Translations.TOTP_LABEL), inputProps: this.inputProps, fieldId: \"totpCode\", name: \"totpCode\", handleInputChange: function (event) { return _this.handleTotpInputChange(event); } }))));\n    };\n    return class_1;\n}());\nAmplifyTOTPSetup.style = amplifyTotpSetupCss;\nexport { AmplifyRadioButton as amplify_radio_button, AmplifyTOTPSetup as amplify_totp_setup };\n","// Dictionaries\n// fieldId constants\nvar USERNAME_SUFFIX = 'username';\nvar EMAIL_SUFFIX = 'email';\nvar CODE_SUFFIX = 'code';\nvar PHONE_SUFFIX = 'phone';\nvar PASSWORD_SUFFIX = 'password';\n// Country Dial Code common constants\nvar COUNTRY_DIAL_CODE_SUFFIX = 'country-dial-code-select';\nvar COUNTRY_DIAL_CODE_DEFAULT = '+1';\n// Auth Keys\nvar AUTH_SOURCE_KEY = 'amplify-auth-source';\nvar SIGNING_IN_WITH_HOSTEDUI_KEY = 'amplify-signin-with-hostedUI';\nvar AUTHENTICATOR_AUTHSTATE = 'amplify-authenticator-authState';\n// Error message Common Constants\nvar PHONE_EMPTY_ERROR_MESSAGE = 'Phone number can not be empty';\nvar NO_AUTH_MODULE_FOUND = 'No Auth module found, please ensure @aws-amplify/auth is imported';\n// TOTP Messages\nvar SETUP_TOTP = 'SETUP_TOTP';\n// Select MFA Types Messages\nvar USER_NOT_SETUP_SOFTWARE_TOKEN_MFA = 'User has not set up software token mfa';\nvar USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA = 'User has not verified software token mfa';\n// Common events\nvar SUCCESS = 'SUCCESS';\n// Hub Events and Channels\nvar AUTH_CHANNEL = 'auth';\nvar UI_AUTH_CHANNEL = 'UI Auth';\nvar TOAST_AUTH_ERROR_EVENT = 'ToastAuthError';\nvar AUTH_STATE_CHANGE_EVENT = 'AuthStateChange';\nexport { AUTH_CHANNEL as A, COUNTRY_DIAL_CODE_DEFAULT as C, EMAIL_SUFFIX as E, NO_AUTH_MODULE_FOUND as N, PHONE_EMPTY_ERROR_MESSAGE as P, SIGNING_IN_WITH_HOSTEDUI_KEY as S, TOAST_AUTH_ERROR_EVENT as T, UI_AUTH_CHANNEL as U, AUTH_STATE_CHANGE_EVENT as a, AUTHENTICATOR_AUTHSTATE as b, USER_NOT_SETUP_SOFTWARE_TOKEN_MFA as c, USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA as d, COUNTRY_DIAL_CODE_SUFFIX as e, PHONE_SUFFIX as f, SETUP_TOTP as g, SUCCESS as h, AUTH_SOURCE_KEY as i, CODE_SUFFIX as j, PASSWORD_SUFFIX as k, USERNAME_SUFFIX as l };\n","// TODO: Move these values to or extract them from the Cognito Provider in the Auth category for Auth V2\nvar AuthState;\n(function (AuthState) {\n    AuthState[\"SignUp\"] = \"signup\";\n    AuthState[\"SignOut\"] = \"signout\";\n    AuthState[\"SignIn\"] = \"signin\";\n    AuthState[\"Loading\"] = \"loading\";\n    AuthState[\"SignedOut\"] = \"signedout\";\n    AuthState[\"SignedIn\"] = \"signedin\";\n    AuthState[\"SigningUp\"] = \"signingup\";\n    AuthState[\"ConfirmSignUp\"] = \"confirmSignUp\";\n    AuthState[\"confirmingSignUpCustomFlow\"] = \"confirmsignupcustomflow\";\n    AuthState[\"ConfirmSignIn\"] = \"confirmSignIn\";\n    AuthState[\"confirmingSignInCustomFlow\"] = \"confirmingsignincustomflow\";\n    AuthState[\"VerifyingAttributes\"] = \"verifyingattributes\";\n    AuthState[\"ForgotPassword\"] = \"forgotpassword\";\n    AuthState[\"ResetPassword\"] = \"resettingpassword\";\n    AuthState[\"SettingMFA\"] = \"settingMFA\";\n    AuthState[\"TOTPSetup\"] = \"TOTPSetup\";\n    AuthState[\"CustomConfirmSignIn\"] = \"customConfirmSignIn\";\n    AuthState[\"VerifyContact\"] = \"verifyContact\";\n})(AuthState || (AuthState = {}));\nvar MfaOption;\n(function (MfaOption) {\n    MfaOption[\"TOTP\"] = \"TOTP\";\n    MfaOption[\"SMS\"] = \"SMS\";\n    MfaOption[\"NOMFA\"] = \"NOMFA\";\n})(MfaOption || (MfaOption = {}));\nvar ChallengeName;\n(function (ChallengeName) {\n    ChallengeName[\"SoftwareTokenMFA\"] = \"SOFTWARE_TOKEN_MFA\";\n    ChallengeName[\"SMSMFA\"] = \"SMS_MFA\";\n    ChallengeName[\"NewPasswordRequired\"] = \"NEW_PASSWORD_REQUIRED\";\n    ChallengeName[\"MFASetup\"] = \"MFA_SETUP\";\n    ChallengeName[\"CustomChallenge\"] = \"CUSTOM_CHALLENGE\";\n})(ChallengeName || (ChallengeName = {}));\nvar AuthFormField;\n(function (AuthFormField) {\n    AuthFormField[\"Password\"] = \"password\";\n})(AuthFormField || (AuthFormField = {}));\nvar UsernameAlias;\n(function (UsernameAlias) {\n    UsernameAlias[\"username\"] = \"username\";\n    UsernameAlias[\"email\"] = \"email\";\n    UsernameAlias[\"phone_number\"] = \"phone_number\";\n})(UsernameAlias || (UsernameAlias = {}));\nexport { AuthState as A, ChallengeName as C, MfaOption as M, UsernameAlias as U, AuthFormField as a };\n","import { Hub } from '@aws-amplify/core';\nimport { U as UsernameAlias } from './auth-types-78df304e.js';\nimport { U as UI_AUTH_CHANNEL, T as TOAST_AUTH_ERROR_EVENT, a as AUTH_STATE_CHANGE_EVENT, P as PHONE_EMPTY_ERROR_MESSAGE } from './constants-206817b9.js';\nvar hasShadowDom = function (el) {\n    return !!el.shadowRoot && !!el.attachShadow;\n};\nvar dispatchToastHubEvent = function (error) {\n    Hub.dispatch(UI_AUTH_CHANNEL, {\n        event: TOAST_AUTH_ERROR_EVENT,\n        message: error.message,\n    });\n};\nvar dispatchAuthStateChangeEvent = function (nextAuthState, data) {\n    Hub.dispatch(UI_AUTH_CHANNEL, {\n        event: AUTH_STATE_CHANGE_EVENT,\n        message: nextAuthState,\n        data: data,\n    });\n};\nvar composePhoneNumberInput = function (phoneNumber) {\n    if (!phoneNumber.phoneNumberValue) {\n        throw new Error(PHONE_EMPTY_ERROR_MESSAGE);\n    }\n    var sanitizedPhoneNumberValue = phoneNumber.phoneNumberValue.replace(/[-()\\s]/g, '');\n    return \"\" + phoneNumber.countryDialCodeValue + sanitizedPhoneNumberValue;\n};\nvar checkUsernameAlias = function (usernameAlias) {\n    if (!(usernameAlias in UsernameAlias)) {\n        throw new Error(\"Invalid username Alias - \" + usernameAlias + \". Instead use \" + Object.values(UsernameAlias));\n    }\n};\nexport { dispatchToastHubEvent as a, composePhoneNumberInput as b, checkUsernameAlias as c, dispatchAuthStateChangeEvent as d, hasShadowDom as h };\n","var Translations;\n(function (Translations) {\n    Translations[\"BACK_TO_SIGN_IN\"] = \"Back to Sign In\";\n    Translations[\"CHANGE_PASSWORD_ACTION\"] = \"Change\";\n    Translations[\"CHANGE_PASSWORD\"] = \"Change Password\";\n    Translations[\"CODE_LABEL\"] = \"Verification code\";\n    Translations[\"CODE_PLACEHOLDER\"] = \"Enter code\";\n    Translations[\"CONFIRM_SIGN_UP_CODE_LABEL\"] = \"Confirmation Code\";\n    Translations[\"CONFIRM_SIGN_UP_CODE_PLACEHOLDER\"] = \"Enter your code\";\n    Translations[\"CONFIRM_SIGN_UP_HEADER_TEXT\"] = \"Confirm Sign up\";\n    Translations[\"CONFIRM_SIGN_UP_LOST_CODE\"] = \"Lost your code?\";\n    Translations[\"CONFIRM_SIGN_UP_RESEND_CODE\"] = \"Resend Code\";\n    Translations[\"CONFIRM_SIGN_UP_SUBMIT_BUTTON_TEXT\"] = \"Confirm\";\n    Translations[\"CONFIRM_SMS_CODE\"] = \"Confirm SMS Code\";\n    Translations[\"CONFIRM_TOTP_CODE\"] = \"Confirm TOTP Code\";\n    Translations[\"CONFIRM\"] = \"Confirm\";\n    Translations[\"CREATE_ACCOUNT_TEXT\"] = \"Create account\";\n    Translations[\"EMAIL_LABEL\"] = \"Email Address *\";\n    Translations[\"EMAIL_PLACEHOLDER\"] = \"Enter your email address\";\n    Translations[\"FORGOT_PASSWORD_TEXT\"] = \"Forgot your password?\";\n    Translations[\"LESS_THAN_TWO_MFA_VALUES_MESSAGE\"] = \"Less than two mfa types available\";\n    Translations[\"NEW_PASSWORD_LABEL\"] = \"New password\";\n    Translations[\"NEW_PASSWORD_PLACEHOLDER\"] = \"Enter your new password\";\n    Translations[\"NO_ACCOUNT_TEXT\"] = \"No account?\";\n    Translations[\"PASSWORD_LABEL\"] = \"Password *\";\n    Translations[\"PASSWORD_PLACEHOLDER\"] = \"Enter your password\";\n    Translations[\"PHONE_LABEL\"] = \"Phone Number *\";\n    Translations[\"PHONE_PLACEHOLDER\"] = \"(555) 555-1212\";\n    Translations[\"QR_CODE_ALT\"] = \"qrcode\";\n    Translations[\"RESET_PASSWORD_TEXT\"] = \"Reset password\";\n    Translations[\"RESET_YOUR_PASSWORD\"] = \"Reset your password\";\n    Translations[\"SELECT_MFA_TYPE_HEADER_TEXT\"] = \"Select MFA Type\";\n    Translations[\"SELECT_MFA_TYPE_SUBMIT_BUTTON_TEXT\"] = \"Verify\";\n    Translations[\"SEND_CODE\"] = \"Send Code\";\n    Translations[\"SETUP_TOTP_REQUIRED\"] = \"TOTP needs to be configured\";\n    Translations[\"SIGN_IN_ACTION\"] = \"Sign In\";\n    Translations[\"SIGN_IN_HEADER_TEXT\"] = \"Sign in to your account\";\n    Translations[\"SIGN_IN_TEXT\"] = \"Sign in\";\n    Translations[\"SIGN_IN_WITH_AMAZON\"] = \"Sign in with Amazon\";\n    Translations[\"SIGN_IN_WITH_AUTH0\"] = \"Sign in with Auth0\";\n    Translations[\"SIGN_IN_WITH_AWS\"] = \"Sign in with AWS\";\n    Translations[\"SIGN_IN_WITH_FACEBOOK\"] = \"Sign in with Facebook\";\n    Translations[\"SIGN_IN_WITH_GOOGLE\"] = \"Sign in with Google\";\n    Translations[\"SIGN_OUT\"] = \"Sign Out\";\n    Translations[\"SIGN_UP_EMAIL_PLACEHOLDER\"] = \"Email\";\n    Translations[\"SIGN_UP_HAVE_ACCOUNT_TEXT\"] = \"Have an account?\";\n    Translations[\"SIGN_UP_HEADER_TEXT\"] = \"Create a new account\";\n    Translations[\"SIGN_UP_PASSWORD_PLACEHOLDER\"] = \"Password\";\n    Translations[\"SIGN_UP_SUBMIT_BUTTON_TEXT\"] = \"Create Account\";\n    Translations[\"SIGN_UP_USERNAME_PLACEHOLDER\"] = \"Username\";\n    Translations[\"SUCCESS_MFA_TYPE\"] = \"Success! Your MFA Type is now:\";\n    Translations[\"TOTP_HEADER_TEXT\"] = \"Scan then enter verification code\";\n    Translations[\"TOTP_LABEL\"] = \"Enter Security Code:\";\n    Translations[\"TOTP_SETUP_FAILURE\"] = \"TOTP Setup has failed\";\n    Translations[\"TOTP_SUBMIT_BUTTON_TEXT\"] = \"Verify Security Token\";\n    Translations[\"TOTP_SUCCESS_MESSAGE\"] = \"Setup TOTP successfully!\";\n    Translations[\"UNABLE_TO_SETUP_MFA_AT_THIS_TIME\"] = \"Failed! Unable to configure MFA at this time\";\n    Translations[\"USERNAME_LABEL\"] = \"Username *\";\n    Translations[\"USERNAME_PLACEHOLDER\"] = \"Enter your username\";\n    Translations[\"VERIFY_CONTACT_EMAIL_LABEL\"] = \"Email\";\n    Translations[\"VERIFY_CONTACT_HEADER_TEXT\"] = \"Account recovery requires verified contact information\";\n    Translations[\"VERIFY_CONTACT_PHONE_LABEL\"] = \"Phone Number\";\n    Translations[\"VERIFY_CONTACT_SUBMIT_LABEL\"] = \"Submit\";\n    Translations[\"VERIFY_CONTACT_VERIFY_LABEL\"] = \"Verify\";\n})(Translations || (Translations = {}));\nexport { Translations as T };\n"],"sourceRoot":""}