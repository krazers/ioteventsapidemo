{"version":3,"sources":["logo.svg","../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","aws-exports.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","awsmobile","App","props","handleChange","value","setState","handleTemplateChange","template","handleTopicChange","topic","handleModelNameChange","modelname","handleTimeoutChange","timeout","handleEventModelChange","viewmodelname","loadDetectorInstances","handleEventModelIdChange","modelUniqueId","handleClickRefresh","state","handleEventModelRemoveChange","deletemodelname","handleClickRemove","removeEventModel","handleClickAdd","a","console","log","params","myInit","API","put","apiResponse","result","showAddMessage","errormessage","message","isFetching","isFetchingDetectors","options","detectorinstances","addmessagevisible","addmessagestring","addmessageresult","removemessageresult","removemessagestring","removemessagevisible","get","this","delay","showRemoveMessage","sort","key","order","b","hasOwnProperty","aVal","toUpperCase","bVal","comparison","makeComparator","detector","List","Item","Segment","Label","as","color","image","Icon","name","Detail","text","loadEvents","className","Grid","padded","centered","Column","width","Header","icon","textAlign","Image","src","Content","Subheader","basic","Group","Dropdown","placeholder","fluid","onChange","Input","Button","primary","onClick","Message","success","header","hidden","negative","horizontal","disabled","loading","defaultValue","circular","Items","secondary","Component","Boolean","window","location","hostname","match","Amplify","configure","awsExports","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a223506a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t482,\n\t\t4\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t483,\n\t\t9\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t484,\n\t\t13\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t485,\n\t\t10\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t486,\n\t\t18\n\t],\n\t\"./amplify-confirm-sign-in_8.entry.js\": [\n\t\t487,\n\t\t5\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t488,\n\t\t11\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t489,\n\t\t14\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t490,\n\t\t19\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t491,\n\t\t12\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t492,\n\t\t20\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t493,\n\t\t15\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t494,\n\t\t21\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t495,\n\t\t6\n\t],\n\t\"./amplify-radio-button_2.entry.js\": [\n\t\t496,\n\t\t7\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t497,\n\t\t8\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t498,\n\t\t16\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t499,\n\t\t22\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 451;\nmodule.exports = webpackAsyncContext;","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:f0e42c30-fcd7-4e05-a810-e0566f39f5fa\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_71UsD1skO\",\n    \"aws_user_pools_web_client_id\": \"23g6kk2a9k53ochc5le848gfrc\",\n    \"oauth\": {},\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"api75996003\",\n            \"endpoint\": \"https://9xu5b3oocg.execute-api.us-east-1.amazonaws.com/env\",\n            \"region\": \"us-east-1\"\n        }\n    ],\n    \"aws_content_delivery_bucket\": \"reactamplified-20200429081254-hostingbucket-env\",\n    \"aws_content_delivery_bucket_region\": \"us-east-1\",\n    \"aws_content_delivery_url\": \"https://d3niie3w5fztox.cloudfront.net\"\n};\n\n\nexport default awsmobile;\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Amplify, { API, graphqlOperation, Auth } from 'aws-amplify';\nimport './App.css';\nimport awsmobile from './aws-exports';\nimport { render } from \"react-dom\";\nimport { Bootstrap } from 'a-theme-react';\nimport delay from 'delay'\n\nimport { AmplifyAuthenticator, withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\n\nimport { Button, Input, List, Label, Icon, Form, Grid, Header, Image, Message, Segment, Dropdown } from 'semantic-ui-react'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isFetchingDetectors: false,\n      value: [],\n      options: [],\n      template: [],\n      modelname: \"\",\n      topic: \"\",\n      timeout: 0,\n      viewmodelname: [],\n      modelUniqueId: [],\n      detectorinstances: [],\n      deletemodelname: [],\n      addmessagevisible: false,\n      addmessagestring: \"\",\n      addmessageresult: true,\n      removemessageresult: true,\n      removemessagestring: \"\",\n      removemessagevisible: false\n    }\n  }\n  \n\n  handleChange = (e, { value }) => {\n  this.setState({value: value })\n  }\n  \n  handleTemplateChange = (e, { value }) => {\n  this.setState({ template: value })\n  }\n  \n  handleTopicChange = (e, { value }) => {\n  this.setState({ topic: value })\n  }\n  \n  handleModelNameChange = (e, { value }) => {\n  this.setState({ modelname: value})\n  }\n  \n  handleTimeoutChange = (e, { value }) => {\n  this.setState({ timeout: value })\n  }\n  \n  handleEventModelChange = (e, { value }) => {\n    this.setState({ viewmodelname: value})\n    this.loadDetectorInstances(value);\n  }\n  \n  handleEventModelIdChange = (e, { value }) => {\n  this.setState({ modelUniqueId: value})\n  }\n  \n  handleClickRefresh = (e, { value }) => {\n    this.loadDetectorInstances(this.state.viewmodelname);\n  }\n  \n  handleEventModelRemoveChange = (e, { value }) => {\n    this.setState({ deletemodelname: value})\n  }\n  \n  handleClickRemove = (e, { value }) => {\n    this.removeEventModel(this.state.deletemodelname);\n  }\n  \n  async loadEvents() {\n   const path = \"/iotevents/list\"; // you can specify the path\n    try{\n      const apiResponse = await API.get(\"api75996003\" , path);\n      this.setState({ options: apiResponse.options });\n      this.setState({isFetching: false});\n    }catch(err){\n      console.log(\"error calling api: \" + err);\n    }\n  }\n\n  async loadDetectorInstances(value) {\n  try{    \n    this.setState({isFetchingDetectors: true});\n   const path = \"/iotevents/detectors\"; // you can specify the path\n   const params = {\n      \"viewmodelname\": value\n   }\n   console.log(params);\n   const myInit = {\n    \"body\": params\n    };\n    const apiResponse = await API.put(\"api75996003\" , path, myInit);\n    this.setState({ detectorinstances: apiResponse.options });\n  }catch(err){\n    console.log(\"error calling loaddetectorinstances: \"+ err);\n  }\n    this.setState({isFetchingDetectors: false});\n\n  }\n\n  handleClickAdd = async ()  => {\n    try{\n    console.log(\"Adding now...\")\n     const path = \"/iotevents/add\"; // you can specify the path\n     console.log(this.state.topic)\n     const params = {\n        \"template\": this.state.template,\n        \"topic\":  this.state.topic,\n        \"timeout\":  this.state.timeout,\n        \"modelname\":  this.state.modelname\n     }\n     console.log(params);\n     const myInit = {\n      \"body\": params\n      };\n      const apiResponse = await API.put(\"api75996003\" , path, myInit);\n      console.log(apiResponse.result)\n      if(apiResponse.result == true){\n        this.showAddMessage(apiResponse.result, \"The Event Detector Model was created successfully\")\n      }\n      else{\n        this.showAddMessage(apiResponse.result, apiResponse.errormessage)\n      }\n      console.log('response:' + apiResponse);\n    }catch(err){\n      this.showAddMessage(false, err.message);  \n    }\n  }\n\n  async showAddMessage(result, message){\n    this.setState({addmessageresult: result});\n    this.setState({addmessagestring: message});\n    this.setState({addmessagevisible: true});\n    await delay(5000);\n    this.setState({addmessagevisible: false});\n  }\n  \n  async showRemoveMessage(result, message){\n    this.setState({removemessageresult: result});\n    this.setState({removemessagestring: message});\n    this.setState({removemessagevisible: true});\n    await delay(5000);\n    this.setState({removemessagevisible: false});\n  }\n  \n  async removeEventModel() {\n    try{\n      const path = \"/iotevents/delete\"; // you can specify the path\n     const params = {\n        \"modelname\": this.state.deletemodelname\n     }\n     console.log(params);\n     const myInit = {\n      \"body\": params\n      };\n    const apiResponse = await API.put(\"api75996003\" , path, myInit);\n    if(apiResponse.result == true){\n        this.showRemoveMessage(apiResponse.result, \"The Event Detector Model was deleted successfully\")\n      }\n      else{\n        this.showRemoveMessage(apiResponse.result, apiResponse.errormessage)\n      }\n    }catch(err){\n        this.showRemoveMessage(false, err.message);  \n    }\n  }\n  \n  Items() {\n    return this.state.detectorinstances.sort(makeComparator('key')).map(detector =>\n      <List.Item key={detector.key}>\n        <div>\n        <Segment>\n          <Label as='a' color='green' image>\n            <Icon name='eye'/>\n            {detector.key}\n            <Label.Detail>{detector.text}</Label.Detail>\n          </Label>\n        </Segment>\n        </div>\n      </List.Item>\n    );\n  }\n  \n  componentDidMount() {\n       this.loadEvents();\n  }\n\n  render() {\n    const {isFetching, isFetchingDetectors,  removemessageresult, removemessagestring, removemessagevisible, addmessageresult, addmessagestring, addmessagevisible, options, deletemodelname, value, viewmodelname, modelUniqueId, template, topic, modelname, timeout, detectorinstances } = this.state\n    \n    const templateOptions = [\n      {\n        key: 'Simple Alarm',\n        text: 'Simple Alarm',\n        value: 'Simple Alarm'\n      },\n      {\n        key: 'HVAC Temperature Control',\n        text: 'HVAC Temperature Control',\n        value: 'HVAC Temperature Control',\n      }\n    ]\n    return (\n      <AmplifyAuthenticator>\n        <div className=\"App\">\n        <Grid padded centered>\n          <Grid.Column width='10'>\n          <Header as='h1' icon textAlign='center'>\n            <Image src='./iotevents.png'  />\n            <Header.Content>IoT Events - Demo</Header.Content>\n          </Header>\n              <Segment>\n                <Header as='h3' textAlign='left'>\n                  <Icon name='plus circle' />\n                  <Header.Content>\n                    Create Event Model\n                    <Header.Subheader>Create a new IoT Event model</Header.Subheader>\n                  </Header.Content>\n                </Header>\n                <Segment basic>\n                  <Segment.Group>\n                    <Segment.Group>\n                    <Dropdown \n                      placeholder='Select Event Model template' \n                      fluid\n                      options={templateOptions}\n                      onChange={this.handleTemplateChange}\n                      />\n                    </Segment.Group>\n                    <Segment><Input fluid onChange={this.handleModelNameChange} placeholder=\"Event Model Name...\" /></Segment>\n                    <Segment><Input fluid onChange={this.handleTimeoutChange} placeholder=\"Alarm Timeout(s)...\" /></Segment>\n                    <Segment><Input fluid onChange={this.handleTopicChange} placeholder=\"Input Topic...\" /></Segment>\n                    <Segment><Button primary onClick={this.handleClickAdd}>Add Model</Button></Segment>\n                  </Segment.Group>\n                </Segment>\n                <Message\n                  success={addmessageresult}\n                  header={addmessagestring}\n                  hidden={!addmessagevisible}\n                  negative={!addmessageresult}\n                />\n              </Segment>\n              <Segment>\n                <Header as='h3' textAlign='left'>\n                  <Icon name='dashboard' />\n                  <Header.Content>\n                    Monitor Event Model\n                    <Header.Subheader>Select an IoT Event to monitor it's state</Header.Subheader>\n                  </Header.Content>\n                </Header>\n                <Segment basic>\n                  <Segment.Group>\n                    <Segment.Group horizontal>\n                    <Dropdown fluid placeholder='Select an Event Model' \n                        disabled={isFetching}\n                        loading={isFetching}\n                        options={options}\n                        defaultValue={viewmodelname}\n                        onChange={this.handleEventModelChange}\n                        />\n                      <Button circular icon='refresh' onClick={this.handleClickRefresh} color='black'>\n                      </Button>\n                    </Segment.Group>\n                    {this.Items()}\n                  </Segment.Group>\n                </Segment>\n              </Segment>\n              <Segment>\n                <Header as='h3' textAlign='left'>\n                  <Icon name='remove circle' />\n                  <Header.Content>\n                    Remove Event Models\n                    <Header.Subheader>Remove existing IoT Event models</Header.Subheader>\n                  </Header.Content>\n                </Header>\n                <Segment basic>\n                  <Segment.Group horizontal>\n                  <Dropdown fluid placeholder='Existing Event Models' \n                        disabled={isFetching}\n                        loading={isFetching}\n                        options={options}\n                        defaultValue={deletemodelname}\n                        onChange={this.handleEventModelRemoveChange}\n                        />\n                    <Button secondary onClick={this.handleClickRemove}>Remove</Button>\n                  </Segment.Group>\n                  <Message\n                    success={removemessageresult}\n                    header={removemessagestring}\n                    hidden={!removemessagevisible}\n                    negative={!removemessageresult}\n                  />\n                </Segment>\n              </Segment>\n            <AmplifySignOut />\n          </Grid.Column>\n        </Grid>\n      </div>\n    </AmplifyAuthenticator>\n    )\n  }\n}\n\nfunction makeComparator(key, order='asc') {\n  return (a, b) => {\n    if(!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return 0; \n\n    const aVal = (typeof a[key] === 'string') ? a[key].toUpperCase() : a[key];\n    const bVal = (typeof b[key] === 'string') ? b[key].toUpperCase() : b[key];\n\n    let comparison = 0;\n    if (aVal > bVal) comparison = 1;\n    if (aVal < bVal) comparison = -1;\n\n    return order === 'desc' ? (comparison * -1) : comparison\n  };\n}\n\nconst styles = {\n  container: { width: 500, margin: '0 auto', display: 'flex', flex: 1, flexDirection: 'column', justifyContent: 'center', padding: 20 },\n  todo: {  marginBottom: 15 },\n  input: { border: 'none', backgroundColor: '#ddd', marginBottom: 10, padding: 8, fontSize: 18 },\n  button: { backgroundColor: 'black', color: 'white', outline: 'none', fontSize: 18, padding: '12px 0px' }\n}\n\nexport default App\n//export default withAuthenticator(App, {  includeGreetings: true})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Amplify from \"aws-amplify\";\nimport awsExports from \"./aws-exports\";\nAmplify.configure(awsExports);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}