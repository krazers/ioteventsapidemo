{"version":3,"sources":["webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-greetings.entry.js","webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/auth-types-78df304e.js","webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/constants-206817b9.js","webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/helpers-5e56336b.js"],"names":["amplifyGreetingsCss","AmplifyGreetings","registerInstance","h","slot","handleAuthStateChange","AuthState","MfaOption","ChallengeName","AuthFormField","UsernameAlias","USERNAME_SUFFIX","EMAIL_SUFFIX","CODE_SUFFIX","PHONE_SUFFIX","PASSWORD_SUFFIX","COUNTRY_DIAL_CODE_SUFFIX","COUNTRY_DIAL_CODE_DEFAULT","AUTH_SOURCE_KEY","SIGNING_IN_WITH_HOSTEDUI_KEY","AUTHENTICATOR_AUTHSTATE","PHONE_EMPTY_ERROR_MESSAGE","NO_AUTH_MODULE_FOUND","SETUP_TOTP","USER_NOT_SETUP_SOFTWARE_TOKEN_MFA","USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA","SUCCESS","AUTH_CHANNEL","UI_AUTH_CHANNEL","TOAST_AUTH_ERROR_EVENT","AUTH_STATE_CHANGE_EVENT","hasShadowDom","el","dispatchToastHubEvent","Hub","event","message","error","dispatchAuthStateChangeEvent","data","composePhoneNumberInput","phoneNumber","sanitizedPhoneNumberValue","checkUsernameAlias","usernameAlias","Object"],"mappings":"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","file":"9.js","sourcesContent":["import { r as registerInstance, h } from './index-aae9287b.js';\nimport '@aws-amplify/core';\nimport './auth-types-78df304e.js';\nimport './constants-206817b9.js';\nimport { d as dispatchAuthStateChangeEvent } from './helpers-5e56336b.js';\nvar amplifyGreetingsCss = \":host{--background-color:var(--amplify-white);--border-color:var(--amplify-light-grey);--font-family:var(--amplify-font-family)}.greetings{position:relative;border:1px solid transparent;background-color:var(--background-color);border-color:var(--border-color);padding:10px;font-family:var(--font-family)}\";\nvar AmplifyGreetings = /** @class */ (function () {\n    function AmplifyGreetings(hostRef) {\n        registerInstance(this, hostRef);\n        /** Username displayed in the greetings */\n        this.username = null;\n        /** Logo displayed inside of the header */\n        this.logo = null;\n        /** Auth state change handler for this component */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n    }\n    AmplifyGreetings.prototype.render = function () {\n        return (h(\"header\", { class: \"greetings\" }, this.logo && h(\"span\", null, this.logo), h(\"amplify-nav\", null, this.username && h(\"span\", { slot: \"greetings-message\" }, \"Hello, \", this.username), h(\"amplify-sign-out\", { handleAuthStateChange: this.handleAuthStateChange }))));\n    };\n    return AmplifyGreetings;\n}());\nAmplifyGreetings.style = amplifyGreetingsCss;\nexport { AmplifyGreetings as amplify_greetings };\n","// TODO: Move these values to or extract them from the Cognito Provider in the Auth category for Auth V2\nvar AuthState;\n(function (AuthState) {\n    AuthState[\"SignUp\"] = \"signup\";\n    AuthState[\"SignOut\"] = \"signout\";\n    AuthState[\"SignIn\"] = \"signin\";\n    AuthState[\"Loading\"] = \"loading\";\n    AuthState[\"SignedOut\"] = \"signedout\";\n    AuthState[\"SignedIn\"] = \"signedin\";\n    AuthState[\"SigningUp\"] = \"signingup\";\n    AuthState[\"ConfirmSignUp\"] = \"confirmSignUp\";\n    AuthState[\"confirmingSignUpCustomFlow\"] = \"confirmsignupcustomflow\";\n    AuthState[\"ConfirmSignIn\"] = \"confirmSignIn\";\n    AuthState[\"confirmingSignInCustomFlow\"] = \"confirmingsignincustomflow\";\n    AuthState[\"VerifyingAttributes\"] = \"verifyingattributes\";\n    AuthState[\"ForgotPassword\"] = \"forgotpassword\";\n    AuthState[\"ResetPassword\"] = \"resettingpassword\";\n    AuthState[\"SettingMFA\"] = \"settingMFA\";\n    AuthState[\"TOTPSetup\"] = \"TOTPSetup\";\n    AuthState[\"CustomConfirmSignIn\"] = \"customConfirmSignIn\";\n    AuthState[\"VerifyContact\"] = \"verifyContact\";\n})(AuthState || (AuthState = {}));\nvar MfaOption;\n(function (MfaOption) {\n    MfaOption[\"TOTP\"] = \"TOTP\";\n    MfaOption[\"SMS\"] = \"SMS\";\n    MfaOption[\"NOMFA\"] = \"NOMFA\";\n})(MfaOption || (MfaOption = {}));\nvar ChallengeName;\n(function (ChallengeName) {\n    ChallengeName[\"SoftwareTokenMFA\"] = \"SOFTWARE_TOKEN_MFA\";\n    ChallengeName[\"SMSMFA\"] = \"SMS_MFA\";\n    ChallengeName[\"NewPasswordRequired\"] = \"NEW_PASSWORD_REQUIRED\";\n    ChallengeName[\"MFASetup\"] = \"MFA_SETUP\";\n    ChallengeName[\"CustomChallenge\"] = \"CUSTOM_CHALLENGE\";\n})(ChallengeName || (ChallengeName = {}));\nvar AuthFormField;\n(function (AuthFormField) {\n    AuthFormField[\"Password\"] = \"password\";\n})(AuthFormField || (AuthFormField = {}));\nvar UsernameAlias;\n(function (UsernameAlias) {\n    UsernameAlias[\"username\"] = \"username\";\n    UsernameAlias[\"email\"] = \"email\";\n    UsernameAlias[\"phone_number\"] = \"phone_number\";\n})(UsernameAlias || (UsernameAlias = {}));\nexport { AuthState as A, ChallengeName as C, MfaOption as M, UsernameAlias as U, AuthFormField as a };\n","// Dictionaries\n// fieldId constants\nvar USERNAME_SUFFIX = 'username';\nvar EMAIL_SUFFIX = 'email';\nvar CODE_SUFFIX = 'code';\nvar PHONE_SUFFIX = 'phone';\nvar PASSWORD_SUFFIX = 'password';\n// Country Dial Code common constants\nvar COUNTRY_DIAL_CODE_SUFFIX = 'country-dial-code-select';\nvar COUNTRY_DIAL_CODE_DEFAULT = '+1';\n// Auth Keys\nvar AUTH_SOURCE_KEY = 'amplify-auth-source';\nvar SIGNING_IN_WITH_HOSTEDUI_KEY = 'amplify-signin-with-hostedUI';\nvar AUTHENTICATOR_AUTHSTATE = 'amplify-authenticator-authState';\n// Error message Common Constants\nvar PHONE_EMPTY_ERROR_MESSAGE = 'Phone number can not be empty';\nvar NO_AUTH_MODULE_FOUND = 'No Auth module found, please ensure @aws-amplify/auth is imported';\n// TOTP Messages\nvar SETUP_TOTP = 'SETUP_TOTP';\n// Select MFA Types Messages\nvar USER_NOT_SETUP_SOFTWARE_TOKEN_MFA = 'User has not set up software token mfa';\nvar USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA = 'User has not verified software token mfa';\n// Common events\nvar SUCCESS = 'SUCCESS';\n// Hub Events and Channels\nvar AUTH_CHANNEL = 'auth';\nvar UI_AUTH_CHANNEL = 'UI Auth';\nvar TOAST_AUTH_ERROR_EVENT = 'ToastAuthError';\nvar AUTH_STATE_CHANGE_EVENT = 'AuthStateChange';\nexport { AUTH_CHANNEL as A, COUNTRY_DIAL_CODE_DEFAULT as C, EMAIL_SUFFIX as E, NO_AUTH_MODULE_FOUND as N, PHONE_EMPTY_ERROR_MESSAGE as P, SIGNING_IN_WITH_HOSTEDUI_KEY as S, TOAST_AUTH_ERROR_EVENT as T, UI_AUTH_CHANNEL as U, AUTH_STATE_CHANGE_EVENT as a, AUTHENTICATOR_AUTHSTATE as b, USER_NOT_SETUP_SOFTWARE_TOKEN_MFA as c, USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA as d, COUNTRY_DIAL_CODE_SUFFIX as e, PHONE_SUFFIX as f, SETUP_TOTP as g, SUCCESS as h, AUTH_SOURCE_KEY as i, CODE_SUFFIX as j, PASSWORD_SUFFIX as k, USERNAME_SUFFIX as l };\n","import { Hub } from '@aws-amplify/core';\nimport { U as UsernameAlias } from './auth-types-78df304e.js';\nimport { U as UI_AUTH_CHANNEL, T as TOAST_AUTH_ERROR_EVENT, a as AUTH_STATE_CHANGE_EVENT, P as PHONE_EMPTY_ERROR_MESSAGE } from './constants-206817b9.js';\nvar hasShadowDom = function (el) {\n    return !!el.shadowRoot && !!el.attachShadow;\n};\nvar dispatchToastHubEvent = function (error) {\n    Hub.dispatch(UI_AUTH_CHANNEL, {\n        event: TOAST_AUTH_ERROR_EVENT,\n        message: error.message,\n    });\n};\nvar dispatchAuthStateChangeEvent = function (nextAuthState, data) {\n    Hub.dispatch(UI_AUTH_CHANNEL, {\n        event: AUTH_STATE_CHANGE_EVENT,\n        message: nextAuthState,\n        data: data,\n    });\n};\nvar composePhoneNumberInput = function (phoneNumber) {\n    if (!phoneNumber.phoneNumberValue) {\n        throw new Error(PHONE_EMPTY_ERROR_MESSAGE);\n    }\n    var sanitizedPhoneNumberValue = phoneNumber.phoneNumberValue.replace(/[-()\\s]/g, '');\n    return \"\" + phoneNumber.countryDialCodeValue + sanitizedPhoneNumberValue;\n};\nvar checkUsernameAlias = function (usernameAlias) {\n    if (!(usernameAlias in UsernameAlias)) {\n        throw new Error(\"Invalid username Alias - \" + usernameAlias + \". Instead use \" + Object.values(UsernameAlias));\n    }\n};\nexport { dispatchToastHubEvent as a, composePhoneNumberInput as b, checkUsernameAlias as c, dispatchAuthStateChangeEvent as d, hasShadowDom as h };\n"],"sourceRoot":""}