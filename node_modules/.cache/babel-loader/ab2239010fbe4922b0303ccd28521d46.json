{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nvar NAMESPACE = 'amplify-ui-components';\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar queueCongestion = 0;\nvar queuePending = false;\nvar win = typeof window !== 'undefined' ? window : {};\nvar CSS = win.CSS;\nvar doc = win.document || {\n  head: {}\n};\nvar plt = {\n  $flags$: 0,\n  $resourcesUrl$: '',\n  jmp: function jmp(h) {\n    return h();\n  },\n  raf: function raf(h) {\n    return requestAnimationFrame(h);\n  },\n  ael: function ael(el, eventName, listener, opts) {\n    return el.addEventListener(eventName, listener, opts);\n  },\n  rel: function rel(el, eventName, listener, opts) {\n    return el.removeEventListener(eventName, listener, opts);\n  }\n};\n\nvar supportsShadow = /*@__PURE__*/function () {\n  return (doc.head.attachShadow + '').indexOf('[native') > -1;\n}();\n\nvar promiseResolve = function promiseResolve(v) {\n  return Promise.resolve(v);\n};\n\nvar supportsConstructibleStylesheets = /*@__PURE__*/function () {\n  try {\n    new CSSStyleSheet();\n    return true;\n  } catch (e) {}\n\n  return false;\n}();\n\nvar addHostEventListeners = function addHostEventListeners(elm, hostRef, listeners, attachParentListeners) {\n  if (listeners) {\n    listeners.map(function (_a) {\n      var flags = _a[0],\n          name = _a[1],\n          method = _a[2];\n      var target = elm;\n      var handler = hostListenerProxy(hostRef, method);\n      var opts = hostListenerOpts(flags);\n      plt.ael(target, name, handler, opts);\n      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(function () {\n        return plt.rel(target, name, handler, opts);\n      });\n    });\n  }\n};\n\nvar hostListenerProxy = function hostListenerProxy(hostRef, methodName) {\n  return function (ev) {\n    {\n      if (hostRef.$flags$ & 256\n      /* isListenReady */\n      ) {\n          // instance is ready, let's call it's member method for this event\n          hostRef.$lazyInstance$[methodName](ev);\n        } else {\n        (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n      }\n    }\n  };\n}; // prettier-ignore\n\n\nvar hostListenerOpts = function hostListenerOpts(flags) {\n  return (flags & 2\n  /* Capture */\n  ) !== 0;\n};\n\nvar HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\nvar XLINK_NS = 'http://www.w3.org/1999/xlink';\n\nvar createTime = function createTime(fnName, tagName) {\n  if (tagName === void 0) {\n    tagName = '';\n  }\n\n  {\n    return function () {\n      return;\n    };\n  }\n};\n\nvar uniqueTime = function uniqueTime(key, measureText) {\n  {\n    return function () {\n      return;\n    };\n  }\n};\n\nvar rootAppliedStyles = new WeakMap();\n\nvar registerStyle = function registerStyle(scopeId, cssText, allowCS) {\n  var style = styles.get(scopeId);\n\n  if (supportsConstructibleStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    style.replace(cssText);\n  } else {\n    style = cssText;\n  }\n\n  styles.set(scopeId, style);\n};\n\nvar addStyle = function addStyle(styleContainerNode, cmpMeta, mode, hostElm) {\n  var scopeId = getScopeId(cmpMeta.$tagName$);\n  var style = styles.get(scopeId); // if an element is NOT connected then getRootNode() will return the wrong root node\n  // so the fallback is to always use the document for the root node in those cases\n\n  styleContainerNode = styleContainerNode.nodeType === 11\n  /* DocumentFragment */\n  ? styleContainerNode : doc;\n\n  if (style) {\n    if (typeof style === 'string') {\n      styleContainerNode = styleContainerNode.head || styleContainerNode;\n      var appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      var styleElm = void 0;\n\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = new Set());\n      }\n\n      if (!appliedStyles.has(scopeId)) {\n        {\n          if (plt.$cssShim$) {\n            styleElm = plt.$cssShim$.createHostStyle(hostElm, scopeId, style, !!(cmpMeta.$flags$ & 10\n            /* needsScopedEncapsulation */\n            ));\n            var newScopeId = styleElm['s-sc'];\n\n            if (newScopeId) {\n              scopeId = newScopeId; // we don't want to add this styleID to the appliedStyles Set\n              // since the cssVarShim might need to apply several different\n              // stylesheets for the same component\n\n              appliedStyles = null;\n            }\n          } else {\n            styleElm = doc.createElement('style');\n            styleElm.innerHTML = style;\n          }\n\n          styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n        }\n\n        if (appliedStyles) {\n          appliedStyles.add(scopeId);\n        }\n      }\n    } else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n      styleContainerNode.adoptedStyleSheets = __spreadArrays(styleContainerNode.adoptedStyleSheets, [style]);\n    }\n  }\n\n  return scopeId;\n};\n\nvar attachStyles = function attachStyles(hostRef) {\n  var cmpMeta = hostRef.$cmpMeta$;\n  var elm = hostRef.$hostElement$;\n  var flags = cmpMeta.$flags$;\n  var endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n  var scopeId = addStyle(supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, hostRef.$modeName$, elm);\n\n  if (flags & 10\n  /* needsScopedEncapsulation */\n  ) {\n      // only required when we're NOT using native shadow dom (slot)\n      // or this browser doesn't support native shadow dom\n      // and this host element was NOT created with SSR\n      // let's pick out the inner content for slot projection\n      // create a node to represent where the original\n      // content was first placed, which is useful later on\n      // DOM WRITE!!\n      elm['s-sc'] = scopeId;\n      elm.classList.add(scopeId + '-h');\n\n      if (flags & 2\n      /* scopedCssEncapsulation */\n      ) {\n          elm.classList.add(scopeId + '-s');\n        }\n    }\n\n  endAttachStyles();\n};\n\nvar getScopeId = function getScopeId(tagName, mode) {\n  return 'sc-' + tagName;\n};\n/**\n * Default style mode id\n */\n\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\n\n\nvar EMPTY_OBJ = {};\n/**\n * Namespaces\n */\n\nvar SVG_NS = 'http://www.w3.org/2000/svg';\nvar HTML_NS = 'http://www.w3.org/1999/xhtml';\n\nvar isDef = function isDef(v) {\n  return v != null;\n};\n\nvar isComplexType = function isComplexType(o) {\n  // https://jsperf.com/typeof-fn-object/5\n  o = typeof o;\n  return o === 'object' || o === 'function';\n};\n\nvar getDynamicImportFunction = function getDynamicImportFunction(namespace) {\n  return \"__sc_import_\" + namespace.replace(/\\s|-/g, '_');\n};\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\n\n\nvar h = function h(nodeName, vnodeData) {\n  var children = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    children[_i - 2] = arguments[_i];\n  }\n\n  var child = null;\n  var key = null;\n  var slotName = null;\n  var simple = false;\n  var lastSimple = false;\n  var vNodeChildren = [];\n\n  var walk = function walk(c) {\n    for (var i = 0; i < c.length; i++) {\n      child = c[i];\n\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== 'boolean') {\n        if (simple = typeof nodeName !== 'function' && !isComplexType(child)) {\n          child = String(child);\n        }\n\n        if (simple && lastSimple) {\n          // If the previous child was simple (string), we merge both\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          // Append a new vNode, if it's text, we create a text vNode\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n\n        lastSimple = simple;\n      }\n    }\n  };\n\n  walk(children);\n\n  if (vnodeData) {\n    // normalize class / classname attributes\n    if (vnodeData.key) {\n      key = vnodeData.key;\n    }\n\n    if (vnodeData.name) {\n      slotName = vnodeData.name;\n    }\n\n    {\n      var classData_1 = vnodeData.className || vnodeData.class;\n\n      if (classData_1) {\n        vnodeData.class = typeof classData_1 !== 'object' ? classData_1 : Object.keys(classData_1).filter(function (k) {\n          return classData_1[k];\n        }).join(' ');\n      }\n    }\n  }\n\n  var vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n\n  {\n    vnode.$key$ = key;\n  }\n  {\n    vnode.$name$ = slotName;\n  }\n  return vnode;\n};\n\nvar newVNode = function newVNode(tag, text) {\n  var vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  {\n    vnode.$attrs$ = null;\n  }\n  {\n    vnode.$key$ = null;\n  }\n  {\n    vnode.$name$ = null;\n  }\n  return vnode;\n};\n\nvar Host = {};\n\nvar isHost = function isHost(node) {\n  return node && node.$tag$ === Host;\n};\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n\n\nvar setAccessor = function setAccessor(elm, memberName, oldValue, newValue, isSvg, flags) {\n  if (oldValue !== newValue) {\n    var isProp = isMemberInElement(elm, memberName);\n    var ln = memberName.toLowerCase();\n\n    if (memberName === 'class') {\n      var classList = elm.classList;\n      var oldClasses_1 = parseClassList(oldValue);\n      var newClasses_1 = parseClassList(newValue);\n      classList.remove.apply(classList, oldClasses_1.filter(function (c) {\n        return c && !newClasses_1.includes(c);\n      }));\n      classList.add.apply(classList, newClasses_1.filter(function (c) {\n        return c && !oldClasses_1.includes(c);\n      }));\n    } else if (memberName === 'style') {\n      // update style attribute, css properties and values\n      {\n        for (var prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (prop.includes('-')) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = '';\n            }\n          }\n        }\n      }\n\n      for (var prop in newValue) {\n        if (!oldValue || newValue[prop] !== oldValue[prop]) {\n          if (prop.includes('-')) {\n            elm.style.setProperty(prop, newValue[prop]);\n          } else {\n            elm.style[prop] = newValue[prop];\n          }\n        }\n      }\n    } else if (memberName === 'key') ;else if (memberName === 'ref') {\n      // minifier will clean this up\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (!isProp && memberName[0] === 'o' && memberName[1] === 'n') {\n      // Event Handlers\n      // so if the member name starts with \"on\" and the 3rd characters is\n      // a capital letter, and it's not already a member on the element,\n      // then we're assuming it's an event listener\n      if (memberName[2] === '-') {\n        // on- prefixed events\n        // allows to be explicit about the dom event to listen without any magic\n        // under the hood:\n        // <my-cmp on-click> // listens for \"click\"\n        // <my-cmp on-Click> // listens for \"Click\"\n        // <my-cmp on-ionChange> // listens for \"ionChange\"\n        // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        // standard event\n        // the JSX attribute could have been \"onMouseOver\" and the\n        // member name \"onmouseover\" is on the window's prototype\n        // so let's add the listener \"mouseover\", which is all lowercased\n        memberName = ln.slice(2);\n      } else {\n        // custom event\n        // the JSX attribute could have been \"onMyCustomEvent\"\n        // so let's trim off the \"on\" prefix and lowercase the first character\n        // and add the listener \"myCustomEvent\"\n        // except for the first character, we keep the event name case\n        memberName = ln[2] + memberName.slice(3);\n      }\n\n      if (oldValue) {\n        plt.rel(elm, memberName, oldValue, false);\n      }\n\n      if (newValue) {\n        plt.ael(elm, memberName, newValue, false);\n      }\n    } else {\n      // Set property if it exists and it's not a SVG\n      var isComplex = isComplexType(newValue);\n\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes('-')) {\n            var n = newValue == null ? '' : newValue; // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n\n            if (memberName === 'list') {\n              isProp = false; // tslint:disable-next-line: triple-equals\n            } else if (oldValue == null || elm[memberName] != n) {\n              elm[memberName] = n;\n            }\n          } else {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {}\n      }\n      /**\n       * Need to manually update attribute if:\n       * - memberName is not an attribute\n       * - if we are rendering the host element in order to reflect attribute\n       * - if it's a SVG, since properties might not work in <svg>\n       * - if the newValue is null/undefined or 'false'.\n       */\n\n\n      var xlink = false;\n      {\n        if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n          memberName = ln;\n          xlink = true;\n        }\n      }\n\n      if (newValue == null || newValue === false) {\n        if (xlink) {\n          elm.removeAttributeNS(XLINK_NS, memberName);\n        } else {\n          elm.removeAttribute(memberName);\n        }\n      } else if ((!isProp || flags & 4\n      /* isHost */\n      || isSvg) && !isComplex) {\n        newValue = newValue === true ? '' : newValue;\n\n        if (xlink) {\n          elm.setAttributeNS(XLINK_NS, memberName, newValue);\n        } else {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\n\nvar parseClassListRegex = /\\s/;\n\nvar parseClassList = function parseClassList(value) {\n  return !value ? [] : value.split(parseClassListRegex);\n};\n\nvar updateElement = function updateElement(oldVnode, newVnode, isSvgMode, memberName) {\n  // if the element passed in is a shadow root, which is a document fragment\n  // then we want to be adding attrs/props to the shadow root's \"host\" element\n  // if it's not a shadow root, then we add attrs/props to the same element\n  var elm = newVnode.$elm$.nodeType === 11\n  /* DocumentFragment */\n  && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  var oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || EMPTY_OBJ;\n  var newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n  {\n    // remove attributes no longer present on the vnode by setting them to undefined\n    for (memberName in oldVnodeAttrs) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n      }\n    }\n  } // add new & update changed attributes\n\n  for (memberName in newVnodeAttrs) {\n    setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n  }\n};\n\nvar createElm = function createElm(oldParentVNode, newParentVNode, childIndex, parentElm) {\n  // tslint:disable-next-line: prefer-const\n  var newVNode = newParentVNode.$children$[childIndex];\n  var i = 0;\n  var elm;\n  var childNode;\n  var oldVNode;\n\n  if (!useNativeShadowDom) {\n    // remember for later we need to check to relocate nodes\n    checkSlotRelocate = true;\n\n    if (newVNode.$tag$ === 'slot') {\n      if (scopeId) {\n        // scoped css needs to add its scoped id to the parent element\n        parentElm.classList.add(scopeId + '-s');\n      }\n\n      newVNode.$flags$ |= newVNode.$children$ ? // slot element has fallback content\n      2\n      /* isSlotFallback */\n      : // slot element does not have fallback content\n      1\n      /* isSlotReference */\n      ;\n    }\n  }\n\n  if (newVNode.$text$ !== null) {\n    // create text node\n    elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n  } else if (newVNode.$flags$ & 1\n  /* isSlotReference */\n  ) {\n      // create a slot reference node\n      elm = newVNode.$elm$ = doc.createTextNode('');\n    } else {\n    if (!isSvgMode) {\n      isSvgMode = newVNode.$tag$ === 'svg';\n    } // create element\n\n\n    elm = newVNode.$elm$ = doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, newVNode.$flags$ & 2\n    /* isSlotFallback */\n    ? 'slot-fb' : newVNode.$tag$);\n\n    if (isSvgMode && newVNode.$tag$ === 'foreignObject') {\n      isSvgMode = false;\n    } // add css classes, attrs, props, listeners, etc.\n\n\n    {\n      updateElement(null, newVNode, isSvgMode);\n    }\n\n    if (isDef(scopeId) && elm['s-si'] !== scopeId) {\n      // if there is a scopeId and this is the initial render\n      // then let's add the scopeId as a css class\n      elm.classList.add(elm['s-si'] = scopeId);\n    }\n\n    if (newVNode.$children$) {\n      for (i = 0; i < newVNode.$children$.length; ++i) {\n        // create the node\n        childNode = createElm(oldParentVNode, newVNode, i, elm); // return node could have been null\n\n        if (childNode) {\n          // append our new node\n          elm.appendChild(childNode);\n        }\n      }\n    }\n\n    {\n      if (newVNode.$tag$ === 'svg') {\n        // Only reset the SVG context when we're exiting <svg> element\n        isSvgMode = false;\n      } else if (elm.tagName === 'foreignObject') {\n        // Reenter SVG context when we're exiting <foreignObject> element\n        isSvgMode = true;\n      }\n    }\n  }\n\n  {\n    elm['s-hn'] = hostTagName;\n\n    if (newVNode.$flags$ & (2\n    /* isSlotFallback */\n    | 1\n    /* isSlotReference */\n    )) {\n      // remember the content reference comment\n      elm['s-sr'] = true; // remember the content reference comment\n\n      elm['s-cr'] = contentRef; // remember the slot name, or empty string for default slot\n\n      elm['s-sn'] = newVNode.$name$ || ''; // check if we've got an old vnode for this slot\n\n      oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n\n      if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {\n        // we've got an old slot vnode and the wrapper is being replaced\n        // so let's move the old slot content back to it's original location\n        putBackInOriginalLocation(oldParentVNode.$elm$, false);\n      }\n    }\n  }\n  return elm;\n};\n\nvar putBackInOriginalLocation = function putBackInOriginalLocation(parentElm, recursive) {\n  plt.$flags$ |= 1\n  /* isTmpDisconnected */\n  ;\n  var oldSlotChildNodes = parentElm.childNodes;\n\n  for (var i = oldSlotChildNodes.length - 1; i >= 0; i--) {\n    var childNode = oldSlotChildNodes[i];\n\n    if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {\n      // // this child node in the old element is from another component\n      // // remove this node from the old slot's parent\n      // childNode.remove();\n      // and relocate it back to it's original location\n      parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode)); // remove the old original location comment entirely\n      // later on the patch function will know what to do\n      // and move this to the correct spot in need be\n\n      childNode['s-ol'].remove();\n      childNode['s-ol'] = undefined;\n      checkSlotRelocate = true;\n    }\n\n    if (recursive) {\n      putBackInOriginalLocation(childNode, recursive);\n    }\n  }\n\n  plt.$flags$ &= ~1\n  /* isTmpDisconnected */\n  ;\n};\n\nvar addVnodes = function addVnodes(parentElm, before, parentVNode, vnodes, startIdx, endIdx) {\n  var containerElm = parentElm['s-cr'] && parentElm['s-cr'].parentNode || parentElm;\n  var childNode;\n\n  if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx, parentElm);\n\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        containerElm.insertBefore(childNode, referenceNode(before));\n      }\n    }\n  }\n};\n\nvar removeVnodes = function removeVnodes(vnodes, startIdx, endIdx, vnode, elm) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnode = vnodes[startIdx]) {\n      elm = vnode.$elm$;\n      callNodeRefs(vnode);\n      {\n        // we're removing this element\n        // so it's possible we need to show slot fallback content now\n        checkSlotFallbackVisibility = true;\n\n        if (elm['s-ol']) {\n          // remove the original location comment\n          elm['s-ol'].remove();\n        } else {\n          // it's possible that child nodes of the node\n          // that's being removed are slot nodes\n          putBackInOriginalLocation(elm, true);\n        }\n      } // remove the vnode's element from the dom\n\n      elm.remove();\n    }\n  }\n};\n\nvar updateChildren = function updateChildren(parentElm, oldCh, newVNode, newCh) {\n  var oldStartIdx = 0;\n  var newStartIdx = 0;\n  var idxInOld = 0;\n  var i = 0;\n  var oldEndIdx = oldCh.length - 1;\n  var oldStartVnode = oldCh[0];\n  var oldEndVnode = oldCh[oldEndIdx];\n  var newEndIdx = newCh.length - 1;\n  var newStartVnode = newCh[0];\n  var newEndVnode = newCh[newEndIdx];\n  var node;\n  var elmToMove;\n\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      // Vnode might have been moved left\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode)) {\n      patch(oldStartVnode, newStartVnode);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n      patch(oldEndVnode, newEndVnode);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode)) {\n      // Vnode moved right\n      if (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot') {\n        putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n      }\n\n      patch(oldStartVnode, newEndVnode);\n      parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n      // Vnode moved left\n      if (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot') {\n        putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n      }\n\n      patch(oldEndVnode, newStartVnode);\n      parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      // createKeyToOldIdx\n      idxInOld = -1;\n      {\n        for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n          if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n            idxInOld = i;\n            break;\n          }\n        }\n      }\n\n      if (idxInOld >= 0) {\n        elmToMove = oldCh[idxInOld];\n\n        if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n          node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld, parentElm);\n        } else {\n          patch(elmToMove, newStartVnode);\n          oldCh[idxInOld] = undefined;\n          node = elmToMove.$elm$;\n        }\n\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        // new element\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);\n        newStartVnode = newCh[++newStartIdx];\n      }\n\n      if (node) {\n        {\n          parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n        }\n      }\n    }\n  }\n\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n  } else if (newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\n\nvar isSameVnode = function isSameVnode(vnode1, vnode2) {\n  // compare if two vnode to see if they're \"technically\" the same\n  // need to have the same element tag, and same key to be the same\n  if (vnode1.$tag$ === vnode2.$tag$) {\n    if (vnode1.$tag$ === 'slot') {\n      return vnode1.$name$ === vnode2.$name$;\n    }\n\n    {\n      return vnode1.$key$ === vnode2.$key$;\n    }\n  }\n\n  return false;\n};\n\nvar referenceNode = function referenceNode(node) {\n  // this node was relocated to a new location in the dom\n  // because of some other component's slot\n  // but we still have an html comment in place of where\n  // it's original location was according to it's original vdom\n  return node && node['s-ol'] || node;\n};\n\nvar parentReferenceNode = function parentReferenceNode(node) {\n  return (node['s-ol'] ? node['s-ol'] : node).parentNode;\n};\n\nvar patch = function patch(oldVNode, newVNode) {\n  var elm = newVNode.$elm$ = oldVNode.$elm$;\n  var oldChildren = oldVNode.$children$;\n  var newChildren = newVNode.$children$;\n  var tag = newVNode.$tag$;\n  var text = newVNode.$text$;\n  var defaultHolder;\n\n  if (text === null) {\n    {\n      // test if we're rendering an svg element, or still rendering nodes inside of one\n      // only add this to the when the compiler sees we're using an svg somewhere\n      isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n    } // element node\n\n    {\n      if (tag === 'slot') ;else {\n        // either this is the first render of an element OR it's an update\n        // AND we already know it's possible it could have changed\n        // this updates the element's css classes, attrs, props, listeners, etc.\n        updateElement(oldVNode, newVNode, isSvgMode);\n      }\n    }\n\n    if (oldChildren !== null && newChildren !== null) {\n      // looks like there's child vnodes for both the old and new vnodes\n      updateChildren(elm, oldChildren, newVNode, newChildren);\n    } else if (newChildren !== null) {\n      // no old child vnodes, but there are new child vnodes to add\n      if (oldVNode.$text$ !== null) {\n        // the old vnode was text, so be sure to clear it out\n        elm.textContent = '';\n      } // add the new vnode children\n\n\n      addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n    } else if (oldChildren !== null) {\n      // no new child vnodes, but there are old child vnodes to remove\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n\n    if (isSvgMode && tag === 'svg') {\n      isSvgMode = false;\n    }\n  } else if (defaultHolder = elm['s-cr']) {\n    // this element has slotted content\n    defaultHolder.parentNode.textContent = text;\n  } else if (oldVNode.$text$ !== text) {\n    // update the text content for the text only vnode\n    // and also only if the text is different than before\n    elm.data = text;\n  }\n};\n\nvar updateFallbackSlotVisibility = function updateFallbackSlotVisibility(elm) {\n  // tslint:disable-next-line: prefer-const\n  var childNodes = elm.childNodes;\n  var childNode;\n  var i;\n  var ilen;\n  var j;\n  var slotNameAttr;\n  var nodeType;\n\n  for (i = 0, ilen = childNodes.length; i < ilen; i++) {\n    childNode = childNodes[i];\n\n    if (childNode.nodeType === 1\n    /* ElementNode */\n    ) {\n        if (childNode['s-sr']) {\n          // this is a slot fallback node\n          // get the slot name for this slot reference node\n          slotNameAttr = childNode['s-sn']; // by default always show a fallback slot node\n          // then hide it if there are other slots in the light dom\n\n          childNode.hidden = false;\n\n          for (j = 0; j < ilen; j++) {\n            if (childNodes[j]['s-hn'] !== childNode['s-hn']) {\n              // this sibling node is from a different component\n              nodeType = childNodes[j].nodeType;\n\n              if (slotNameAttr !== '') {\n                // this is a named fallback slot node\n                if (nodeType === 1\n                /* ElementNode */\n                && slotNameAttr === childNodes[j].getAttribute('slot')) {\n                  childNode.hidden = true;\n                  break;\n                }\n              } else {\n                // this is a default fallback slot node\n                // any element or text node (with content)\n                // should hide the default fallback slot node\n                if (nodeType === 1\n                /* ElementNode */\n                || nodeType === 3\n                /* TextNode */\n                && childNodes[j].textContent.trim() !== '') {\n                  childNode.hidden = true;\n                  break;\n                }\n              }\n            }\n          }\n        } // keep drilling down\n\n\n        updateFallbackSlotVisibility(childNode);\n      }\n  }\n};\n\nvar relocateNodes = [];\n\nvar relocateSlotContent = function relocateSlotContent(elm) {\n  // tslint:disable-next-line: prefer-const\n  var childNode;\n  var node;\n  var hostContentNodes;\n  var slotNameAttr;\n  var relocateNodeData;\n  var j;\n  var i = 0;\n  var childNodes = elm.childNodes;\n  var ilen = childNodes.length;\n\n  for (; i < ilen; i++) {\n    childNode = childNodes[i];\n\n    if (childNode['s-sr'] && (node = childNode['s-cr'])) {\n      // first got the content reference comment node\n      // then we got it's parent, which is where all the host content is in now\n      hostContentNodes = node.parentNode.childNodes;\n      slotNameAttr = childNode['s-sn'];\n\n      for (j = hostContentNodes.length - 1; j >= 0; j--) {\n        node = hostContentNodes[j];\n\n        if (!node['s-cn'] && !node['s-nr'] && node['s-hn'] !== childNode['s-hn']) {\n          // let's do some relocating to its new home\n          // but never relocate a content reference node\n          // that is suppose to always represent the original content location\n          if (isNodeLocatedInSlot(node, slotNameAttr)) {\n            // it's possible we've already decided to relocate this node\n            relocateNodeData = relocateNodes.find(function (r) {\n              return r.$nodeToRelocate$ === node;\n            }); // made some changes to slots\n            // let's make sure we also double check\n            // fallbacks are correctly hidden or shown\n\n            checkSlotFallbackVisibility = true;\n            node['s-sn'] = node['s-sn'] || slotNameAttr;\n\n            if (relocateNodeData) {\n              // previously we never found a slot home for this node\n              // but turns out we did, so let's remember it now\n              relocateNodeData.$slotRefNode$ = childNode;\n            } else {\n              // add to our list of nodes to relocate\n              relocateNodes.push({\n                $slotRefNode$: childNode,\n                $nodeToRelocate$: node\n              });\n            }\n\n            if (node['s-sr']) {\n              relocateNodes.map(function (relocateNode) {\n                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {\n                  relocateNodeData = relocateNodes.find(function (r) {\n                    return r.$nodeToRelocate$ === node;\n                  });\n\n                  if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                    relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                  }\n                }\n              });\n            }\n          } else if (!relocateNodes.some(function (r) {\n            return r.$nodeToRelocate$ === node;\n          })) {\n            // so far this element does not have a slot home, not setting slotRefNode on purpose\n            // if we never find a home for this element then we'll need to hide it\n            relocateNodes.push({\n              $nodeToRelocate$: node\n            });\n          }\n        }\n      }\n    }\n\n    if (childNode.nodeType === 1\n    /* ElementNode */\n    ) {\n        relocateSlotContent(childNode);\n      }\n  }\n};\n\nvar isNodeLocatedInSlot = function isNodeLocatedInSlot(nodeToRelocate, slotNameAttr) {\n  if (nodeToRelocate.nodeType === 1\n  /* ElementNode */\n  ) {\n      if (nodeToRelocate.getAttribute('slot') === null && slotNameAttr === '') {\n        return true;\n      }\n\n      if (nodeToRelocate.getAttribute('slot') === slotNameAttr) {\n        return true;\n      }\n\n      return false;\n    }\n\n  if (nodeToRelocate['s-sn'] === slotNameAttr) {\n    return true;\n  }\n\n  return slotNameAttr === '';\n};\n\nvar callNodeRefs = function callNodeRefs(vNode) {\n  {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.map(callNodeRefs);\n  }\n};\n\nvar renderVdom = function renderVdom(hostRef, renderFnResults) {\n  var hostElm = hostRef.$hostElement$;\n  var cmpMeta = hostRef.$cmpMeta$;\n  var oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  var rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  hostTagName = hostElm.tagName;\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4\n  /* isHost */\n  ;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = hostElm.shadowRoot || hostElm;\n  {\n    scopeId = hostElm['s-sc'];\n  }\n  {\n    contentRef = hostElm['s-cr'];\n    useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1\n    /* shadowDomEncapsulation */\n    ) !== 0; // always reset\n\n    checkSlotFallbackVisibility = false;\n  } // synchronous patch\n\n  patch(oldVNode, rootVnode);\n  {\n    // while we're moving nodes around existing nodes, temporarily disable\n    // the disconnectCallback from working\n    plt.$flags$ |= 1\n    /* isTmpDisconnected */\n    ;\n\n    if (checkSlotRelocate) {\n      relocateSlotContent(rootVnode.$elm$);\n      var relocateData = void 0;\n      var nodeToRelocate = void 0;\n      var orgLocationNode = void 0;\n      var parentNodeRef = void 0;\n      var insertBeforeNode = void 0;\n      var refNode = void 0;\n      var i = 0;\n\n      for (; i < relocateNodes.length; i++) {\n        relocateData = relocateNodes[i];\n        nodeToRelocate = relocateData.$nodeToRelocate$;\n\n        if (!nodeToRelocate['s-ol']) {\n          // add a reference node marking this node's original location\n          // keep a reference to this node for later lookups\n          orgLocationNode = doc.createTextNode('');\n          orgLocationNode['s-nr'] = nodeToRelocate;\n          nodeToRelocate.parentNode.insertBefore(nodeToRelocate['s-ol'] = orgLocationNode, nodeToRelocate);\n        }\n      }\n\n      for (i = 0; i < relocateNodes.length; i++) {\n        relocateData = relocateNodes[i];\n        nodeToRelocate = relocateData.$nodeToRelocate$;\n\n        if (relocateData.$slotRefNode$) {\n          // by default we're just going to insert it directly\n          // after the slot reference node\n          parentNodeRef = relocateData.$slotRefNode$.parentNode;\n          insertBeforeNode = relocateData.$slotRefNode$.nextSibling;\n          orgLocationNode = nodeToRelocate['s-ol'];\n\n          while (orgLocationNode = orgLocationNode.previousSibling) {\n            refNode = orgLocationNode['s-nr'];\n\n            if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {\n              refNode = refNode.nextSibling;\n\n              if (!refNode || !refNode['s-nr']) {\n                insertBeforeNode = refNode;\n                break;\n              }\n            }\n          }\n\n          if (!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode || nodeToRelocate.nextSibling !== insertBeforeNode) {\n            // we've checked that it's worth while to relocate\n            // since that the node to relocate\n            // has a different next sibling or parent relocated\n            if (nodeToRelocate !== insertBeforeNode) {\n              if (!nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {\n                // probably a component in the index.html that doesn't have it's hostname set\n                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;\n              } // add it back to the dom but in its new home\n\n\n              parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n            }\n          }\n        } else {\n          // this node doesn't have a slot home to go to, so let's hide it\n          if (nodeToRelocate.nodeType === 1\n          /* ElementNode */\n          ) {\n              nodeToRelocate.hidden = true;\n            }\n        }\n      }\n    }\n\n    if (checkSlotFallbackVisibility) {\n      updateFallbackSlotVisibility(rootVnode.$elm$);\n    } // done moving nodes around\n    // allow the disconnect callback to work again\n\n\n    plt.$flags$ &= ~1\n    /* isTmpDisconnected */\n    ; // always reset\n\n    relocateNodes.length = 0;\n  }\n};\n\nvar getElement = function getElement(ref) {\n  return getHostRef(ref).$hostElement$;\n};\n\nvar emitEvent = function emitEvent(elm, name, opts) {\n  var ev = new CustomEvent(name, opts);\n  elm.dispatchEvent(ev);\n  return ev;\n};\n\nvar attachToAncestor = function attachToAncestor(hostRef, ancestorComponent) {\n  if (ancestorComponent && !hostRef.$onRenderResolve$) {\n    ancestorComponent['s-p'].push(new Promise(function (r) {\n      return hostRef.$onRenderResolve$ = r;\n    }));\n  }\n};\n\nvar scheduleUpdate = function scheduleUpdate(hostRef, isInitialLoad) {\n  {\n    hostRef.$flags$ |= 16\n    /* isQueuedForUpdate */\n    ;\n  }\n\n  if (hostRef.$flags$ & 4\n  /* isWaitingForChildren */\n  ) {\n      hostRef.$flags$ |= 512\n      /* needsRerender */\n      ;\n      return;\n    }\n\n  var endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n  var ancestorComponent = hostRef.$ancestorComponent$;\n  var instance = hostRef.$lazyInstance$;\n\n  var update = function update() {\n    return updateComponent(hostRef, instance, isInitialLoad);\n  };\n\n  attachToAncestor(hostRef, ancestorComponent);\n  var promise;\n\n  if (isInitialLoad) {\n    {\n      hostRef.$flags$ |= 256\n      /* isListenReady */\n      ;\n\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.map(function (_a) {\n          var methodName = _a[0],\n              event = _a[1];\n          return safeCall(instance, methodName, event);\n        });\n        hostRef.$queuedListeners$ = null;\n      }\n    }\n    {\n      promise = safeCall(instance, 'componentWillLoad');\n    }\n  }\n\n  endSchedule(); // there is no ancestorc omponent or the ancestor component\n  // has already fired off its lifecycle update then\n  // fire off the initial update\n\n  return then(promise, function () {\n    return writeTask(update);\n  });\n};\n\nvar updateComponent = function updateComponent(hostRef, instance, isInitialLoad) {\n  // updateComponent\n  var elm = hostRef.$hostElement$;\n  var endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n  var rc = elm['s-rc'];\n\n  if (isInitialLoad) {\n    // DOM WRITE!\n    attachStyles(hostRef);\n  }\n\n  var endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n  {\n    {\n      // looks like we've got child nodes to render into this host element\n      // or we need to update the css class/attrs on the host element\n      // DOM WRITE!\n      renderVdom(hostRef, callRender(instance));\n    }\n  }\n\n  if (plt.$cssShim$) {\n    plt.$cssShim$.updateHost(elm);\n  }\n\n  {\n    hostRef.$flags$ &= ~16\n    /* isQueuedForUpdate */\n    ;\n  }\n  {\n    hostRef.$flags$ |= 2\n    /* hasRendered */\n    ;\n  }\n\n  if (rc) {\n    // ok, so turns out there are some child host elements\n    // waiting on this parent element to load\n    // let's fire off all update callbacks waiting\n    rc.map(function (cb) {\n      return cb();\n    });\n    elm['s-rc'] = undefined;\n  }\n\n  endRender();\n  endUpdate();\n  {\n    var childrenPromises = elm['s-p'];\n\n    var postUpdate = function postUpdate() {\n      return postUpdateComponent(hostRef);\n    };\n\n    if (childrenPromises.length === 0) {\n      postUpdate();\n    } else {\n      Promise.all(childrenPromises).then(postUpdate);\n      hostRef.$flags$ |= 4\n      /* isWaitingForChildren */\n      ;\n      childrenPromises.length = 0;\n    }\n  }\n};\n\nvar callRender = function callRender(instance) {\n  try {\n    instance = instance.render();\n  } catch (e) {\n    consoleError(e);\n  }\n\n  return instance;\n};\n\nvar postUpdateComponent = function postUpdateComponent(hostRef) {\n  var tagName = hostRef.$cmpMeta$.$tagName$;\n  var elm = hostRef.$hostElement$;\n  var endPostUpdate = createTime('postUpdate', tagName);\n  var ancestorComponent = hostRef.$ancestorComponent$;\n\n  if (!(hostRef.$flags$ & 64\n  /* hasLoadedComponent */\n  )) {\n    hostRef.$flags$ |= 64\n    /* hasLoadedComponent */\n    ;\n    {\n      // DOM WRITE!\n      addHydratedFlag(elm);\n    }\n    endPostUpdate();\n    {\n      hostRef.$onReadyResolve$(elm);\n\n      if (!ancestorComponent) {\n        appDidLoad();\n      }\n    }\n  } else {\n    endPostUpdate();\n  } // load events fire from bottom to top\n  // the deepest elements load first then bubbles up\n\n\n  {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = undefined;\n    }\n\n    if (hostRef.$flags$ & 512\n    /* needsRerender */\n    ) {\n        nextTick(function () {\n          return scheduleUpdate(hostRef, false);\n        });\n      }\n\n    hostRef.$flags$ &= ~(4\n    /* isWaitingForChildren */\n    | 512\n    /* needsRerender */\n    );\n  } // ( •_•)\n  // ( •_•)>⌐■-■\n  // (⌐■_■)\n};\n\nvar forceUpdate = function forceUpdate(ref) {\n  {\n    var hostRef = getHostRef(ref);\n    var isConnected = hostRef.$hostElement$.isConnected;\n\n    if (isConnected && (hostRef.$flags$ & (2\n    /* hasRendered */\n    | 16\n    /* isQueuedForUpdate */\n    )) === 2\n    /* hasRendered */\n    ) {\n        scheduleUpdate(hostRef, false);\n      } // Returns \"true\" when the forced update was successfully scheduled\n\n\n    return isConnected;\n  }\n};\n\nvar appDidLoad = function appDidLoad(who) {\n  // on appload\n  // we have finish the first big initial render\n  {\n    addHydratedFlag(doc.documentElement);\n  }\n  {\n    plt.$flags$ |= 2\n    /* appLoaded */\n    ;\n  }\n  nextTick(function () {\n    return emitEvent(win, 'appload', {\n      detail: {\n        namespace: NAMESPACE\n      }\n    });\n  });\n};\n\nvar safeCall = function safeCall(instance, method, arg) {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  return undefined;\n};\n\nvar then = function then(promise, thenFn) {\n  return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\n\nvar addHydratedFlag = function addHydratedFlag(elm) {\n  return elm.classList.add('hydrated');\n};\n\nvar parsePropertyValue = function parsePropertyValue(propValue, propType) {\n  // ensure this value is of the correct prop type\n  if (propValue != null && !isComplexType(propValue)) {\n    if (propType & 4\n    /* Boolean */\n    ) {\n        // per the HTML spec, any string value means it is a boolean true value\n        // but we'll cheat here and say that the string \"false\" is the boolean false\n        return propValue === 'false' ? false : propValue === '' || !!propValue;\n      }\n\n    if (propType & 1\n    /* String */\n    ) {\n        // could have been passed as a number or boolean\n        // but we still want it as a string\n        return String(propValue);\n      } // redundant return here for better minification\n\n\n    return propValue;\n  } // not sure exactly what type we want\n  // so no need to change to a different type\n\n\n  return propValue;\n};\n\nvar getValue = function getValue(ref, propName) {\n  return getHostRef(ref).$instanceValues$.get(propName);\n};\n\nvar setValue = function setValue(ref, propName, newVal, cmpMeta) {\n  // check our new property value against our internal value\n  var hostRef = getHostRef(ref);\n  var oldVal = hostRef.$instanceValues$.get(propName);\n  var flags = hostRef.$flags$;\n  var instance = hostRef.$lazyInstance$;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n\n  if ((!(flags & 8\n  /* isConstructingInstance */\n  ) || oldVal === undefined) && newVal !== oldVal) {\n    // gadzooks! the property's value has changed!!\n    // set our new value!\n    hostRef.$instanceValues$.set(propName, newVal);\n\n    if (instance) {\n      // get an array of method names of watch functions to call\n      if (cmpMeta.$watchers$ && flags & 128\n      /* isWatchReady */\n      ) {\n          var watchMethods = cmpMeta.$watchers$[propName];\n\n          if (watchMethods) {\n            // this instance is watching for when this property changed\n            watchMethods.map(function (watchMethodName) {\n              try {\n                // fire off each of the watch methods that are watching this property\n                instance[watchMethodName](newVal, oldVal, propName);\n              } catch (e) {\n                consoleError(e);\n              }\n            });\n          }\n        }\n\n      if ((flags & (2\n      /* hasRendered */\n      | 16\n      /* isQueuedForUpdate */\n      )) === 2\n      /* hasRendered */\n      ) {\n          // looks like this value actually changed, so we've got work to do!\n          // but only if we've already rendered, otherwise just chill out\n          // queue that we need to do an update, but don't worry about queuing\n          // up millions cuz this function ensures it only runs once\n          scheduleUpdate(hostRef, false);\n        }\n    }\n  }\n};\n\nvar proxyComponent = function proxyComponent(Cstr, cmpMeta, flags) {\n  if (cmpMeta.$members$) {\n    if (Cstr.watchers) {\n      cmpMeta.$watchers$ = Cstr.watchers;\n    } // It's better to have a const than two Object.entries()\n\n\n    var members = Object.entries(cmpMeta.$members$);\n    var prototype_1 = Cstr.prototype;\n    members.map(function (_a) {\n      var memberName = _a[0],\n          memberFlags = _a[1][0];\n\n      if (memberFlags & 31\n      /* Prop */\n      || flags & 2\n      /* proxyState */\n      && memberFlags & 32\n      /* State */\n      ) {\n        // proxyComponent - prop\n        Object.defineProperty(prototype_1, memberName, {\n          get: function get() {\n            // proxyComponent, get value\n            return getValue(this, memberName);\n          },\n          set: function set(newValue) {\n            // proxyComponent, set value\n            setValue(this, memberName, newValue, cmpMeta);\n          },\n          configurable: true,\n          enumerable: true\n        });\n      }\n    });\n\n    if (flags & 1\n    /* isElementConstructor */\n    ) {\n        var attrNameToPropName_1 = new Map();\n\n        prototype_1.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n          var _this = this;\n\n          plt.jmp(function () {\n            var propName = attrNameToPropName_1.get(attrName);\n            _this[propName] = newValue === null && typeof _this[propName] === 'boolean' ? false : newValue;\n          });\n        }; // create an array of attributes to observe\n        // and also create a map of html attribute name to js property name\n\n\n        Cstr.observedAttributes = members.filter(function (_a) {\n          var _ = _a[0],\n              m = _a[1];\n          return m[0] & 15;\n        }\n        /* HasAttribute */\n        ) // filter to only keep props that should match attributes\n        .map(function (_a) {\n          var propName = _a[0],\n              m = _a[1];\n          var attrName = m[1] || propName;\n          attrNameToPropName_1.set(attrName, propName);\n          return attrName;\n        });\n      }\n  }\n\n  return Cstr;\n};\n\nvar initializeComponent = function initializeComponent(elm, hostRef, cmpMeta, hmrVersionId, Cstr) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var endLoad, endNewInstance, scopeId_1, endRegisterStyles, style_1, ancestorComponent, schedule;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!((hostRef.$flags$ & 32\n          /* hasInitializedComponent */\n          ) === 0)) return [3\n          /*break*/\n          , 5]; // we haven't initialized this element yet\n\n          hostRef.$flags$ |= 32\n          /* hasInitializedComponent */\n          ; // lazy loaded components\n          // request the component's implementation to be\n          // wired up with the host element\n\n          Cstr = loadModule(cmpMeta);\n          if (!Cstr.then) return [3\n          /*break*/\n          , 2];\n          endLoad = uniqueTime();\n          return [4\n          /*yield*/\n          , Cstr];\n\n        case 1:\n          Cstr = _a.sent();\n          endLoad();\n          _a.label = 2;\n\n        case 2:\n          if (!Cstr.isProxied) {\n            // we'eve never proxied this Constructor before\n            // let's add the getters/setters to its prototype before\n            // the first time we create an instance of the implementation\n            {\n              cmpMeta.$watchers$ = Cstr.watchers;\n            }\n            proxyComponent(Cstr, cmpMeta, 2\n            /* proxyState */\n            );\n            Cstr.isProxied = true;\n          }\n\n          endNewInstance = createTime('createInstance', cmpMeta.$tagName$); // ok, time to construct the instance\n          // but let's keep track of when we start and stop\n          // so that the getters/setters don't incorrectly step on data\n\n          {\n            hostRef.$flags$ |= 8\n            /* isConstructingInstance */\n            ;\n          } // construct the lazy-loaded component implementation\n          // passing the hostRef is very important during\n          // construction in order to directly wire together the\n          // host element and the lazy-loaded instance\n\n          try {\n            new Cstr(hostRef);\n          } catch (e) {\n            consoleError(e);\n          }\n\n          {\n            hostRef.$flags$ &= ~8\n            /* isConstructingInstance */\n            ;\n          }\n          {\n            hostRef.$flags$ |= 128\n            /* isWatchReady */\n            ;\n          }\n          endNewInstance();\n          scopeId_1 = getScopeId(cmpMeta.$tagName$);\n          if (!(!styles.has(scopeId_1) && Cstr.style)) return [3\n          /*break*/\n          , 5];\n          endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n          style_1 = Cstr.style;\n          if (!(cmpMeta.$flags$ & 8)\n          /* needsShadowDomShim */\n          ) return [3\n            /*break*/\n            , 4];\n          /* needsShadowDomShim */\n\n          return [4\n          /*yield*/\n          , import('./shadow-css-805c31f3.js').then(function (m) {\n            return m.scopeCss(style_1, scopeId_1, false);\n          })];\n\n        case 3:\n          style_1 = _a.sent();\n          _a.label = 4;\n\n        case 4:\n          registerStyle(scopeId_1, style_1, !!(cmpMeta.$flags$ & 1\n          /* shadowDomEncapsulation */\n          ));\n          endRegisterStyles();\n          _a.label = 5;\n\n        case 5:\n          ancestorComponent = hostRef.$ancestorComponent$;\n\n          schedule = function schedule() {\n            return scheduleUpdate(hostRef, true);\n          };\n\n          if (ancestorComponent && ancestorComponent['s-rc']) {\n            // this is the intial load and this component it has an ancestor component\n            // but the ancestor component has NOT fired its will update lifecycle yet\n            // so let's just cool our jets and wait for the ancestor to continue first\n            // this will get fired off when the ancestor component\n            // finally gets around to rendering its lazy self\n            // fire off the initial update\n            ancestorComponent['s-rc'].push(schedule);\n          } else {\n            schedule();\n          }\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nvar connectedCallback = function connectedCallback(elm) {\n  if ((plt.$flags$ & 1\n  /* isTmpDisconnected */\n  ) === 0) {\n    var hostRef_1 = getHostRef(elm);\n    var cmpMeta_1 = hostRef_1.$cmpMeta$;\n    var endConnected = createTime('connectedCallback', cmpMeta_1.$tagName$);\n\n    if (!(hostRef_1.$flags$ & 1\n    /* hasConnected */\n    )) {\n      // first time this component has connected\n      hostRef_1.$flags$ |= 1\n      /* hasConnected */\n      ;\n      {\n        // initUpdate\n        // if the slot polyfill is required we'll need to put some nodes\n        // in here to act as original content anchors as we move nodes around\n        // host element has been connected to the DOM\n        if (cmpMeta_1.$flags$ & (4\n        /* hasSlotRelocation */\n        | 8\n        /* needsShadowDomShim */\n        )) {\n          setContentReference(elm);\n        }\n      }\n      {\n        // find the first ancestor component (if there is one) and register\n        // this component as one of the actively loading child components for its ancestor\n        var ancestorComponent = elm;\n\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          // climb up the ancestors looking for the first\n          // component that hasn't finished its lifecycle update yet\n          if (ancestorComponent['s-p']) {\n            // we found this components first ancestor component\n            // keep a reference to this component's ancestor component\n            attachToAncestor(hostRef_1, hostRef_1.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      } // Lazy properties\n      // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n\n      if (cmpMeta_1.$members$) {\n        Object.entries(cmpMeta_1.$members$).map(function (_a) {\n          var memberName = _a[0],\n              memberFlags = _a[1][0];\n\n          if (memberFlags & 31\n          /* Prop */\n          && elm.hasOwnProperty(memberName)) {\n            var value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n\n      {\n        // connectedCallback, taskQueue, initialLoad\n        // angular sets attribute AFTER connectCallback\n        // https://github.com/angular/angular/issues/18909\n        // https://github.com/angular/angular/issues/19940\n        nextTick(function () {\n          return initializeComponent(elm, hostRef_1, cmpMeta_1);\n        });\n      }\n    } else {\n      // not the first time this has connected\n      // reattach any event listeners to the host\n      // since they would have been removed when disconnected\n      addHostEventListeners(elm, hostRef_1, cmpMeta_1.$listeners$);\n    }\n\n    endConnected();\n  }\n};\n\nvar setContentReference = function setContentReference(elm) {\n  // only required when we're NOT using native shadow dom (slot)\n  // or this browser doesn't support native shadow dom\n  // and this host element was NOT created with SSR\n  // let's pick out the inner content for slot projection\n  // create a node to represent where the original\n  // content was first placed, which is useful later on\n  var contentRefElm = elm['s-cr'] = doc.createComment('');\n  contentRefElm['s-cn'] = true;\n  elm.insertBefore(contentRefElm, elm.firstChild);\n};\n\nvar disconnectedCallback = function disconnectedCallback(elm) {\n  if ((plt.$flags$ & 1\n  /* isTmpDisconnected */\n  ) === 0) {\n    var hostRef = getHostRef(elm);\n    var instance = hostRef.$lazyInstance$;\n    {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$.map(function (rmListener) {\n          return rmListener();\n        });\n        hostRef.$rmListeners$ = undefined;\n      }\n    } // clear CSS var-shim tracking\n\n    if (plt.$cssShim$) {\n      plt.$cssShim$.removeHost(elm);\n    }\n\n    {\n      safeCall(instance, 'componentDidUnload');\n    }\n  }\n};\n\nvar bootstrapLazy = function bootstrapLazy(lazyBundles, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var endBootstrap = createTime();\n  var cmpTags = [];\n  var exclude = options.exclude || [];\n  var customElements = win.customElements;\n  var head = doc.head;\n  var metaCharset = /*@__PURE__*/head.querySelector('meta[charset]');\n  var visibilityStyle = /*@__PURE__*/doc.createElement('style');\n  var deferredConnectedCallbacks = [];\n  var appLoadFallback;\n  var isBootstrapping = true;\n  Object.assign(plt, options);\n  plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n  {\n    if (options.syncQueue) {\n      plt.$flags$ |= 4\n      /* queueSync */\n      ;\n    }\n  }\n  lazyBundles.map(function (lazyBundle) {\n    return lazyBundle[1].map(function (compactMeta) {\n      var cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n        $members$: compactMeta[2],\n        $listeners$: compactMeta[3]\n      };\n      {\n        cmpMeta.$members$ = compactMeta[2];\n      }\n      {\n        cmpMeta.$listeners$ = compactMeta[3];\n      }\n      {\n        cmpMeta.$watchers$ = {};\n      }\n\n      if (!supportsShadow && cmpMeta.$flags$ & 1\n      /* shadowDomEncapsulation */\n      ) {\n          cmpMeta.$flags$ |= 8\n          /* needsShadowDomShim */\n          ;\n        }\n\n      var tagName = cmpMeta.$tagName$;\n\n      var HostElement =\n      /** @class */\n      function (_super) {\n        __extends(HostElement, _super); // StencilLazyHost\n\n\n        function HostElement(self) {\n          var _this = // @ts-ignore\n          _super.call(this, self) || this;\n\n          self = _this;\n          registerHost(self, cmpMeta);\n\n          if (cmpMeta.$flags$ & 1\n          /* shadowDomEncapsulation */\n          ) {\n              // this component is using shadow dom\n              // and this browser supports shadow dom\n              // add the read-only property \"shadowRoot\" to the host element\n              // adding the shadow root build conditionals to minimize runtime\n              if (supportsShadow) {\n                {\n                  self.attachShadow({\n                    mode: 'open'\n                  });\n                }\n              } else if (!('shadowRoot' in self)) {\n                self.shadowRoot = self;\n              }\n            }\n\n          return _this;\n        }\n\n        HostElement.prototype.connectedCallback = function () {\n          var _this = this;\n\n          if (appLoadFallback) {\n            clearTimeout(appLoadFallback);\n            appLoadFallback = null;\n          }\n\n          if (isBootstrapping) {\n            // connectedCallback will be processed once all components have been registered\n            deferredConnectedCallbacks.push(this);\n          } else {\n            plt.jmp(function () {\n              return connectedCallback(_this);\n            });\n          }\n        };\n\n        HostElement.prototype.disconnectedCallback = function () {\n          var _this = this;\n\n          plt.jmp(function () {\n            return disconnectedCallback(_this);\n          });\n        };\n\n        HostElement.prototype.forceUpdate = function () {\n          forceUpdate(this);\n        };\n\n        HostElement.prototype.componentOnReady = function () {\n          return getHostRef(this).$onReadyPromise$;\n        };\n\n        return HostElement;\n      }(HTMLElement);\n\n      cmpMeta.$lazyBundleIds$ = lazyBundle[0];\n\n      if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n        cmpTags.push(tagName);\n        customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1\n        /* isElementConstructor */\n        ));\n      }\n    });\n  });\n  {\n    visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n    visibilityStyle.setAttribute('data-styles', '');\n    head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n  } // Process deferred connectedCallbacks now all components have been registered\n\n  isBootstrapping = false;\n\n  if (deferredConnectedCallbacks.length) {\n    deferredConnectedCallbacks.map(function (host) {\n      return host.connectedCallback();\n    });\n  } else {\n    {\n      plt.jmp(function () {\n        return appLoadFallback = setTimeout(appDidLoad, 30);\n      });\n    }\n  } // Fallback appLoad event\n\n\n  endBootstrap();\n};\n\nvar hostRefs = new WeakMap();\n\nvar getHostRef = function getHostRef(ref) {\n  return hostRefs.get(ref);\n};\n\nvar registerInstance = function registerInstance(lazyInstance, hostRef) {\n  return hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\n};\n\nvar registerHost = function registerHost(elm, cmpMeta) {\n  var hostRef = {\n    $flags$: 0,\n    $hostElement$: elm,\n    $cmpMeta$: cmpMeta,\n    $instanceValues$: new Map()\n  };\n  {\n    hostRef.$onReadyPromise$ = new Promise(function (r) {\n      return hostRef.$onReadyResolve$ = r;\n    });\n    elm['s-p'] = [];\n    elm['s-rc'] = [];\n  }\n  addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n  return hostRefs.set(elm, hostRef);\n};\n\nvar isMemberInElement = function isMemberInElement(elm, memberName) {\n  return memberName in elm;\n};\n\nvar consoleError = function consoleError(e) {\n  return console.error(e);\n};\n\nvar cmpModules = /*@__PURE__*/new Map();\n\nvar loadModule = function loadModule(cmpMeta, hostRef, hmrVersionId) {\n  // loadModuleImport\n  var exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n  var bundleId = cmpMeta.$lazyBundleIds$;\n  var module = cmpModules.get(bundleId);\n\n  if (module) {\n    return module[exportName];\n  }\n\n  return import(\n  /* webpackInclude: /\\.entry\\.js$/ */\n\n  /* webpackExclude: /\\.system\\.entry\\.js$/ */\n\n  /* webpackMode: \"lazy\" */\n  \"./\" + bundleId + \".entry.js\" + '').then(function (importedModule) {\n    {\n      cmpModules.set(bundleId, importedModule);\n    }\n    return importedModule[exportName];\n  }, consoleError);\n};\n\nvar styles = new Map();\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\n\nvar queueTask = function queueTask(queue, write) {\n  return function (cb) {\n    queue.push(cb);\n\n    if (!queuePending) {\n      queuePending = true;\n\n      if (write && plt.$flags$ & 4\n      /* queueSync */\n      ) {\n          nextTick(flush);\n        } else {\n        plt.raf(flush);\n      }\n    }\n  };\n};\n\nvar consume = function consume(queue) {\n  for (var i = 0; i < queue.length; i++) {\n    try {\n      queue[i](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  queue.length = 0;\n};\n\nvar consumeTimeout = function consumeTimeout(queue, timeout) {\n  var i = 0;\n  var ts = 0;\n\n  while (i < queue.length && (ts = performance.now()) < timeout) {\n    try {\n      queue[i++](ts);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  if (i === queue.length) {\n    queue.length = 0;\n  } else if (i !== 0) {\n    queue.splice(0, i);\n  }\n};\n\nvar flush = function flush() {\n  {\n    queueCongestion++;\n  } // always force a bunch of medium callbacks to run, but still have\n  // a throttle on how many can run in a certain time\n  // DOM READS!!!\n\n  consume(queueDomReads); // DOM WRITES!!!\n\n  {\n    var timeout = (plt.$flags$ & 6\n    /* queueMask */\n    ) === 2\n    /* appLoaded */\n    ? performance.now() + 14 * Math.ceil(queueCongestion * (1.0 / 10.0)) : Infinity;\n    consumeTimeout(queueDomWrites, timeout);\n    consumeTimeout(queueDomWritesLow, timeout);\n\n    if (queueDomWrites.length > 0) {\n      queueDomWritesLow.push.apply(queueDomWritesLow, queueDomWrites);\n      queueDomWrites.length = 0;\n    }\n\n    if (queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0) {\n      // still more to do yet, but we've run out of time\n      // let's let this thing cool off and try again in the next tick\n      plt.raf(flush);\n    } else {\n      queueCongestion = 0;\n    }\n  }\n};\n\nvar nextTick = /*@__PURE__*/function nextTick(cb) {\n  return promiseResolve().then(cb);\n};\n\nvar writeTask = /*@__PURE__*/queueTask(queueDomWrites, true);\n\nvar patchEsm = function patchEsm() {\n  // @ts-ignore\n  if (!(CSS && CSS.supports && CSS.supports('color', 'var(--c)'))) {\n    // @ts-ignore\n    return import(\n    /* webpackChunkName: \"polyfills-css-shim\" */\n    './css-shim-d102defa.js').then(function () {\n      if (plt.$cssShim$ = win.__cssshim) {\n        return plt.$cssShim$.i();\n      } else {\n        // for better minification\n        return 0;\n      }\n    });\n  }\n\n  return promiseResolve();\n};\n\nvar patchBrowser = function patchBrowser() {\n  {\n    // shim css vars\n    plt.$cssShim$ = win.__cssshim;\n  } // @ts-ignore\n\n  var scriptElm = Array.from(doc.querySelectorAll('script')).find(function (s) {\n    return new RegExp(\"/\" + NAMESPACE + \"(\\\\.esm)?\\\\.js($|\\\\?|#)\").test(s.src) || s.getAttribute('data-stencil-namespace') === NAMESPACE;\n  });\n  var opts = scriptElm['data-opts'] || {};\n\n  if ('onbeforeload' in scriptElm && !history.scrollRestoration\n  /* IS_ESM_BUILD */\n  ) {\n      // Safari < v11 support: This IF is true if it's Safari below v11.\n      // This fn cannot use async/await since Safari didn't support it until v11,\n      // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n      // so both the ESM file and nomodule file would get downloaded. Only Safari\n      // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n      // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n      // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n      return {\n        then: function then() {\n          /* promise noop */\n        }\n      };\n    }\n\n  {\n    opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n    {\n      patchDynamicImport(opts.resourcesUrl, scriptElm);\n    }\n\n    if (!win.customElements) {\n      // module support, but no custom elements support (Old Edge)\n      // @ts-ignore\n      return import(\n      /* webpackChunkName: \"polyfills-dom\" */\n      './dom-70cf571b.js').then(function () {\n        return opts;\n      });\n    }\n  }\n  return promiseResolve(opts);\n};\n\nvar patchDynamicImport = function patchDynamicImport(base, orgScriptElm) {\n  var importFunctionName = getDynamicImportFunction(NAMESPACE);\n\n  try {\n    // test if this browser supports dynamic imports\n    // There is a caching issue in V8, that breaks using import() in Function\n    // By generating a random string, we can workaround it\n    // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n    win[importFunctionName] = new Function('w', \"return import(w);//\" + Math.random());\n  } catch (e) {\n    // this shim is specifically for browsers that do support \"esm\" imports\n    // however, they do NOT support \"dynamic\" imports\n    // basically this code is for old Edge, v18 and below\n    var moduleMap_1 = new Map();\n\n    win[importFunctionName] = function (src) {\n      var url = new URL(src, base).href;\n      var mod = moduleMap_1.get(url);\n\n      if (!mod) {\n        var script_1 = doc.createElement('script');\n        script_1.type = 'module';\n        script_1.crossOrigin = orgScriptElm.crossOrigin;\n        script_1.src = URL.createObjectURL(new Blob([\"import * as m from '\" + url + \"'; window.\" + importFunctionName + \".m = m;\"], {\n          type: 'application/javascript'\n        }));\n        mod = new Promise(function (resolve) {\n          script_1.onload = function () {\n            resolve(win[importFunctionName].m);\n            script_1.remove();\n          };\n        });\n        moduleMap_1.set(url, mod);\n        doc.head.appendChild(script_1);\n      }\n\n      return mod;\n    };\n  }\n};\n\nexport { Host as H, patchEsm as a, bootstrapLazy as b, getElement as g, h, patchBrowser as p, registerInstance as r };","map":{"version":3,"sources":["/home/ec2-user/environment/react-amplified/node_modules/@aws-amplify/ui-components/dist/esm-es5/index-aae9287b.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__spreadArrays","s","i","il","arguments","r","k","a","j","jl","NAMESPACE","scopeId","contentRef","hostTagName","useNativeShadowDom","checkSlotFallbackVisibility","checkSlotRelocate","isSvgMode","queueCongestion","queuePending","win","window","CSS","doc","document","head","plt","$flags$","$resourcesUrl$","jmp","h","raf","requestAnimationFrame","ael","el","eventName","listener","opts","addEventListener","rel","removeEventListener","supportsShadow","attachShadow","indexOf","promiseResolve","supportsConstructibleStylesheets","CSSStyleSheet","addHostEventListeners","elm","hostRef","listeners","attachParentListeners","map","_a","flags","name","method","target","handler","hostListenerProxy","hostListenerOpts","$rmListeners$","methodName","ev","$lazyInstance$","$queuedListeners$","HYDRATED_CSS","XLINK_NS","createTime","fnName","tagName","uniqueTime","key","measureText","rootAppliedStyles","WeakMap","registerStyle","cssText","allowCS","style","styles","get","replace","set","addStyle","styleContainerNode","cmpMeta","mode","hostElm","getScopeId","$tagName$","nodeType","appliedStyles","styleElm","Set","has","$cssShim$","createHostStyle","newScopeId","createElement","innerHTML","insertBefore","querySelector","add","adoptedStyleSheets","includes","attachStyles","$cmpMeta$","$hostElement$","endAttachStyles","shadowRoot","getRootNode","$modeName$","classList","EMPTY_OBJ","SVG_NS","HTML_NS","isDef","isComplexType","o","getDynamicImportFunction","namespace","nodeName","vnodeData","children","_i","child","slotName","simple","lastSimple","vNodeChildren","walk","c","isArray","String","$text$","newVNode","classData_1","className","class","keys","filter","join","vnode","$attrs$","$children$","$key$","$name$","tag","text","$tag$","$elm$","Host","isHost","node","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","toLowerCase","oldClasses_1","parseClassList","newClasses_1","remove","prop","removeProperty","setProperty","slice","isComplex","xlink","removeAttributeNS","removeAttribute","setAttributeNS","setAttribute","parseClassListRegex","split","updateElement","oldVnode","newVnode","host","oldVnodeAttrs","newVnodeAttrs","undefined","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","oldVNode","createTextNode","createElementNS","appendChild","putBackInOriginalLocation","recursive","oldSlotChildNodes","childNodes","parentReferenceNode","referenceNode","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","parentNode","removeVnodes","callNodeRefs","updateChildren","oldCh","newCh","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","elmToMove","isSameVnode","patch","nextSibling","vnode1","vnode2","oldChildren","newChildren","defaultHolder","textContent","data","updateFallbackSlotVisibility","ilen","slotNameAttr","hidden","getAttribute","trim","relocateNodes","relocateSlotContent","hostContentNodes","relocateNodeData","isNodeLocatedInSlot","find","$nodeToRelocate$","$slotRefNode$","relocateNode","some","nodeToRelocate","vNode","ref","renderVdom","renderFnResults","$vnode$","rootVnode","relocateData","orgLocationNode","parentNodeRef","insertBeforeNode","refNode","previousSibling","getElement","getHostRef","emitEvent","CustomEvent","dispatchEvent","attachToAncestor","ancestorComponent","$onRenderResolve$","scheduleUpdate","isInitialLoad","endSchedule","$ancestorComponent$","instance","update","updateComponent","promise","event","safeCall","writeTask","endUpdate","rc","endRender","callRender","updateHost","cb","childrenPromises","postUpdate","postUpdateComponent","all","render","consoleError","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","nextTick","forceUpdate","isConnected","who","documentElement","detail","arg","thenFn","parsePropertyValue","propValue","propType","getValue","propName","$instanceValues$","setValue","newVal","oldVal","$members$","$watchers$","watchMethods","watchMethodName","proxyComponent","Cstr","watchers","members","entries","prototype_1","memberFlags","defineProperty","configurable","enumerable","attrNameToPropName_1","Map","attributeChangedCallback","attrName","_oldValue","_this","observedAttributes","m","initializeComponent","hmrVersionId","endLoad","endNewInstance","scopeId_1","endRegisterStyles","style_1","schedule","loadModule","isProxied","scopeCss","connectedCallback","hostRef_1","cmpMeta_1","endConnected","setContentReference","$listeners$","contentRefElm","createComment","firstChild","disconnectedCallback","rmListener","removeHost","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements","metaCharset","visibilityStyle","deferredConnectedCallbacks","appLoadFallback","isBootstrapping","assign","URL","resourcesUrl","baseURI","href","syncQueue","lazyBundle","compactMeta","HostElement","_super","self","registerHost","clearTimeout","componentOnReady","$onReadyPromise$","HTMLElement","$lazyBundleIds$","define","setTimeout","hostRefs","registerInstance","lazyInstance","console","error","cmpModules","exportName","bundleId","module","importedModule","queueDomReads","queueDomWrites","queueDomWritesLow","queueTask","queue","write","flush","consume","performance","now","consumeTimeout","timeout","ts","splice","Math","ceil","Infinity","patchEsm","supports","__cssshim","patchBrowser","scriptElm","from","querySelectorAll","RegExp","test","src","history","scrollRestoration","location","patchDynamicImport","base","orgScriptElm","importFunctionName","Function","random","moduleMap_1","url","mod","script_1","type","crossOrigin","createObjectURL","Blob","onload","H"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar NAMESPACE = 'amplify-ui-components';\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar queueCongestion = 0;\nvar queuePending = false;\nvar win = typeof window !== 'undefined' ? window : {};\nvar CSS = win.CSS;\nvar doc = win.document || { head: {} };\nvar plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: function (h) { return h(); },\n    raf: function (h) { return requestAnimationFrame(h); },\n    ael: function (el, eventName, listener, opts) { return el.addEventListener(eventName, listener, opts); },\n    rel: function (el, eventName, listener, opts) { return el.removeEventListener(eventName, listener, opts); },\n};\nvar supportsShadow = /*@__PURE__*/ (function () { return (doc.head.attachShadow + '').indexOf('[native') > -1; })();\nvar promiseResolve = function (v) { return Promise.resolve(v); };\nvar supportsConstructibleStylesheets = /*@__PURE__*/ (function () {\n    try {\n        new CSSStyleSheet();\n        return true;\n    }\n    catch (e) { }\n    return false;\n})();\nvar addHostEventListeners = function (elm, hostRef, listeners, attachParentListeners) {\n    if (listeners) {\n        listeners.map(function (_a) {\n            var flags = _a[0], name = _a[1], method = _a[2];\n            var target = elm;\n            var handler = hostListenerProxy(hostRef, method);\n            var opts = hostListenerOpts(flags);\n            plt.ael(target, name, handler, opts);\n            (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(function () { return plt.rel(target, name, handler, opts); });\n        });\n    }\n};\nvar hostListenerProxy = function (hostRef, methodName) { return function (ev) {\n    {\n        if (hostRef.$flags$ & 256 /* isListenReady */) {\n            // instance is ready, let's call it's member method for this event\n            hostRef.$lazyInstance$[methodName](ev);\n        }\n        else {\n            (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n        }\n    }\n}; };\n// prettier-ignore\nvar hostListenerOpts = function (flags) { return (flags & 2 /* Capture */) !== 0; };\nvar HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\nvar XLINK_NS = 'http://www.w3.org/1999/xlink';\nvar createTime = function (fnName, tagName) {\n    if (tagName === void 0) { tagName = ''; }\n    {\n        return function () {\n            return;\n        };\n    }\n};\nvar uniqueTime = function (key, measureText) {\n    {\n        return function () {\n            return;\n        };\n    }\n};\nvar rootAppliedStyles = new WeakMap();\nvar registerStyle = function (scopeId, cssText, allowCS) {\n    var style = styles.get(scopeId);\n    if (supportsConstructibleStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        style.replace(cssText);\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nvar addStyle = function (styleContainerNode, cmpMeta, mode, hostElm) {\n    var scopeId = getScopeId(cmpMeta.$tagName$);\n    var style = styles.get(scopeId);\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            var appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            var styleElm = void 0;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                {\n                    if (plt.$cssShim$) {\n                        styleElm = plt.$cssShim$.createHostStyle(hostElm, scopeId, style, !!(cmpMeta.$flags$ & 10 /* needsScopedEncapsulation */));\n                        var newScopeId = styleElm['s-sc'];\n                        if (newScopeId) {\n                            scopeId = newScopeId;\n                            // we don't want to add this styleID to the appliedStyles Set\n                            // since the cssVarShim might need to apply several different\n                            // stylesheets for the same component\n                            appliedStyles = null;\n                        }\n                    }\n                    else {\n                        styleElm = doc.createElement('style');\n                        styleElm.innerHTML = style;\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = __spreadArrays(styleContainerNode.adoptedStyleSheets, [style]);\n        }\n    }\n    return scopeId;\n};\nvar attachStyles = function (hostRef) {\n    var cmpMeta = hostRef.$cmpMeta$;\n    var elm = hostRef.$hostElement$;\n    var flags = cmpMeta.$flags$;\n    var endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    var scopeId = addStyle(supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, hostRef.$modeName$, elm);\n    if (flags & 10 /* needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n        if (flags & 2 /* scopedCssEncapsulation */) {\n            elm.classList.add(scopeId + '-s');\n        }\n    }\n    endAttachStyles();\n};\nvar getScopeId = function (tagName, mode) { return 'sc-' + (tagName); };\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nvar EMPTY_OBJ = {};\n/**\n * Namespaces\n */\nvar SVG_NS = 'http://www.w3.org/2000/svg';\nvar HTML_NS = 'http://www.w3.org/1999/xhtml';\nvar isDef = function (v) { return v != null; };\nvar isComplexType = function (o) {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\nvar getDynamicImportFunction = function (namespace) { return \"__sc_import_\" + namespace.replace(/\\s|-/g, '_'); };\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nvar h = function (nodeName, vnodeData) {\n    var children = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        children[_i - 2] = arguments[_i];\n    }\n    var child = null;\n    var key = null;\n    var slotName = null;\n    var simple = false;\n    var lastSimple = false;\n    var vNodeChildren = [];\n    var walk = function (c) {\n        for (var i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        // normalize class / classname attributes\n        if (vnodeData.key) {\n            key = vnodeData.key;\n        }\n        if (vnodeData.name) {\n            slotName = vnodeData.name;\n        }\n        {\n            var classData_1 = vnodeData.className || vnodeData.class;\n            if (classData_1) {\n                vnodeData.class =\n                    typeof classData_1 !== 'object'\n                        ? classData_1\n                        : Object.keys(classData_1)\n                            .filter(function (k) { return classData_1[k]; })\n                            .join(' ');\n            }\n        }\n    }\n    var vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    {\n        vnode.$key$ = key;\n    }\n    {\n        vnode.$name$ = slotName;\n    }\n    return vnode;\n};\nvar newVNode = function (tag, text) {\n    var vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    {\n        vnode.$attrs$ = null;\n    }\n    {\n        vnode.$key$ = null;\n    }\n    {\n        vnode.$name$ = null;\n    }\n    return vnode;\n};\nvar Host = {};\nvar isHost = function (node) { return node && node.$tag$ === Host; };\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\nvar setAccessor = function (elm, memberName, oldValue, newValue, isSvg, flags) {\n    if (oldValue !== newValue) {\n        var isProp = isMemberInElement(elm, memberName);\n        var ln = memberName.toLowerCase();\n        if (memberName === 'class') {\n            var classList = elm.classList;\n            var oldClasses_1 = parseClassList(oldValue);\n            var newClasses_1 = parseClassList(newValue);\n            classList.remove.apply(classList, oldClasses_1.filter(function (c) { return c && !newClasses_1.includes(c); }));\n            classList.add.apply(classList, newClasses_1.filter(function (c) { return c && !oldClasses_1.includes(c); }));\n        }\n        else if (memberName === 'style') {\n            // update style attribute, css properties and values\n            {\n                for (var prop in oldValue) {\n                    if (!newValue || newValue[prop] == null) {\n                        if (prop.includes('-')) {\n                            elm.style.removeProperty(prop);\n                        }\n                        else {\n                            elm.style[prop] = '';\n                        }\n                    }\n                }\n            }\n            for (var prop in newValue) {\n                if (!oldValue || newValue[prop] !== oldValue[prop]) {\n                    if (prop.includes('-')) {\n                        elm.style.setProperty(prop, newValue[prop]);\n                    }\n                    else {\n                        elm.style[prop] = newValue[prop];\n                    }\n                }\n            }\n        }\n        else if (memberName === 'key')\n            ;\n        else if (memberName === 'ref') {\n            // minifier will clean this up\n            if (newValue) {\n                newValue(elm);\n            }\n        }\n        else if ((!isProp) && memberName[0] === 'o' && memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue) {\n                plt.rel(elm, memberName, oldValue, false);\n            }\n            if (newValue) {\n                plt.ael(elm, memberName, newValue, false);\n            }\n        }\n        else {\n            // Set property if it exists and it's not a SVG\n            var isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        var n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                            // tslint:disable-next-line: triple-equals\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) { }\n            }\n            /**\n             * Need to manually update attribute if:\n             * - memberName is not an attribute\n             * - if we are rendering the host element in order to reflect attribute\n             * - if it's a SVG, since properties might not work in <svg>\n             * - if the newValue is null/undefined or 'false'.\n             */\n            var xlink = false;\n            {\n                if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n                    memberName = ln;\n                    xlink = true;\n                }\n            }\n            if (newValue == null || newValue === false) {\n                if (xlink) {\n                    elm.removeAttributeNS(XLINK_NS, memberName);\n                }\n                else {\n                    elm.removeAttribute(memberName);\n                }\n            }\n            else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                if (xlink) {\n                    elm.setAttributeNS(XLINK_NS, memberName, newValue);\n                }\n                else {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nvar parseClassListRegex = /\\s/;\nvar parseClassList = function (value) { return (!value ? [] : value.split(parseClassListRegex)); };\nvar updateElement = function (oldVnode, newVnode, isSvgMode, memberName) {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    var elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n    var oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    var newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\nvar createElm = function (oldParentVNode, newParentVNode, childIndex, parentElm) {\n    // tslint:disable-next-line: prefer-const\n    var newVNode = newParentVNode.$children$[childIndex];\n    var i = 0;\n    var elm;\n    var childNode;\n    var oldVNode;\n    if (!useNativeShadowDom) {\n        // remember for later we need to check to relocate nodes\n        checkSlotRelocate = true;\n        if (newVNode.$tag$ === 'slot') {\n            if (scopeId) {\n                // scoped css needs to add its scoped id to the parent element\n                parentElm.classList.add(scopeId + '-s');\n            }\n            newVNode.$flags$ |= newVNode.$children$\n                ? // slot element has fallback content\n                    2 /* isSlotFallback */\n                : // slot element does not have fallback content\n                    1 /* isSlotReference */;\n        }\n    }\n    if (newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else if (newVNode.$flags$ & 1 /* isSlotReference */) {\n        // create a slot reference node\n        elm = newVNode.$elm$ = doc.createTextNode('');\n    }\n    else {\n        if (!isSvgMode) {\n            isSvgMode = newVNode.$tag$ === 'svg';\n        }\n        // create element\n        elm = newVNode.$elm$ = (doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, newVNode.$flags$ & 2 /* isSlotFallback */ ? 'slot-fb' : newVNode.$tag$));\n        if (isSvgMode && newVNode.$tag$ === 'foreignObject') {\n            isSvgMode = false;\n        }\n        // add css classes, attrs, props, listeners, etc.\n        {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if (isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i, elm);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n        {\n            if (newVNode.$tag$ === 'svg') {\n                // Only reset the SVG context when we're exiting <svg> element\n                isSvgMode = false;\n            }\n            else if (elm.tagName === 'foreignObject') {\n                // Reenter SVG context when we're exiting <foreignObject> element\n                isSvgMode = true;\n            }\n        }\n    }\n    {\n        elm['s-hn'] = hostTagName;\n        if (newVNode.$flags$ & (2 /* isSlotFallback */ | 1 /* isSlotReference */)) {\n            // remember the content reference comment\n            elm['s-sr'] = true;\n            // remember the content reference comment\n            elm['s-cr'] = contentRef;\n            // remember the slot name, or empty string for default slot\n            elm['s-sn'] = newVNode.$name$ || '';\n            // check if we've got an old vnode for this slot\n            oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n            if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {\n                // we've got an old slot vnode and the wrapper is being replaced\n                // so let's move the old slot content back to it's original location\n                putBackInOriginalLocation(oldParentVNode.$elm$, false);\n            }\n        }\n    }\n    return elm;\n};\nvar putBackInOriginalLocation = function (parentElm, recursive) {\n    plt.$flags$ |= 1 /* isTmpDisconnected */;\n    var oldSlotChildNodes = parentElm.childNodes;\n    for (var i = oldSlotChildNodes.length - 1; i >= 0; i--) {\n        var childNode = oldSlotChildNodes[i];\n        if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {\n            // // this child node in the old element is from another component\n            // // remove this node from the old slot's parent\n            // childNode.remove();\n            // and relocate it back to it's original location\n            parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode));\n            // remove the old original location comment entirely\n            // later on the patch function will know what to do\n            // and move this to the correct spot in need be\n            childNode['s-ol'].remove();\n            childNode['s-ol'] = undefined;\n            checkSlotRelocate = true;\n        }\n        if (recursive) {\n            putBackInOriginalLocation(childNode, recursive);\n        }\n    }\n    plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar addVnodes = function (parentElm, before, parentVNode, vnodes, startIdx, endIdx) {\n    var containerElm = ((parentElm['s-cr'] && parentElm['s-cr'].parentNode) || parentElm);\n    var childNode;\n    if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx, parentElm);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode, referenceNode(before));\n            }\n        }\n    }\n};\nvar removeVnodes = function (vnodes, startIdx, endIdx, vnode, elm) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        if ((vnode = vnodes[startIdx])) {\n            elm = vnode.$elm$;\n            callNodeRefs(vnode);\n            {\n                // we're removing this element\n                // so it's possible we need to show slot fallback content now\n                checkSlotFallbackVisibility = true;\n                if (elm['s-ol']) {\n                    // remove the original location comment\n                    elm['s-ol'].remove();\n                }\n                else {\n                    // it's possible that child nodes of the node\n                    // that's being removed are slot nodes\n                    putBackInOriginalLocation(elm, true);\n                }\n            }\n            // remove the vnode's element from the dom\n            elm.remove();\n        }\n    }\n};\nvar updateChildren = function (parentElm, oldCh, newVNode, newCh) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var idxInOld = 0;\n    var i = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var node;\n    var elmToMove;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // Vnode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            patch(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            // Vnode moved right\n            if ((oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n            }\n            patch(oldStartVnode, newEndVnode);\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            // Vnode moved left\n            if ((oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n            }\n            patch(oldEndVnode, newStartVnode);\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            // createKeyToOldIdx\n            idxInOld = -1;\n            {\n                for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n                    if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n                        idxInOld = i;\n                        break;\n                    }\n                }\n            }\n            if (idxInOld >= 0) {\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n                    node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld, parentElm);\n                }\n                else {\n                    patch(elmToMove, newStartVnode);\n                    oldCh[idxInOld] = undefined;\n                    node = elmToMove.$elm$;\n                }\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                // new element\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                {\n                    parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if (newStartIdx > newEndIdx) {\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\nvar isSameVnode = function (vnode1, vnode2) {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (vnode1.$tag$ === vnode2.$tag$) {\n        if (vnode1.$tag$ === 'slot') {\n            return vnode1.$name$ === vnode2.$name$;\n        }\n        {\n            return vnode1.$key$ === vnode2.$key$;\n        }\n    }\n    return false;\n};\nvar referenceNode = function (node) {\n    // this node was relocated to a new location in the dom\n    // because of some other component's slot\n    // but we still have an html comment in place of where\n    // it's original location was according to it's original vdom\n    return (node && node['s-ol']) || node;\n};\nvar parentReferenceNode = function (node) { return (node['s-ol'] ? node['s-ol'] : node).parentNode; };\nvar patch = function (oldVNode, newVNode) {\n    var elm = (newVNode.$elm$ = oldVNode.$elm$);\n    var oldChildren = oldVNode.$children$;\n    var newChildren = newVNode.$children$;\n    var tag = newVNode.$tag$;\n    var text = newVNode.$text$;\n    var defaultHolder;\n    if (text === null) {\n        {\n            // test if we're rendering an svg element, or still rendering nodes inside of one\n            // only add this to the when the compiler sees we're using an svg somewhere\n            isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n        }\n        // element node\n        {\n            if (tag === 'slot')\n                ;\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if (oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            updateChildren(elm, oldChildren, newVNode, newChildren);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if (oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if (oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n        if (isSvgMode && tag === 'svg') {\n            isSvgMode = false;\n        }\n    }\n    else if ((defaultHolder = elm['s-cr'])) {\n        // this element has slotted content\n        defaultHolder.parentNode.textContent = text;\n    }\n    else if (oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\nvar updateFallbackSlotVisibility = function (elm) {\n    // tslint:disable-next-line: prefer-const\n    var childNodes = elm.childNodes;\n    var childNode;\n    var i;\n    var ilen;\n    var j;\n    var slotNameAttr;\n    var nodeType;\n    for (i = 0, ilen = childNodes.length; i < ilen; i++) {\n        childNode = childNodes[i];\n        if (childNode.nodeType === 1 /* ElementNode */) {\n            if (childNode['s-sr']) {\n                // this is a slot fallback node\n                // get the slot name for this slot reference node\n                slotNameAttr = childNode['s-sn'];\n                // by default always show a fallback slot node\n                // then hide it if there are other slots in the light dom\n                childNode.hidden = false;\n                for (j = 0; j < ilen; j++) {\n                    if (childNodes[j]['s-hn'] !== childNode['s-hn']) {\n                        // this sibling node is from a different component\n                        nodeType = childNodes[j].nodeType;\n                        if (slotNameAttr !== '') {\n                            // this is a named fallback slot node\n                            if (nodeType === 1 /* ElementNode */ && slotNameAttr === childNodes[j].getAttribute('slot')) {\n                                childNode.hidden = true;\n                                break;\n                            }\n                        }\n                        else {\n                            // this is a default fallback slot node\n                            // any element or text node (with content)\n                            // should hide the default fallback slot node\n                            if (nodeType === 1 /* ElementNode */ || (nodeType === 3 /* TextNode */ && childNodes[j].textContent.trim() !== '')) {\n                                childNode.hidden = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            // keep drilling down\n            updateFallbackSlotVisibility(childNode);\n        }\n    }\n};\nvar relocateNodes = [];\nvar relocateSlotContent = function (elm) {\n    // tslint:disable-next-line: prefer-const\n    var childNode;\n    var node;\n    var hostContentNodes;\n    var slotNameAttr;\n    var relocateNodeData;\n    var j;\n    var i = 0;\n    var childNodes = elm.childNodes;\n    var ilen = childNodes.length;\n    for (; i < ilen; i++) {\n        childNode = childNodes[i];\n        if (childNode['s-sr'] && (node = childNode['s-cr'])) {\n            // first got the content reference comment node\n            // then we got it's parent, which is where all the host content is in now\n            hostContentNodes = node.parentNode.childNodes;\n            slotNameAttr = childNode['s-sn'];\n            for (j = hostContentNodes.length - 1; j >= 0; j--) {\n                node = hostContentNodes[j];\n                if (!node['s-cn'] && !node['s-nr'] && node['s-hn'] !== childNode['s-hn']) {\n                    // let's do some relocating to its new home\n                    // but never relocate a content reference node\n                    // that is suppose to always represent the original content location\n                    if (isNodeLocatedInSlot(node, slotNameAttr)) {\n                        // it's possible we've already decided to relocate this node\n                        relocateNodeData = relocateNodes.find(function (r) { return r.$nodeToRelocate$ === node; });\n                        // made some changes to slots\n                        // let's make sure we also double check\n                        // fallbacks are correctly hidden or shown\n                        checkSlotFallbackVisibility = true;\n                        node['s-sn'] = node['s-sn'] || slotNameAttr;\n                        if (relocateNodeData) {\n                            // previously we never found a slot home for this node\n                            // but turns out we did, so let's remember it now\n                            relocateNodeData.$slotRefNode$ = childNode;\n                        }\n                        else {\n                            // add to our list of nodes to relocate\n                            relocateNodes.push({\n                                $slotRefNode$: childNode,\n                                $nodeToRelocate$: node,\n                            });\n                        }\n                        if (node['s-sr']) {\n                            relocateNodes.map(function (relocateNode) {\n                                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {\n                                    relocateNodeData = relocateNodes.find(function (r) { return r.$nodeToRelocate$ === node; });\n                                    if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                                        relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (!relocateNodes.some(function (r) { return r.$nodeToRelocate$ === node; })) {\n                        // so far this element does not have a slot home, not setting slotRefNode on purpose\n                        // if we never find a home for this element then we'll need to hide it\n                        relocateNodes.push({\n                            $nodeToRelocate$: node,\n                        });\n                    }\n                }\n            }\n        }\n        if (childNode.nodeType === 1 /* ElementNode */) {\n            relocateSlotContent(childNode);\n        }\n    }\n};\nvar isNodeLocatedInSlot = function (nodeToRelocate, slotNameAttr) {\n    if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n        if (nodeToRelocate.getAttribute('slot') === null && slotNameAttr === '') {\n            return true;\n        }\n        if (nodeToRelocate.getAttribute('slot') === slotNameAttr) {\n            return true;\n        }\n        return false;\n    }\n    if (nodeToRelocate['s-sn'] === slotNameAttr) {\n        return true;\n    }\n    return slotNameAttr === '';\n};\nvar callNodeRefs = function (vNode) {\n    {\n        vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n        vNode.$children$ && vNode.$children$.map(callNodeRefs);\n    }\n};\nvar renderVdom = function (hostRef, renderFnResults) {\n    var hostElm = hostRef.$hostElement$;\n    var cmpMeta = hostRef.$cmpMeta$;\n    var oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    var rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = (hostElm.shadowRoot || hostElm);\n    {\n        scopeId = hostElm['s-sc'];\n    }\n    {\n        contentRef = hostElm['s-cr'];\n        useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;\n        // always reset\n        checkSlotFallbackVisibility = false;\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode);\n    {\n        // while we're moving nodes around existing nodes, temporarily disable\n        // the disconnectCallback from working\n        plt.$flags$ |= 1 /* isTmpDisconnected */;\n        if (checkSlotRelocate) {\n            relocateSlotContent(rootVnode.$elm$);\n            var relocateData = void 0;\n            var nodeToRelocate = void 0;\n            var orgLocationNode = void 0;\n            var parentNodeRef = void 0;\n            var insertBeforeNode = void 0;\n            var refNode = void 0;\n            var i = 0;\n            for (; i < relocateNodes.length; i++) {\n                relocateData = relocateNodes[i];\n                nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (!nodeToRelocate['s-ol']) {\n                    // add a reference node marking this node's original location\n                    // keep a reference to this node for later lookups\n                    orgLocationNode = doc.createTextNode('');\n                    orgLocationNode['s-nr'] = nodeToRelocate;\n                    nodeToRelocate.parentNode.insertBefore((nodeToRelocate['s-ol'] = orgLocationNode), nodeToRelocate);\n                }\n            }\n            for (i = 0; i < relocateNodes.length; i++) {\n                relocateData = relocateNodes[i];\n                nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (relocateData.$slotRefNode$) {\n                    // by default we're just going to insert it directly\n                    // after the slot reference node\n                    parentNodeRef = relocateData.$slotRefNode$.parentNode;\n                    insertBeforeNode = relocateData.$slotRefNode$.nextSibling;\n                    orgLocationNode = nodeToRelocate['s-ol'];\n                    while ((orgLocationNode = orgLocationNode.previousSibling)) {\n                        refNode = orgLocationNode['s-nr'];\n                        if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {\n                            refNode = refNode.nextSibling;\n                            if (!refNode || !refNode['s-nr']) {\n                                insertBeforeNode = refNode;\n                                break;\n                            }\n                        }\n                    }\n                    if ((!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode) || nodeToRelocate.nextSibling !== insertBeforeNode) {\n                        // we've checked that it's worth while to relocate\n                        // since that the node to relocate\n                        // has a different next sibling or parent relocated\n                        if (nodeToRelocate !== insertBeforeNode) {\n                            if (!nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {\n                                // probably a component in the index.html that doesn't have it's hostname set\n                                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;\n                            }\n                            // add it back to the dom but in its new home\n                            parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n                        }\n                    }\n                }\n                else {\n                    // this node doesn't have a slot home to go to, so let's hide it\n                    if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n                        nodeToRelocate.hidden = true;\n                    }\n                }\n            }\n        }\n        if (checkSlotFallbackVisibility) {\n            updateFallbackSlotVisibility(rootVnode.$elm$);\n        }\n        // done moving nodes around\n        // allow the disconnect callback to work again\n        plt.$flags$ &= ~1 /* isTmpDisconnected */;\n        // always reset\n        relocateNodes.length = 0;\n    }\n};\nvar getElement = function (ref) { return (getHostRef(ref).$hostElement$); };\nvar emitEvent = function (elm, name, opts) {\n    var ev = new (CustomEvent)(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nvar attachToAncestor = function (hostRef, ancestorComponent) {\n    if (ancestorComponent && !hostRef.$onRenderResolve$) {\n        ancestorComponent['s-p'].push(new Promise(function (r) { return (hostRef.$onRenderResolve$ = r); }));\n    }\n};\nvar scheduleUpdate = function (hostRef, isInitialLoad) {\n    {\n        hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n    }\n    if (hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* needsRerender */;\n        return;\n    }\n    var endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    var ancestorComponent = hostRef.$ancestorComponent$;\n    var instance = hostRef.$lazyInstance$;\n    var update = function () { return updateComponent(hostRef, instance, isInitialLoad); };\n    attachToAncestor(hostRef, ancestorComponent);\n    var promise;\n    if (isInitialLoad) {\n        {\n            hostRef.$flags$ |= 256 /* isListenReady */;\n            if (hostRef.$queuedListeners$) {\n                hostRef.$queuedListeners$.map(function (_a) {\n                    var methodName = _a[0], event = _a[1];\n                    return safeCall(instance, methodName, event);\n                });\n                hostRef.$queuedListeners$ = null;\n            }\n        }\n        {\n            promise = safeCall(instance, 'componentWillLoad');\n        }\n    }\n    endSchedule();\n    // there is no ancestorc omponent or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    return then(promise, function () { return writeTask(update); });\n};\nvar updateComponent = function (hostRef, instance, isInitialLoad) {\n    // updateComponent\n    var elm = hostRef.$hostElement$;\n    var endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    var rc = elm['s-rc'];\n    if (isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    var endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    {\n        {\n            // looks like we've got child nodes to render into this host element\n            // or we need to update the css class/attrs on the host element\n            // DOM WRITE!\n            renderVdom(hostRef, callRender(instance));\n        }\n    }\n    if (plt.$cssShim$) {\n        plt.$cssShim$.updateHost(elm);\n    }\n    {\n        hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n    }\n    {\n        hostRef.$flags$ |= 2 /* hasRendered */;\n    }\n    if (rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map(function (cb) { return cb(); });\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    {\n        var childrenPromises = elm['s-p'];\n        var postUpdate = function () { return postUpdateComponent(hostRef); };\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n};\nvar callRender = function (instance) {\n    try {\n        instance = instance.render();\n    }\n    catch (e) {\n        consoleError(e);\n    }\n    return instance;\n};\nvar postUpdateComponent = function (hostRef) {\n    var tagName = hostRef.$cmpMeta$.$tagName$;\n    var elm = hostRef.$hostElement$;\n    var endPostUpdate = createTime('postUpdate', tagName);\n    var ancestorComponent = hostRef.$ancestorComponent$;\n    if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n        {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        endPostUpdate();\n        {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad();\n            }\n        }\n    }\n    else {\n        endPostUpdate();\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* needsRerender */) {\n            nextTick(function () { return scheduleUpdate(hostRef, false); });\n        }\n        hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nvar forceUpdate = function (ref) {\n    {\n        var hostRef = getHostRef(ref);\n        var isConnected = hostRef.$hostElement$.isConnected;\n        if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n            scheduleUpdate(hostRef, false);\n        }\n        // Returns \"true\" when the forced update was successfully scheduled\n        return isConnected;\n    }\n};\nvar appDidLoad = function (who) {\n    // on appload\n    // we have finish the first big initial render\n    {\n        addHydratedFlag(doc.documentElement);\n    }\n    {\n        plt.$flags$ |= 2 /* appLoaded */;\n    }\n    nextTick(function () { return emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }); });\n};\nvar safeCall = function (instance, method, arg) {\n    if (instance && instance[method]) {\n        try {\n            return instance[method](arg);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    return undefined;\n};\nvar then = function (promise, thenFn) {\n    return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\nvar addHydratedFlag = function (elm) { return (elm.classList.add('hydrated')); };\nvar parsePropertyValue = function (propValue, propType) {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if (propType & 4 /* Boolean */) {\n            // per the HTML spec, any string value means it is a boolean true value\n            // but we'll cheat here and say that the string \"false\" is the boolean false\n            return propValue === 'false' ? false : propValue === '' || !!propValue;\n        }\n        if (propType & 1 /* String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nvar getValue = function (ref, propName) { return getHostRef(ref).$instanceValues$.get(propName); };\nvar setValue = function (ref, propName, newVal, cmpMeta) {\n    // check our new property value against our internal value\n    var hostRef = getHostRef(ref);\n    var oldVal = hostRef.$instanceValues$.get(propName);\n    var flags = hostRef.$flags$;\n    var instance = hostRef.$lazyInstance$;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    if ((!(flags & 8 /* isConstructingInstance */) || oldVal === undefined) && newVal !== oldVal) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if (instance) {\n            // get an array of method names of watch functions to call\n            if (cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n                var watchMethods = cmpMeta.$watchers$[propName];\n                if (watchMethods) {\n                    // this instance is watching for when this property changed\n                    watchMethods.map(function (watchMethodName) {\n                        try {\n                            // fire off each of the watch methods that are watching this property\n                            instance[watchMethodName](newVal, oldVal, propName);\n                        }\n                        catch (e) {\n                            consoleError(e);\n                        }\n                    });\n                }\n            }\n            if ((flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(hostRef, false);\n            }\n        }\n    }\n};\nvar proxyComponent = function (Cstr, cmpMeta, flags) {\n    if (cmpMeta.$members$) {\n        if (Cstr.watchers) {\n            cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        // It's better to have a const than two Object.entries()\n        var members = Object.entries(cmpMeta.$members$);\n        var prototype_1 = Cstr.prototype;\n        members.map(function (_a) {\n            var memberName = _a[0], memberFlags = _a[1][0];\n            if ((memberFlags & 31 /* Prop */ || ((flags & 2 /* proxyState */) && memberFlags & 32 /* State */))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype_1, memberName, {\n                    get: function () {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set: function (newValue) {\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true,\n                });\n            }\n        });\n        if ((flags & 1 /* isElementConstructor */)) {\n            var attrNameToPropName_1 = new Map();\n            prototype_1.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n                var _this = this;\n                plt.jmp(function () {\n                    var propName = attrNameToPropName_1.get(attrName);\n                    _this[propName] = newValue === null && typeof _this[propName] === 'boolean' ? false : newValue;\n                });\n            };\n            // create an array of attributes to observe\n            // and also create a map of html attribute name to js property name\n            Cstr.observedAttributes = members\n                .filter(function (_a) {\n                var _ = _a[0], m = _a[1];\n                return m[0] & 15;\n            } /* HasAttribute */) // filter to only keep props that should match attributes\n                .map(function (_a) {\n                var propName = _a[0], m = _a[1];\n                var attrName = m[1] || propName;\n                attrNameToPropName_1.set(attrName, propName);\n                return attrName;\n            });\n        }\n    }\n    return Cstr;\n};\nvar initializeComponent = function (elm, hostRef, cmpMeta, hmrVersionId, Cstr) { return __awaiter(void 0, void 0, void 0, function () {\n    var endLoad, endNewInstance, scopeId_1, endRegisterStyles, style_1, ancestorComponent, schedule;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0)) return [3 /*break*/, 5];\n                // we haven't initialized this element yet\n                hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n                // lazy loaded components\n                // request the component's implementation to be\n                // wired up with the host element\n                Cstr = loadModule(cmpMeta);\n                if (!Cstr.then) return [3 /*break*/, 2];\n                endLoad = uniqueTime();\n                return [4 /*yield*/, Cstr];\n            case 1:\n                Cstr = _a.sent();\n                endLoad();\n                _a.label = 2;\n            case 2:\n                if (!Cstr.isProxied) {\n                    // we'eve never proxied this Constructor before\n                    // let's add the getters/setters to its prototype before\n                    // the first time we create an instance of the implementation\n                    {\n                        cmpMeta.$watchers$ = Cstr.watchers;\n                    }\n                    proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n                    Cstr.isProxied = true;\n                }\n                endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n                // ok, time to construct the instance\n                // but let's keep track of when we start and stop\n                // so that the getters/setters don't incorrectly step on data\n                {\n                    hostRef.$flags$ |= 8 /* isConstructingInstance */;\n                }\n                // construct the lazy-loaded component implementation\n                // passing the hostRef is very important during\n                // construction in order to directly wire together the\n                // host element and the lazy-loaded instance\n                try {\n                    new Cstr(hostRef);\n                }\n                catch (e) {\n                    consoleError(e);\n                }\n                {\n                    hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n                }\n                {\n                    hostRef.$flags$ |= 128 /* isWatchReady */;\n                }\n                endNewInstance();\n                scopeId_1 = getScopeId(cmpMeta.$tagName$);\n                if (!(!styles.has(scopeId_1) && Cstr.style)) return [3 /*break*/, 5];\n                endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                style_1 = Cstr.style;\n                if (!(cmpMeta.$flags$ & 8) /* needsShadowDomShim */) return [3 /*break*/, 4]; /* needsShadowDomShim */\n                return [4 /*yield*/, import('./shadow-css-805c31f3.js').then(function (m) { return m.scopeCss(style_1, scopeId_1, false); })];\n            case 3:\n                style_1 = _a.sent();\n                _a.label = 4;\n            case 4:\n                registerStyle(scopeId_1, style_1, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n                endRegisterStyles();\n                _a.label = 5;\n            case 5:\n                ancestorComponent = hostRef.$ancestorComponent$;\n                schedule = function () { return scheduleUpdate(hostRef, true); };\n                if (ancestorComponent && ancestorComponent['s-rc']) {\n                    // this is the intial load and this component it has an ancestor component\n                    // but the ancestor component has NOT fired its will update lifecycle yet\n                    // so let's just cool our jets and wait for the ancestor to continue first\n                    // this will get fired off when the ancestor component\n                    // finally gets around to rendering its lazy self\n                    // fire off the initial update\n                    ancestorComponent['s-rc'].push(schedule);\n                }\n                else {\n                    schedule();\n                }\n                return [2 /*return*/];\n        }\n    });\n}); };\nvar connectedCallback = function (elm) {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        var hostRef_1 = getHostRef(elm);\n        var cmpMeta_1 = hostRef_1.$cmpMeta$;\n        var endConnected = createTime('connectedCallback', cmpMeta_1.$tagName$);\n        if (!(hostRef_1.$flags$ & 1 /* hasConnected */)) {\n            // first time this component has connected\n            hostRef_1.$flags$ |= 1 /* hasConnected */;\n            {\n                // initUpdate\n                // if the slot polyfill is required we'll need to put some nodes\n                // in here to act as original content anchors as we move nodes around\n                // host element has been connected to the DOM\n                if ((cmpMeta_1.$flags$ & (4 /* hasSlotRelocation */ | 8 /* needsShadowDomShim */))) {\n                    setContentReference(elm);\n                }\n            }\n            {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                var ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if (ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef_1, (hostRef_1.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if (cmpMeta_1.$members$) {\n                Object.entries(cmpMeta_1.$members$).map(function (_a) {\n                    var memberName = _a[0], memberFlags = _a[1][0];\n                    if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n                        var value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            {\n                // connectedCallback, taskQueue, initialLoad\n                // angular sets attribute AFTER connectCallback\n                // https://github.com/angular/angular/issues/18909\n                // https://github.com/angular/angular/issues/19940\n                nextTick(function () { return initializeComponent(elm, hostRef_1, cmpMeta_1); });\n            }\n        }\n        else {\n            // not the first time this has connected\n            // reattach any event listeners to the host\n            // since they would have been removed when disconnected\n            addHostEventListeners(elm, hostRef_1, cmpMeta_1.$listeners$);\n        }\n        endConnected();\n    }\n};\nvar setContentReference = function (elm) {\n    // only required when we're NOT using native shadow dom (slot)\n    // or this browser doesn't support native shadow dom\n    // and this host element was NOT created with SSR\n    // let's pick out the inner content for slot projection\n    // create a node to represent where the original\n    // content was first placed, which is useful later on\n    var contentRefElm = (elm['s-cr'] = doc.createComment(''));\n    contentRefElm['s-cn'] = true;\n    elm.insertBefore(contentRefElm, elm.firstChild);\n};\nvar disconnectedCallback = function (elm) {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        var hostRef = getHostRef(elm);\n        var instance = hostRef.$lazyInstance$;\n        {\n            if (hostRef.$rmListeners$) {\n                hostRef.$rmListeners$.map(function (rmListener) { return rmListener(); });\n                hostRef.$rmListeners$ = undefined;\n            }\n        }\n        // clear CSS var-shim tracking\n        if (plt.$cssShim$) {\n            plt.$cssShim$.removeHost(elm);\n        }\n        {\n            safeCall(instance, 'componentDidUnload');\n        }\n    }\n};\nvar bootstrapLazy = function (lazyBundles, options) {\n    if (options === void 0) { options = {}; }\n    var endBootstrap = createTime();\n    var cmpTags = [];\n    var exclude = options.exclude || [];\n    var customElements = win.customElements;\n    var head = doc.head;\n    var metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    var visibilityStyle = /*@__PURE__*/ doc.createElement('style');\n    var deferredConnectedCallbacks = [];\n    var appLoadFallback;\n    var isBootstrapping = true;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    {\n        if (options.syncQueue) {\n            plt.$flags$ |= 4 /* queueSync */;\n        }\n    }\n    lazyBundles.map(function (lazyBundle) { return lazyBundle[1].map(function (compactMeta) {\n        var cmpMeta = {\n            $flags$: compactMeta[0],\n            $tagName$: compactMeta[1],\n            $members$: compactMeta[2],\n            $listeners$: compactMeta[3],\n        };\n        {\n            cmpMeta.$members$ = compactMeta[2];\n        }\n        {\n            cmpMeta.$listeners$ = compactMeta[3];\n        }\n        {\n            cmpMeta.$watchers$ = {};\n        }\n        if (!supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n        }\n        var tagName = cmpMeta.$tagName$;\n        var HostElement = /** @class */ (function (_super) {\n            __extends(HostElement, _super);\n            // StencilLazyHost\n            function HostElement(self) {\n                var _this = \n                // @ts-ignore\n                _super.call(this, self) || this;\n                self = _this;\n                registerHost(self, cmpMeta);\n                if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n                    // this component is using shadow dom\n                    // and this browser supports shadow dom\n                    // add the read-only property \"shadowRoot\" to the host element\n                    // adding the shadow root build conditionals to minimize runtime\n                    if (supportsShadow) {\n                        {\n                            self.attachShadow({ mode: 'open' });\n                        }\n                    }\n                    else if (!('shadowRoot' in self)) {\n                        self.shadowRoot = self;\n                    }\n                }\n                return _this;\n            }\n            HostElement.prototype.connectedCallback = function () {\n                var _this = this;\n                if (appLoadFallback) {\n                    clearTimeout(appLoadFallback);\n                    appLoadFallback = null;\n                }\n                if (isBootstrapping) {\n                    // connectedCallback will be processed once all components have been registered\n                    deferredConnectedCallbacks.push(this);\n                }\n                else {\n                    plt.jmp(function () { return connectedCallback(_this); });\n                }\n            };\n            HostElement.prototype.disconnectedCallback = function () {\n                var _this = this;\n                plt.jmp(function () { return disconnectedCallback(_this); });\n            };\n            HostElement.prototype.forceUpdate = function () {\n                forceUpdate(this);\n            };\n            HostElement.prototype.componentOnReady = function () {\n                return getHostRef(this).$onReadyPromise$;\n            };\n            return HostElement;\n        }(HTMLElement));\n        cmpMeta.$lazyBundleIds$ = lazyBundle[0];\n        if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n            cmpTags.push(tagName);\n            customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */));\n        }\n    }); });\n    {\n        visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n        visibilityStyle.setAttribute('data-styles', '');\n        head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map(function (host) { return host.connectedCallback(); });\n    }\n    else {\n        {\n            plt.jmp(function () { return (appLoadFallback = setTimeout(appDidLoad, 30)); });\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nvar hostRefs = new WeakMap();\nvar getHostRef = function (ref) { return hostRefs.get(ref); };\nvar registerInstance = function (lazyInstance, hostRef) { return hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef); };\nvar registerHost = function (elm, cmpMeta) {\n    var hostRef = {\n        $flags$: 0,\n        $hostElement$: elm,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    {\n        hostRef.$onReadyPromise$ = new Promise(function (r) { return (hostRef.$onReadyResolve$ = r); });\n        elm['s-p'] = [];\n        elm['s-rc'] = [];\n    }\n    addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n    return hostRefs.set(elm, hostRef);\n};\nvar isMemberInElement = function (elm, memberName) { return memberName in elm; };\nvar consoleError = function (e) { return console.error(e); };\nvar cmpModules = /*@__PURE__*/ new Map();\nvar loadModule = function (cmpMeta, hostRef, hmrVersionId) {\n    // loadModuleImport\n    var exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    var bundleId = (cmpMeta.$lazyBundleIds$);\n    var module = cmpModules.get(bundleId);\n    if (module) {\n        return module[exportName];\n    }\n    return import(\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    \"./\" + bundleId + \".entry.js\" + '').then(function (importedModule) {\n        {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nvar styles = new Map();\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\nvar queueTask = function (queue, write) { return function (cb) {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n}; };\nvar consume = function (queue) {\n    for (var i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nvar consumeTimeout = function (queue, timeout) {\n    var i = 0;\n    var ts = 0;\n    while (i < queue.length && (ts = performance.now()) < timeout) {\n        try {\n            queue[i++](ts);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    if (i === queue.length) {\n        queue.length = 0;\n    }\n    else if (i !== 0) {\n        queue.splice(0, i);\n    }\n};\nvar flush = function () {\n    {\n        queueCongestion++;\n    }\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    {\n        var timeout = (plt.$flags$ & 6 /* queueMask */) === 2 /* appLoaded */ ? performance.now() + 14 * Math.ceil(queueCongestion * (1.0 / 10.0)) : Infinity;\n        consumeTimeout(queueDomWrites, timeout);\n        consumeTimeout(queueDomWritesLow, timeout);\n        if (queueDomWrites.length > 0) {\n            queueDomWritesLow.push.apply(queueDomWritesLow, queueDomWrites);\n            queueDomWrites.length = 0;\n        }\n        if ((queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n        else {\n            queueCongestion = 0;\n        }\n    }\n};\nvar nextTick = /*@__PURE__*/ function (cb) { return promiseResolve().then(cb); };\nvar writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\nvar patchEsm = function () {\n    // @ts-ignore\n    if (!(CSS && CSS.supports && CSS.supports('color', 'var(--c)'))) {\n        // @ts-ignore\n        return import(/* webpackChunkName: \"polyfills-css-shim\" */ './css-shim-d102defa.js').then(function () {\n            if ((plt.$cssShim$ = win.__cssshim)) {\n                return plt.$cssShim$.i();\n            }\n            else {\n                // for better minification\n                return 0;\n            }\n        });\n    }\n    return promiseResolve();\n};\nvar patchBrowser = function () {\n    {\n        // shim css vars\n        plt.$cssShim$ = win.__cssshim;\n    }\n    // @ts-ignore\n    var scriptElm = Array.from(doc.querySelectorAll('script')).find(function (s) { return new RegExp(\"/\" + NAMESPACE + \"(\\\\.esm)?\\\\.js($|\\\\?|#)\").test(s.src) || s.getAttribute('data-stencil-namespace') === NAMESPACE; });\n    var opts = scriptElm['data-opts'] || {};\n    if ('onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {\n        // Safari < v11 support: This IF is true if it's Safari below v11.\n        // This fn cannot use async/await since Safari didn't support it until v11,\n        // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n        // so both the ESM file and nomodule file would get downloaded. Only Safari\n        // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n        return {\n            then: function () {\n                /* promise noop */\n            },\n        };\n    }\n    {\n        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n        {\n            patchDynamicImport(opts.resourcesUrl, scriptElm);\n        }\n        if (!win.customElements) {\n            // module support, but no custom elements support (Old Edge)\n            // @ts-ignore\n            return import(/* webpackChunkName: \"polyfills-dom\" */ './dom-70cf571b.js').then(function () { return opts; });\n        }\n    }\n    return promiseResolve(opts);\n};\nvar patchDynamicImport = function (base, orgScriptElm) {\n    var importFunctionName = getDynamicImportFunction(NAMESPACE);\n    try {\n        // test if this browser supports dynamic imports\n        // There is a caching issue in V8, that breaks using import() in Function\n        // By generating a random string, we can workaround it\n        // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n        win[importFunctionName] = new Function('w', \"return import(w);//\" + Math.random());\n    }\n    catch (e) {\n        // this shim is specifically for browsers that do support \"esm\" imports\n        // however, they do NOT support \"dynamic\" imports\n        // basically this code is for old Edge, v18 and below\n        var moduleMap_1 = new Map();\n        win[importFunctionName] = function (src) {\n            var url = new URL(src, base).href;\n            var mod = moduleMap_1.get(url);\n            if (!mod) {\n                var script_1 = doc.createElement('script');\n                script_1.type = 'module';\n                script_1.crossOrigin = orgScriptElm.crossOrigin;\n                script_1.src = URL.createObjectURL(new Blob([\"import * as m from '\" + url + \"'; window.\" + importFunctionName + \".m = m;\"], { type: 'application/javascript' }));\n                mod = new Promise(function (resolve) {\n                    script_1.onload = function () {\n                        resolve(win[importFunctionName].m);\n                        script_1.remove();\n                    };\n                });\n                moduleMap_1.set(url, mod);\n                doc.head.appendChild(script_1);\n            }\n            return mod;\n        };\n    }\n};\nexport { Host as H, patchEsm as a, bootstrapLazy as b, getElement as g, h, patchBrowser as p, registerInstance as r };\n"]},"metadata":{},"sourceType":"module"}